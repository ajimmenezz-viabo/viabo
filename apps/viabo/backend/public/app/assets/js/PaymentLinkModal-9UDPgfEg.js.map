{"version":3,"file":"PaymentLinkModal-9UDPgfEg.js","sources":["../../../../../frontend/src/app/business/viabo-pay/terminals/adapters/paymentLinkAdapter.js","../../../../../frontend/src/app/business/viabo-pay/terminals/hooks/useCreatePaymentLink.js"],"sourcesContent":["import { getCryptInfo } from '@/shared/utils'\r\n\r\nexport const PaymentLinkAdapter = (terminal, data) => {\r\n  const paymentLink = {\r\n    commerceId: terminal?.commerceId,\r\n    terminalId: terminal?.terminalId,\r\n    amount: parseFloat(data?.amount.toString() === '' ? '0' : data?.amount?.toString().replace(/,/g, '')).toString(),\r\n    clientName: data?.name,\r\n    email: data?.email,\r\n    phone: data?.phone,\r\n    description: data?.concept\r\n  }\r\n\r\n  return getCryptInfo(paymentLink)\r\n}\r\n","import { useMutation } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { createPaymentLink } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useCreatePaymentLink = (options = {}) => {\r\n  const paymentLink = useMutation(createPaymentLink, options)\r\n  const payment = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      await toast.promise(paymentLink.mutateAsync(formData, mutationOptions), {\r\n        pending: 'generando Liga de Pago ...',\r\n        success: {\r\n          render({ data }) {\r\n            onSuccess(data)\r\n            return 'Se creó y envió la liga de pago con éxito'\r\n          }\r\n        }\r\n      })\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operacion en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...paymentLink,\r\n    mutate: payment\r\n  }\r\n}\r\n"],"names":["PaymentLinkAdapter","terminal","data","paymentLink","_a","getCryptInfo","useCreatePaymentLink","options","useMutation","createPaymentLink","formData","onSuccess","onError","mutationOptions","toast","error","errorFormatted","getErrorAPI","getNotificationTypeByErrorCode"],"mappings":"mnCAEO,MAAMA,GAAqB,CAACC,EAAUC,IAAS,OACpD,MAAMC,EAAc,CAClB,WAAYF,GAAA,YAAAA,EAAU,WACtB,WAAYA,GAAA,YAAAA,EAAU,WACtB,OAAQ,YAAWC,GAAA,YAAAA,EAAM,OAAO,cAAe,GAAK,KAAME,EAAAF,GAAA,YAAAA,EAAM,SAAN,YAAAE,EAAc,WAAW,QAAQ,KAAM,GAAG,EAAE,SAAU,EAChH,WAAYF,GAAA,YAAAA,EAAM,KAClB,MAAOA,GAAA,YAAAA,EAAM,MACb,MAAOA,GAAA,YAAAA,EAAM,MACb,YAAaA,GAAA,YAAAA,EAAM,OACpB,EAED,OAAOG,EAAaF,CAAW,CACjC,ECPaG,GAAuB,CAACC,EAAU,KAAO,CACpD,MAAMJ,EAAcK,EAAYC,EAAmBF,CAAO,EA0B1D,MAAO,CACL,GAAGJ,EACH,OA3Bc,MAAOO,EAAUH,IAAY,CAC3C,KAAM,CAAE,UAAAI,EAAW,QAAAC,EAAS,gBAAAC,CAAiB,EAAGN,EAEhD,GAAI,CACF,MAAMO,EAAM,QAAQX,EAAY,YAAYO,EAAUG,CAAe,EAAG,CACtE,QAAS,6BACT,QAAS,CACP,OAAO,CAAE,KAAAX,GAAQ,CACf,OAAAS,EAAUT,CAAI,EACP,2CACR,CACF,CACT,CAAO,CACF,OAAQa,EAAO,CACd,MAAMC,EAAiBC,EACrBF,EACA,8FACD,EACDH,EAAQI,CAAc,EACtBF,EAAM,MAAME,EAAgB,CAC1B,KAAME,EAA+BH,CAAK,CAClD,CAAO,CACF,CACF,CAKA,CACH"}