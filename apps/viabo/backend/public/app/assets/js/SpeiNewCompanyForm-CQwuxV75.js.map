{"version":3,"file":"SpeiNewCompanyForm-CQwuxV75.js","sources":["../../../../../frontend/src/app/business/viabo-spei/companies/adapters/spei-new-company-adapter.js","../../../../../frontend/src/app/business/viabo-spei/companies/hooks/useCreateNewSpeiCompany.js","../../../../../frontend/src/app/business/viabo-spei/companies/hooks/useUpdateSpeiCompany.js","../../../../../frontend/src/app/business/viabo-spei/companies/components/new-company/SpeiNewCompanyForm.jsx"],"sourcesContent":["import { METHODS_NEW_COMPANY_USERS } from './spei-companies-keys'\r\n\r\nexport const SpeiNewCompanyAdapter = company => ({\r\n  fiscalName: company?.fiscalName?.trim(),\r\n  rfc: company?.rfc?.trim(),\r\n  commercialName: company?.commercialName?.trim(),\r\n  isNewUser: company?.method === METHODS_NEW_COMPANY_USERS.NEW_ADMIN_USER,\r\n  assignedUsers: company?.adminUsers?.map(user => user.value) || [],\r\n  userName: company?.adminName?.trim(),\r\n  userLastName: company?.adminLastName?.trim(),\r\n  userEmail: company?.adminEmail?.trim(),\r\n  userPhone: company?.adminPhone?.trim(),\r\n  costCenters: company?.costCenters?.map(user => user.value) || [],\r\n  hasViaboCard: company?.hasViaboCard\r\n})\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { SPEI_COMPANIES_KEYS } from '../adapters'\r\nimport { newSpeiCompany } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\nimport { isFunction } from '@/shared/utils'\r\n\r\nexport const useCreateNewSpeiCompany = (options = {}) => {\r\n  const client = useQueryClient()\r\n  const company = useMutation(newSpeiCompany, options)\r\n  const mutate = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      await toast.promise(company.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Creando empresa...',\r\n        success: {\r\n          render({ data }) {\r\n            client.invalidateQueries([SPEI_COMPANIES_KEYS.COMPANIES_LIST])\r\n            isFunction(onSuccess) && onSuccess(data)\r\n\r\n            return 'Se creó la empresa con éxito'\r\n          }\r\n        }\r\n      })\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operación en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      isFunction(onError) && onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...company,\r\n    mutate\r\n  }\r\n}\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { SPEI_COMPANIES_KEYS } from '../adapters'\r\nimport { updateViaboSpeiCompany } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\nimport { isFunction } from '@/shared/utils'\r\n\r\nexport const useUpdateSpeiCompany = (options = {}) => {\r\n  const client = useQueryClient()\r\n  const company = useMutation(updateViaboSpeiCompany, options)\r\n  const mutate = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      await toast.promise(company.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Actualizando empresa...',\r\n        success: {\r\n          render({ data }) {\r\n            client.invalidateQueries([SPEI_COMPANIES_KEYS.COMPANIES_LIST])\r\n            client.invalidateQueries([SPEI_COMPANIES_KEYS.COMPANY_DETAILS, data?.id])\r\n            isFunction(onSuccess) && onSuccess(data)\r\n\r\n            return 'Se actualizó la empresa con éxito'\r\n          }\r\n        }\r\n      })\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operación en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      isFunction(onError) && onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...company,\r\n    mutate\r\n  }\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nimport { EmailOutlined, Phone } from '@mui/icons-material'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  InputAdornment,\r\n  Radio,\r\n  RadioGroup,\r\n  Stack,\r\n  Typography,\r\n  useTheme\r\n} from '@mui/material'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nimport { METHODS_NEW_COMPANY_USERS, SpeiNewCompanyAdapter } from '../../adapters'\r\nimport { useCreateNewSpeiCompany, useUpdateSpeiCompany } from '../../hooks'\r\n\r\nimport ViaboCard from '@/shared/assets/img/viabo-card.png'\r\nimport { FormProvider, IOSSwitch, RFSelect, RFTextField } from '@/shared/components/form'\r\nimport { Image } from '@/shared/components/images'\r\n\r\nconst SpeiNewCompanyForm = ({ adminCompanyUsers, costCenters, onSuccess, company }) => {\r\n  const { mutate, isLoading } = useCreateNewSpeiCompany()\r\n  const { mutate: updateCompany, isLoading: isUpdatingCompany } = useUpdateSpeiCompany()\r\n\r\n  const ValidationSchema = Yup.object().shape({\r\n    fiscalName: Yup.string().trim().required('Es necesario el nombre fiscal'),\r\n    rfc: Yup.string().trim().required('Es necesario el rfc'),\r\n    commercialName: Yup.string().trim().max(100, 'Máximo 100 caracteres'),\r\n    adminUsers: Yup.array().when('method', {\r\n      is: METHODS_NEW_COMPANY_USERS.ADMIN_USERS,\r\n      then: schema => schema.min(1, 'Es necesario al menos un usuario administrador asignado a la empresa'),\r\n      otherwise: schema => Yup.array()\r\n    }),\r\n    adminName: Yup.string()\r\n      .trim()\r\n      .when('method', {\r\n        is: METHODS_NEW_COMPANY_USERS.NEW_ADMIN_USER,\r\n        then: schema => schema.required('Es necesario el nombre del administrador'),\r\n        otherwise: schema => Yup.string().trim()\r\n      }),\r\n    adminLastName: Yup.string()\r\n      .trim()\r\n      .when('method', {\r\n        is: METHODS_NEW_COMPANY_USERS.NEW_ADMIN_USER,\r\n        then: schema => schema.required('Es necesario los apellidos del administrador'),\r\n        otherwise: schema => Yup.string().trim()\r\n      }),\r\n    adminEmail: Yup.string()\r\n      .trim()\r\n      .email('Ingrese un correo valido')\r\n      .when('method', {\r\n        is: METHODS_NEW_COMPANY_USERS.NEW_ADMIN_USER,\r\n        then: schema => schema.required('Es necesario el correo del administrador'),\r\n        otherwise: schema => Yup.string().trim().email('Ingrese un correo valido')\r\n      }),\r\n    adminPhone: Yup.string().trim(),\r\n    hasViaboCard: Yup.bool(),\r\n    costCenters: Yup.array()\r\n  })\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      fiscalName: company?.fiscalName || '',\r\n      commercialName: company?.commercialName || '',\r\n      rfc: company?.rfc || '',\r\n      method: METHODS_NEW_COMPANY_USERS.ADMIN_USERS,\r\n      adminUsers: adminCompanyUsers?.filter(admin => company?.adminUsers?.includes(admin?.value)) || [],\r\n      costCenters: costCenters?.filter(costCenter => company?.costCenters?.includes(costCenter?.value)) || [],\r\n      adminName: '',\r\n      adminLastName: '',\r\n      adminEmail: '',\r\n      adminPhone: '',\r\n      hasViaboCard: false\r\n    },\r\n    enableReinitialize: true,\r\n    validationSchema: ValidationSchema,\r\n    onSubmit: (values, { setSubmitting, setFieldValue }) => {\r\n      const newCompany = SpeiNewCompanyAdapter(values)\r\n\r\n      if (company) {\r\n        return updateCompany(\r\n          { ...newCompany, id: company?.id },\r\n          {\r\n            onSuccess: () => {\r\n              onSuccess()\r\n              setSubmitting(false)\r\n            },\r\n            onError: () => {\r\n              setSubmitting(false)\r\n            }\r\n          }\r\n        )\r\n      }\r\n\r\n      return mutate(newCompany, {\r\n        onSuccess: () => {\r\n          onSuccess()\r\n          setSubmitting(false)\r\n        },\r\n        onError: () => {\r\n          setSubmitting(false)\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  const { isSubmitting, setFieldValue, values, setTouched } = formik\r\n\r\n  const loading = isSubmitting || isLoading || isUpdatingCompany\r\n\r\n  const theme = useTheme()\r\n\r\n  return (\r\n    <FormProvider formik={formik}>\r\n      <Stack spacing={2}>\r\n        <Stack spacing={1}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Nombre Fiscal\r\n            <Box component={'span'} color={'error.main'} ml={0.5}>\r\n              *\r\n            </Box>\r\n          </Typography>\r\n\r\n          <RFTextField\r\n            required\r\n            name={'fiscalName'}\r\n            size={'small'}\r\n            disabled={loading}\r\n            placeholder={'Nombre Fiscal de la Empresa...'}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack spacing={1}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            RFC\r\n            <Box component={'span'} color={'error.main'} ml={0.5}>\r\n              *\r\n            </Box>\r\n          </Typography>\r\n          {company ? (\r\n            <Typography variant={'subtitle1'}>{values?.rfc}</Typography>\r\n          ) : (\r\n            <RFTextField required name={'rfc'} size={'small'} placeholder={'RFC de la Empresa...'} disabled={loading} />\r\n          )}\r\n        </Stack>\r\n\r\n        <Stack spacing={1}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Nombre Comercial\r\n          </Typography>\r\n\r\n          <RFTextField\r\n            inputProps={{ maxLength: '100' }}\r\n            name={'commercialName'}\r\n            size={'small'}\r\n            placeholder={'Nombre Comercial de la Empresa...'}\r\n            disabled={loading}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack>\r\n          <FormControl disabled={loading}>\r\n            <FormLabel id=\"demo-row-radio-buttons-group-label\">Seleccione al administrador de la empresa:</FormLabel>\r\n            <RadioGroup\r\n              value={values.method}\r\n              onChange={e => {\r\n                !company && setFieldValue('adminUsers', [])\r\n                setFieldValue('adminName', '')\r\n                setFieldValue('adminLastName', '')\r\n                setFieldValue('adminEmail', '')\r\n                setFieldValue('adminPhone', '')\r\n                setFieldValue('method', e.target.value)\r\n                setTouched({}, false)\r\n              }}\r\n              row\r\n              aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n              name=\"row-radio-buttons-group\"\r\n            >\r\n              <FormControlLabel\r\n                value={METHODS_NEW_COMPANY_USERS.ADMIN_USERS}\r\n                control={<Radio />}\r\n                label=\"Administrador de Empresa Existente\"\r\n              />\r\n              <FormControlLabel\r\n                value={METHODS_NEW_COMPANY_USERS.NEW_ADMIN_USER}\r\n                control={<Radio />}\r\n                label=\"Nuevo Administrador de Empresa\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Stack>\r\n        {values.method === METHODS_NEW_COMPANY_USERS.ADMIN_USERS ? (\r\n          <Stack spacing={1}>\r\n            <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n              Usuarios Administradores\r\n              <Box component={'span'} color={'error.main'} ml={0.5}>\r\n                *\r\n              </Box>\r\n            </Typography>\r\n\r\n            <RFSelect\r\n              multiple\r\n              name={'adminUsers'}\r\n              textFieldParams={{ placeholder: 'Seleccionar ...', size: 'small' }}\r\n              options={adminCompanyUsers || []}\r\n              disabled={loading}\r\n            />\r\n          </Stack>\r\n        ) : (\r\n          <>\r\n            <Stack spacing={1}>\r\n              <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n                Nombre (s)\r\n                <Box component={'span'} color={'error.main'} ml={0.5}>\r\n                  *\r\n                </Box>\r\n              </Typography>\r\n\r\n              <RFTextField\r\n                name={'adminName'}\r\n                size={'small'}\r\n                required\r\n                placeholder={'Nombre Administrador de la Empresa...'}\r\n                disabled={loading}\r\n              />\r\n            </Stack>\r\n\r\n            <Stack spacing={1}>\r\n              <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n                Apellido (s)\r\n                <Box component={'span'} color={'error.main'} ml={0.5}>\r\n                  *\r\n                </Box>\r\n              </Typography>\r\n\r\n              <RFTextField\r\n                name={'adminLastName'}\r\n                size={'small'}\r\n                required\r\n                placeholder={'Apellidos del Administrador de la Empresa...'}\r\n                disabled={loading}\r\n              />\r\n            </Stack>\r\n\r\n            <Stack flexDirection={{ md: 'row' }} gap={2}>\r\n              <Stack spacing={1} flex={1}>\r\n                <Typography type={'email'} paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n                  Correo\r\n                  <Box component={'span'} color={'error.main'} ml={0.5}>\r\n                    *\r\n                  </Box>\r\n                </Typography>\r\n\r\n                <RFTextField\r\n                  name={'adminEmail'}\r\n                  size={'small'}\r\n                  required\r\n                  placeholder={'admin.company@domino.com...'}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <EmailOutlined />\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                  disabled={loading}\r\n                />\r\n              </Stack>\r\n\r\n              <Stack spacing={1}>\r\n                <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n                  Teléfono\r\n                </Typography>\r\n                <RFTextField\r\n                  name={'adminPhone'}\r\n                  type={'tel'}\r\n                  size={'small'}\r\n                  placeholder={'55 5555 5555'}\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <Phone />\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                  disabled={loading}\r\n                />\r\n              </Stack>\r\n            </Stack>\r\n          </>\r\n        )}\r\n\r\n        <Stack spacing={1}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Centros de Costos\r\n          </Typography>\r\n\r\n          <RFSelect\r\n            multiple\r\n            name={'costCenters'}\r\n            textFieldParams={{ placeholder: 'Seleccionar ...', size: 'small' }}\r\n            options={costCenters || []}\r\n            disabled={loading}\r\n          />\r\n        </Stack>\r\n\r\n        <Stack spacing={1}>\r\n          <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n            Servicios\r\n          </Typography>\r\n\r\n          <Stack justifyContent={'space-between'} flexDirection={'row'} alignItems={'center'}>\r\n            <Image\r\n              disabledEffect\r\n              visibleByDefault\r\n              alt=\"logo\"\r\n              src={ViaboCard}\r\n              sx={{\r\n                maxWidth: 150,\r\n                width: 100,\r\n                filter: theme?.palette.mode === 'dark' ? 'brightness(0) invert(1) grayscale(100%)' : 'none'\r\n              }}\r\n            />\r\n\r\n            <IOSSwitch\r\n              disabled={isLoading}\r\n              size=\"md\"\r\n              color={!values.hasViaboCard ? 'error' : 'success'}\r\n              checked={Boolean(values.hasViaboCard) || false}\r\n              inputProps={{ 'aria-label': 'controlled' }}\r\n              onChange={() => {\r\n                setFieldValue('hasViaboCard', !values.hasViaboCard)\r\n              }}\r\n            />\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <Stack sx={{ pt: 1 }}>\r\n          <LoadingButton size={'large'} loading={loading} variant=\"contained\" color=\"primary\" fullWidth type=\"submit\">\r\n            {company ? 'Actualizar' : 'Crear'}\r\n          </LoadingButton>\r\n        </Stack>\r\n      </Stack>\r\n    </FormProvider>\r\n  )\r\n}\r\n\r\nSpeiNewCompanyForm.propTypes = {\r\n  adminCompanyUsers: PropTypes.array,\r\n  company: PropTypes.shape({\r\n    adminUsers: PropTypes.array,\r\n    commercialName: PropTypes.string,\r\n    costCenters: PropTypes.array,\r\n    fiscalName: PropTypes.string,\r\n    id: PropTypes.any,\r\n    rfc: PropTypes.string\r\n  }),\r\n  costCenters: PropTypes.array,\r\n  onSuccess: PropTypes.func\r\n}\r\n\r\nexport default SpeiNewCompanyForm\r\n"],"names":["SpeiNewCompanyAdapter","company","_a","_b","_c","METHODS_NEW_COMPANY_USERS","_d","user","_e","_f","_g","_h","_i","useCreateNewSpeiCompany","options","client","useQueryClient","useMutation","newSpeiCompany","formData","onSuccess","onError","mutationOptions","toast","data","SPEI_COMPANIES_KEYS","isFunction","error","errorFormatted","getErrorAPI","getNotificationTypeByErrorCode","useUpdateSpeiCompany","updateViaboSpeiCompany","SpeiNewCompanyForm","adminCompanyUsers","costCenters","mutate","isLoading","updateCompany","isUpdatingCompany","ValidationSchema","Yup","shape","fiscalName","trim","required","rfc","commercialName","max","adminUsers","when","is","ADMIN_USERS","then","schema","min","otherwise","adminName","NEW_ADMIN_USER","string","adminLastName","adminEmail","email","adminPhone","hasViaboCard","formik","useFormik","initialValues","method","filter","includes","admin","value","costCenter","enableReinitialize","validationSchema","onSubmit","values","setSubmitting","setFieldValue","newCompany","id","isSubmitting","setTouched","loading","theme","useTheme","FormProvider","jsxs","Stack","Typography","color","jsx","Box","RFTextField","maxLength","FormControl","FormLabel","RadioGroup","e","target","FormControlLabel","Radio","RFSelect","placeholder","size","Fragment","md","startAdornment","InputAdornment","EmailOutlined","Phone","Image","ViaboCard","maxWidth","width","palette","mode","IOSSwitch","Boolean","pt","LoadingButton","propTypes","PropTypes","array","any","func"],"mappings":"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"}