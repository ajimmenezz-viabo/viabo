{"version":3,"file":"ResumeTransactionForm-6D8Q-sz8.js","sources":["../../../../../frontend/src/app/business/viabo-card/cards/adapters/cardTransactionsAdapter.js","../../../../../frontend/src/app/business/viabo-card/cards/hooks/useTransactionCard.js"],"sourcesContent":["import { getCryptInfo } from '@/shared/utils'\r\n\r\nexport const CardTransactionsAdapter = (originCardId, transactions, concept, isGlobal) => {\r\n  let adaptedData\r\n  if (isGlobal) {\r\n    adaptedData = {\r\n      originCardId,\r\n      destinationCards: [\r\n        {\r\n          cardId: transactions?.card?.value.toString(),\r\n          concept: concept?.toString() || '',\r\n          amount: parseFloat(\r\n            transactions?.amount.toString() === '' ? '0' : transactions?.amount?.toString().replace(/,/g, '')\r\n          ).toString()\r\n        }\r\n      ]\r\n    }\r\n  } else {\r\n    adaptedData = {\r\n      originCardId,\r\n      destinationCards: transactions?.map(transaction => ({\r\n        cardId: transaction?.card?.value?.toString(),\r\n        concept: concept?.toString() || '',\r\n        amount: parseFloat(\r\n          transaction?.amount.toString() === '' ? '0' : transaction?.amount?.toString().replace(/,/g, '')\r\n        ).toString()\r\n      }))\r\n    }\r\n  }\r\n\r\n  return {\r\n    cardId: adaptedData?.originCardId,\r\n    data: getCryptInfo(adaptedData)\r\n  }\r\n}\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { CARDS_COMMERCES_KEYS } from '@/app/business/viabo-card/cards/adapters'\r\nimport { transactionsCard } from '@/app/business/viabo-card/cards/services'\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useTransactionCard = (options = {}) => {\r\n  const client = useQueryClient()\r\n\r\n  const transactionMutate = useMutation(transactionsCard, options)\r\n  const transaction = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      await toast.promise(transactionMutate.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Procesando Transferencia ...',\r\n        success: {\r\n          render({ data: transactions }) {\r\n            client.fetchQuery([CARDS_COMMERCES_KEYS.TRANSIT_BALANCE])\r\n            client.invalidateQueries([CARDS_COMMERCES_KEYS.CARD_INFO, transactions?.cardId])\r\n            client.fetchQuery([CARDS_COMMERCES_KEYS.CARD_MOVEMENTS, transactions?.cardId])\r\n            client.fetchQuery([CARDS_COMMERCES_KEYS.MAIN_CARD])\r\n            onSuccess(transactions)\r\n            return 'Se realizo la transferencia con éxito'\r\n          }\r\n        }\r\n      })\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operación en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...transactionMutate,\r\n    transaction\r\n  }\r\n}\r\n"],"names":["CardTransactionsAdapter","originCardId","transactions","concept","isGlobal","adaptedData","_a","_b","transaction","_c","getCryptInfo","useTransactionCard","options","client","useQueryClient","transactionMutate","useMutation","transactionsCard","formData","onSuccess","onError","mutationOptions","toast","CARDS_COMMERCES_KEYS","error","errorFormatted","getErrorAPI","getNotificationTypeByErrorCode"],"mappings":"2rBAEO,MAAMA,EAA0B,CAACC,EAAcC,EAAcC,EAASC,IAAa,SACxF,IAAIC,EACJ,OAAID,EACFC,EAAc,CACZ,aAAAJ,EACA,iBAAkB,CAChB,CACE,QAAQK,EAAAJ,GAAA,YAAAA,EAAc,OAAd,YAAAI,EAAoB,MAAM,WAClC,SAASH,GAAA,YAAAA,EAAS,aAAc,GAChC,OAAQ,YACND,GAAA,YAAAA,EAAc,OAAO,cAAe,GAAK,KAAMK,EAAAL,GAAA,YAAAA,EAAc,SAAd,YAAAK,EAAsB,WAAW,QAAQ,KAAM,GAC/F,EAAC,SAAU,CACb,CACF,CACF,EAEDF,EAAc,CACZ,aAAAJ,EACA,iBAAkBC,GAAA,YAAAA,EAAc,IAAIM,GAAgB,WAAA,OAClD,QAAQD,GAAAD,EAAAE,GAAA,YAAAA,EAAa,OAAb,YAAAF,EAAmB,QAAnB,YAAAC,EAA0B,WAClC,SAASJ,GAAA,YAAAA,EAAS,aAAc,GAChC,OAAQ,YACNK,GAAA,YAAAA,EAAa,OAAO,cAAe,GAAK,KAAMC,EAAAD,GAAA,YAAAA,EAAa,SAAb,YAAAC,EAAqB,WAAW,QAAQ,KAAM,GAC7F,EAAC,SAAU,CACpB,GACK,EAGI,CACL,OAAQJ,GAAA,YAAAA,EAAa,aACrB,KAAMK,EAAaL,CAAW,CAC/B,CACH,EC3BaM,EAAqB,CAACC,EAAU,KAAO,CAClD,MAAMC,EAASC,EAAgB,EAEzBC,EAAoBC,EAAYC,EAAkBL,CAAO,EA8B/D,MAAO,CACL,GAAGG,EACH,YA/BkB,MAAOG,EAAUN,IAAY,CAC/C,KAAM,CAAE,UAAAO,EAAW,QAAAC,EAAS,gBAAAC,CAAiB,EAAGT,EAEhD,GAAI,CACF,MAAMU,EAAM,QAAQP,EAAkB,YAAYG,EAAUG,CAAe,EAAG,CAC5E,QAAS,+BACT,QAAS,CACP,OAAO,CAAE,KAAMnB,GAAgB,CAC7B,OAAAW,EAAO,WAAW,CAACU,EAAqB,eAAe,CAAC,EACxDV,EAAO,kBAAkB,CAACU,EAAqB,UAAWrB,GAAA,YAAAA,EAAc,MAAM,CAAC,EAC/EW,EAAO,WAAW,CAACU,EAAqB,eAAgBrB,GAAA,YAAAA,EAAc,MAAM,CAAC,EAC7EW,EAAO,WAAW,CAACU,EAAqB,SAAS,CAAC,EAClDJ,EAAUjB,CAAY,EACf,uCACR,CACF,CACT,CAAO,CACF,OAAQsB,EAAO,CACd,MAAMC,EAAiBC,EACrBF,EACA,8FACD,EACDJ,EAAQK,CAAc,EACtBH,EAAM,MAAMG,EAAgB,CAC1B,KAAME,EAA+BH,CAAK,CAClD,CAAO,CACF,CACF,CAKA,CACH"}