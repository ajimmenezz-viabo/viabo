{"version":3,"mappings":"urBAIO,MAAMA,EAA0B,KAU9B,CACL,cAVoBC,EAAO,QAC3B,IAAM,CACJ,CAAE,KAAM,SAAU,KAAM,GAAK,EAC7B,CAAE,KAAMC,EAAkB,KAAK,KAAM,KAAMC,EAAiB,cAAgB,EAC5E,CAAE,KAAM,qBAAuB,CAChC,EACD,CAAE,CACH,CAIA,kiBCNI,MAAMC,EAA+B,CAACC,EAAU,KAAO,CAC5D,KAAM,CAACC,EAAaC,CAAc,EAAIC,WAAS,IAAI,EAE7CC,EAAQC,EAAS,CACrB,SAAU,CAACC,EAAyB,mBAAmB,EACvD,QAASC,EACT,qBAAsB,GACtB,MAAO,GACP,UAAW,IACX,GAAGP,CACP,CAAG,EAEDQ,mBAAU,IAAM,CACd,GAAIJ,GAAA,MAAAA,EAAO,QAAS,CAClB,MAAMK,EAAeC,EACnBN,EAAM,MACN,8FACD,EACDF,EAAeO,CAAY,EAC3BE,EAAM,MAAMF,EAAc,CACxB,KAAMG,EAA+BR,EAAM,KAAK,CACxD,CAAO,CACF,CACF,EAAE,CAACA,EAAM,QAASA,EAAM,KAAK,CAAC,EAExB,CACL,GAAGA,EACH,MAAOH,GAAe,IACvB,CACH","names":["useViaboSpeiBreadCrumbs","useMemo","VIABO_SPEI_ROUTES","VIABO_SPEI_PATHS","useFindSpeiThirdAccountsList","options","customError","setCustomError","useState","query","useQuery","SPEI_THIRD_ACCOUNTS_KEYS","getSpeiThirdAccountsList","useEffect","errorMessage","getErrorAPI","toast","getNotificationTypeByErrorCode"],"sources":["../../../../../frontend/src/app/business/viabo-spei/shared/hooks/useViaboSpeiBreadCrumbs.js","../../../../../frontend/src/app/business/viabo-spei/third-accounts/hooks/useFindSpeiThirdAccountsList.js"],"sourcesContent":["import { useMemo } from 'react'\r\n\r\nimport { VIABO_SPEI_PATHS, VIABO_SPEI_ROUTES } from '../routes/viabo-spei-paths'\r\n\r\nexport const useViaboSpeiBreadCrumbs = () => {\r\n  const thirdAccounts = useMemo(\r\n    () => [\r\n      { name: 'Inicio', href: '/' },\r\n      { name: VIABO_SPEI_ROUTES.root.name, href: VIABO_SPEI_PATHS.third_accounts },\r\n      { name: 'Cuentas de Terceros' }\r\n    ],\r\n    []\r\n  )\r\n\r\n  return {\r\n    thirdAccounts\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { SPEI_THIRD_ACCOUNTS_KEYS } from '../adapters'\r\nimport { getSpeiThirdAccountsList } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindSpeiThirdAccountsList = (options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const query = useQuery({\r\n    queryKey: [SPEI_THIRD_ACCOUNTS_KEYS.THIRD_ACCOUNTS_LIST],\r\n    queryFn: getSpeiThirdAccountsList,\r\n    refetchOnWindowFocus: false,\r\n    retry: false,\r\n    staleTime: 300000,\r\n    ...options\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (query?.isError) {\r\n      const errorMessage = getErrorAPI(\r\n        query.error,\r\n        'No se puede obtener la lista de cuentas de terceros. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(query.error)\r\n      })\r\n    }\r\n  }, [query.isError, query.error])\r\n\r\n  return {\r\n    ...query,\r\n    error: customError || null\r\n  }\r\n}\r\n"],"file":"assets/js/SpeiThirdAccounts-HkpHjRAV.js"}