{"version":3,"file":"NewSpeiThirdAccountForm-rvkF2_rB.js","sources":["../../../../../frontend/src/app/business/viabo-spei/third-accounts/adapters/spei-new-third-account-adapter.js","../../../../../frontend/src/app/business/viabo-spei/third-accounts/hooks/useCreateNewSpeiThirdAccount.js"],"sourcesContent":["export const SpeiNewThirdAccountAdapter = account => ({\r\n  interbankCLABE: account?.clabe,\r\n  beneficiary: account?.name?.trim(),\r\n  rfc: account?.rfc?.trim() || '',\r\n  alias: account?.alias?.trim() || '',\r\n  bankId: account?.bank?.value,\r\n  email: account?.email?.trim() || '',\r\n  phone: account?.phone?.trim() || ''\r\n})\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { SPEI_THIRD_ACCOUNTS_KEYS } from '../adapters'\r\nimport { newSpeiThirdAccount } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\nimport { isFunction } from '@/shared/utils'\r\n\r\nexport const useCreateNewSpeiThirdAccount = (options = {}) => {\r\n  const client = useQueryClient()\r\n  const speiThirdAccount = useMutation(newSpeiThirdAccount, options)\r\n  const mutate = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      await toast.promise(speiThirdAccount.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Agregando Cuenta ...',\r\n        success: {\r\n          render({ data }) {\r\n            client.invalidateQueries([SPEI_THIRD_ACCOUNTS_KEYS.THIRD_ACCOUNTS_LIST])\r\n            isFunction(onSuccess) && onSuccess(data)\r\n\r\n            return 'Se agrego la cuenta con éxito'\r\n          }\r\n        }\r\n      })\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operación en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      isFunction(onError) && onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...speiThirdAccount,\r\n    mutate\r\n  }\r\n}\r\n"],"names":["SpeiNewThirdAccountAdapter","account","_a","_b","_c","_d","_e","_f","useCreateNewSpeiThirdAccount","options","client","useQueryClient","speiThirdAccount","useMutation","newSpeiThirdAccount","formData","onSuccess","onError","mutationOptions","toast","data","SPEI_THIRD_ACCOUNTS_KEYS","isFunction","error","errorFormatted","getErrorAPI","getNotificationTypeByErrorCode"],"mappings":"kmBAAO,MAAMA,EAA6BC,GAAY,iBAAA,OACpD,eAAgBA,GAAA,YAAAA,EAAS,MACzB,aAAaC,EAAAD,GAAA,YAAAA,EAAS,OAAT,YAAAC,EAAe,OAC5B,MAAKC,EAAAF,GAAA,YAAAA,EAAS,MAAT,YAAAE,EAAc,SAAU,GAC7B,QAAOC,EAAAH,GAAA,YAAAA,EAAS,QAAT,YAAAG,EAAgB,SAAU,GACjC,QAAQC,EAAAJ,GAAA,YAAAA,EAAS,OAAT,YAAAI,EAAe,MACvB,QAAOC,EAAAL,GAAA,YAAAA,EAAS,QAAT,YAAAK,EAAgB,SAAU,GACjC,QAAOC,EAAAN,GAAA,YAAAA,EAAS,QAAT,YAAAM,EAAgB,SAAU,EACnC,GCCaC,EAA+B,CAACC,EAAU,KAAO,CAC5D,MAAMC,EAASC,EAAgB,EACzBC,EAAmBC,EAAYC,EAAqBL,CAAO,EA4BjE,MAAO,CACL,GAAGG,EACH,OA7Ba,MAAOG,EAAUN,IAAY,CAC1C,KAAM,CAAE,UAAAO,EAAW,QAAAC,EAAS,gBAAAC,CAAiB,EAAGT,EAEhD,GAAI,CACF,MAAMU,EAAM,QAAQP,EAAiB,YAAYG,EAAUG,CAAe,EAAG,CAC3E,QAAS,uBACT,QAAS,CACP,OAAO,CAAE,KAAAE,GAAQ,CACf,OAAAV,EAAO,kBAAkB,CAACW,EAAyB,mBAAmB,CAAC,EACvEC,EAAWN,CAAS,GAAKA,EAAUI,CAAI,EAEhC,+BACR,CACF,CACT,CAAO,CACF,OAAQG,EAAO,CACd,MAAMC,EAAiBC,EACrBF,EACA,8FACD,EACDD,EAAWL,CAAO,GAAKA,EAAQO,CAAc,EAC7CL,EAAM,MAAMK,EAAgB,CAC1B,KAAME,EAA+BH,CAAK,CAClD,CAAO,CACF,CACF,CAKA,CACH"}