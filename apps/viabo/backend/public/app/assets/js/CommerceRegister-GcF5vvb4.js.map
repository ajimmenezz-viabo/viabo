{"version":3,"mappings":"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","names":["COMMERCE_KEYS","CommerceProcessAdapter","process","id","fiscalPersonType","fiscalName","tradeName","rfc","employees","branchOffices","paymentApi","registerStep","legalRepresentative","services","pointSaleTerminal","documents","serviceCard","service","cardsNumber","cardUse","customCard","createNewCommerce","commerce","data","axios","getCommerceToken","commerceEmail","getCommerceProcess","updateCommerceProcess","commerceInfo","uploadDocuments","deleteDocuments","useFindCommerceProcess","options","enqueueSnackbar","useSnackbar","useQuery","error","errorMessage","getErrorAPI","propTypesStore","PropTypes","initialState","PROCESS_LIST","__vitePreload","processStore","set","get","processList","actualProcess","componentDefault","state","processName","token","resume","useRegisterProcessStore","createStore","INTEGRATION"],"sources":["../../../../../frontend/src/app/business/commerce/adapters/commerceKeys.js","../../../../../frontend/src/app/business/commerce/adapters/commerceProcessAdapter.js","../../../../../frontend/src/app/business/commerce/services/CommerceRepository.js","../../../../../frontend/src/app/business/commerce/hooks/useFindCommerceProcess.js","../../../../../frontend/src/app/business/commerce/store/registerProcessStore.js","../../../../../frontend/src/shared/assets/img/integracion-tecnologica.png"],"sourcesContent":["export const COMMERCE_KEYS = {\r\n  TOKEN_COMMERCE: 'tokenCommerce',\r\n  VALIDATION_CODE: 'validationCode',\r\n  COMMERCE_PROCESS: 'commerceProcess'\r\n}\r\n","export const CommerceProcessAdapter = process => {\r\n  const {\r\n    id,\r\n    fiscalPersonType,\r\n    fiscalName,\r\n    tradeName,\r\n    rfc,\r\n    employees,\r\n    branchOffices,\r\n    paymentApi,\r\n    registerStep,\r\n    legalRepresentative,\r\n    services,\r\n    pointSaleTerminal,\r\n    documents\r\n  } = process\r\n\r\n  const serviceCard = services?.find(service => service.type === '2')\r\n  const cardsNumber = serviceCard?.cardNumbers || 0\r\n  const cardUse = serviceCard?.cardUse || ''\r\n  const customCard = serviceCard?.personalized === '1' || false\r\n\r\n  return {\r\n    id,\r\n    idUser: legalRepresentative,\r\n    services,\r\n    fiscalTypePerson: fiscalPersonType,\r\n    fiscalName: fiscalName || '',\r\n    rfc,\r\n    commercialName: tradeName,\r\n    employeesNumber: Number(employees),\r\n    branchesNumber: Number(branchOffices),\r\n    tpvsNumber: Number(pointSaleTerminal),\r\n    apiRequired: Boolean(paymentApi === '1'),\r\n    cardsNumber: Number(cardsNumber),\r\n    cardsUse: cardUse,\r\n    customCardsRequired: customCard,\r\n    files: documents,\r\n    step: Number(registerStep)\r\n  }\r\n}\r\n","import { CommerceProcessAdapter } from '@/app/business/commerce/adapters'\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const createNewCommerce = async commerce => {\r\n  const { data } = await axios.post('/api/security/legalRepresentative/new', commerce)\r\n  return data\r\n}\r\n\r\nexport const getCommerceToken = async commerceEmail => {\r\n  const { data } = await axios.get(`/api/legal-representative/verificate`, {\r\n    headers: {\r\n      Username: `${commerceEmail}`\r\n    }\r\n  })\r\n  return data\r\n}\r\n\r\nexport const getCommerceProcess = async () => {\r\n  const { data } = await axios.get(`/api/commerce/legal-representative`)\r\n  return CommerceProcessAdapter(data)\r\n}\r\n\r\nexport const updateCommerceProcess = async commerceInfo => {\r\n  const { data } = await axios.put(`/api/commerce/update`, commerceInfo)\r\n  return data\r\n}\r\n\r\nexport const uploadDocuments = async documents => {\r\n  const { data } = await axios.post(`/api/commerce/documents/create`, documents)\r\n  return data\r\n}\r\n\r\nexport const deleteDocuments = async documents => {\r\n  const { data } = await axios.post(`/api/commerce/documents/delete`, documents)\r\n  return data\r\n}\r\n","import { useQuery } from '@tanstack/react-query'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport { COMMERCE_KEYS } from '@/app/business/commerce/adapters'\r\nimport { getCommerceProcess } from '@/app/business/commerce/services'\r\nimport { getErrorAPI } from '@/shared/interceptors'\r\n\r\nexport const useFindCommerceProcess = (options = {}) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  return useQuery([COMMERCE_KEYS.COMMERCE_PROCESS], getCommerceProcess, {\r\n    staleTime: 60 * 5000,\r\n    onError: error => {\r\n      const errorMessage = getErrorAPI(error, 'ðŸ˜Ÿ Error al obtener el proceso del comercio')\r\n      enqueueSnackbar(errorMessage, {\r\n        variant: 'error',\r\n        autoHideDuration: 5000\r\n      })\r\n    },\r\n    ...options\r\n  })\r\n}\r\n","import PropTypes from 'prop-types'\r\n\r\nimport { PROCESS_LIST } from '@/app/business/commerce/services'\r\nimport { createStore } from '@/app/shared/store'\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const propTypesStore = {\r\n  actualProcess: PropTypes.string,\r\n  token: PropTypes.string,\r\n  resume: PropTypes.object,\r\n  lastProcess: PropTypes.shape({\r\n    name: PropTypes.any,\r\n    info: PropTypes.any\r\n  }),\r\n  getComponent: PropTypes.func,\r\n  getBackProcess: PropTypes.func,\r\n  setLastProcess: PropTypes.func,\r\n  setActualProcess: PropTypes.func,\r\n  setToken: PropTypes.func,\r\n  setResume: PropTypes.func\r\n}\r\n\r\nconst initialState = {\r\n  actualProcess: PROCESS_LIST.REGISTER,\r\n  token: null,\r\n  resume: null,\r\n  lastProcess: {\r\n    name: null,\r\n    info: null\r\n  },\r\n  processList: [\r\n    {\r\n      name: PROCESS_LIST.REGISTER,\r\n      component: () => import('@/app/business/commerce/components/process/register/CommerceRegisterForm'),\r\n      backProcess: PROCESS_LIST.REGISTER\r\n    },\r\n    {\r\n      name: PROCESS_LIST.CONTINUE_PROCESS,\r\n      component: () => import('@/app/business/commerce/components/process/ProcessContinue'),\r\n      backProcess: PROCESS_LIST.REGISTER\r\n    },\r\n    {\r\n      name: PROCESS_LIST.VALIDATION_CODE,\r\n      component: () => import('@/app/business/commerce/components/process/ValidationCode'),\r\n      backProcess: PROCESS_LIST.REGISTER\r\n    },\r\n    {\r\n      name: PROCESS_LIST.SERVICES_SELECTION,\r\n      component: () => import('@/app/business/commerce/components/process/ServicesSelection'),\r\n      backProcess: PROCESS_LIST.REGISTER\r\n    },\r\n    {\r\n      name: PROCESS_LIST.COMMERCE_INFO,\r\n      component: () => import('@/app/business/commerce/components/process/CommerceInfo'),\r\n      backProcess: PROCESS_LIST.SERVICES_SELECTION\r\n    },\r\n    {\r\n      name: PROCESS_LIST.COMMERCE_DOCUMENTATION,\r\n      component: () => import('@/app/business/commerce/components/process/documentation/CommerceDocumentation'),\r\n      backProcess: PROCESS_LIST.COMMERCE_INFO\r\n    },\r\n    {\r\n      name: PROCESS_LIST.FINISHED_PROCESS,\r\n      component: () => import('@/app/business/commerce/components/process/FinishProcess'),\r\n      backProcess: PROCESS_LIST.COMMERCE_DOCUMENTATION\r\n    }\r\n  ]\r\n}\r\n\r\nconst processStore = (set, get) => ({\r\n  ...initialState,\r\n  getComponent: () => {\r\n    const { processList, actualProcess } = get()\r\n    const componentDefault = () => import('@/app/business/commerce/components/process/ValidationCode')\r\n    return processList.find(process => process.name === actualProcess).component ?? componentDefault\r\n  },\r\n  getBackProcess: () => {\r\n    const { processList, actualProcess } = get()\r\n    return processList.find(process => process.name === actualProcess).backProcess ?? PROCESS_LIST.REGISTER\r\n  },\r\n  setLastProcess: process => {\r\n    set(state => ({\r\n      lastProcess: {\r\n        name: process?.name || null,\r\n        info: process?.info || null\r\n      }\r\n    }))\r\n  },\r\n  setActualProcess: processName => {\r\n    set(state => ({\r\n      actualProcess: processName\r\n    }))\r\n    if (processName === PROCESS_LIST.REGISTER) {\r\n      localStorage.removeItem('token')\r\n      delete axios.defaults.headers.common.Authorization\r\n    }\r\n  },\r\n  setToken: token => {\r\n    set(state => ({\r\n      token\r\n    }))\r\n    localStorage.setItem('token', token)\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`\r\n  },\r\n  setResume: resume => {\r\n    set(state => ({\r\n      resume\r\n    }))\r\n  }\r\n})\r\n\r\nexport const useRegisterProcessStore = createStore(processStore)\r\n","export default \"__VITE_ASSET__LqIOrqPt__\""],"file":"assets/js/CommerceRegister-GcF5vvb4.js"}