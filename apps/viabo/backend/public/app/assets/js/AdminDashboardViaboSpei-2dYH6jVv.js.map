{"version":3,"mappings":"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","names":["initialState","sharedViaboSpeiStore","set","get","title","state","useSharedViaboSpeiStore","createStore","STP_ACCOUNT_TYPES","getTitleAccountsByStpAccountType","type","getStpAccountType","ViaboSpeiAccountsAdapter","accounts","accountsDecrypted","getDecryptInfo","ConcentratorsAdapter","CostCentersAdapter","CompaniesAdapter","concentrators","concentratorsAdapted","concentrator","_a","fCurrency","convertCatalogToReactSelect","costCenters","costCentersAdapted","costCenter","companies","companiesAdapted","company","_b","_c","_d","_e","_f","VIABO_SPEI_DASHBOARD_KEYS","getAccountInfoViaboSpei","data","axios","useFindViaboSpeiAccountsInfo","options","customError","setCustomError","useState","query","useQuery","signal","useEffect","errorMessage","getErrorAPI","toast","getNotificationTypeByErrorCode","VIABO_SPEI_PERMISSIONS","SPEI_OUT_DESTINATION","getSpeiOutOptionByPermissions","permissions","acc","option","permission","adminDashboardSpeiStore","stpAccounts","open","filters","transaction","balance","filter","account","useAdminDashboardSpeiStore","SpeiOutDrawer","Lodable","lazy","__vitePreload","AdminSpeiBalance","AdminSpeiMovements","AdminDashboardSpeiResume","isLoading","useUser","setStpAccountsByPermissions","selectedAccount","isEmptyAccount","jsxs","Fragment","Stack","jsx","Typography","typography","totalBalance","format","CONCENTRATOR","Box","companiesBalance","Grid","borderColorViaboSpeiStyle","alpha","CardViaboSpeiStyle","styled","Card","theme","borderColor","borderRadius","Number","shape","boxShadow","backgroundColor","ButtonViaboSpei","Button","LoadingButtonViaboSpei","LoadingButton","RootStyle","ListItemButton","width","justifyContent","display","alignItems","transition","transitions","create","AdminSpeiMovementItem","movement","others","setOpenDetailsTransaction","setTransaction","handleSelectedRow","e","isSelected","id","ListItem","padding","bgcolor","color","ListItemAvatar","Avatar","beneficiary","name","stringAvatar","amount","commissions","total","date","time","Label","status","Divider","propTypes","PropTypes","string","any","dateTime","AdminSpeiMovementSkeleton","useTheme","background","palette","mode","grey","A200","px","py","Skeleton","flexGrow","height","SPEI_OPERATIONS","ViaboSpeiMovementsAdapter","movements","movementsAdapted","fDateTime","fTime","es","_g","_h","a","b","movementsByDay","dateKey","ViaboSpeiResumeBalance","VIABO_SPEI_SHARED_KEYS","getBalanceResumeViaboSpei","createSpeiOut","transactions","operation","getMovementsViaboSpei","useFindViaboSpeiMovements","AdminSpeiAllTransactions","setFilter","setFilterMovements","filterDate","filterMovements","currentDate","Date","initialStartDate","useMemo","startDate","sub","days","initialEndDate","endDate","setStartDate","setEndDate","queryMovements","initialDate","number","enabled","original","refetch","page","setPage","searchTerm","setSearchTerm","isSearchFocused","setSearchFocused","searchResult","setSearchResult","PER_PAGE","source","_DATA","usePagination","length","count","Math","ceil","paginatedMovements","currentData","handleChange","p","jump","handleClickAwaySearch","handleChangeSearch","event","value","target","filterCards","searchByTerm","handleSearchFocus","handleDateRange","range","displayResults","loading","xs","sm","ClickAwayListener","InputStyle","startAdornment","InputAdornment","Search","flex","mb","InputDateRange","borderStyle","List","AnimatePresence","map","index","groupBy","ListSubheader","m","div","varFade","inRight","pt","createElement","SearchNotFound","flexDirection","Array","Pagination","AdminDashboardSpeiTransactionsPage","setOpenTransactions","ref","useRef","current","scrollIntoView","behavior","ArrowBack","hidden","slice","AdminSpeiMovementDrawer","AdminDashboardViaboSpei","dashboardTitle","isOpenTransactions","setDashboardTitle","Page","ContainerPage","pb","HeaderPage","MotionContainer","in"],"sources":["../../../../../frontend/src/app/business/viabo-spei/shared/store/shared-viabo-spei-store.js","../../../../../frontend/src/app/business/viabo-spei/dashboard/constants/admin-dashboard-constants.js","../../../../../frontend/src/app/business/viabo-spei/dashboard/adapters/viabo-spei-accounts-adapter.js","../../../../../frontend/src/app/business/viabo-spei/dashboard/adapters/viabo-spei-dashboard-keys.js","../../../../../frontend/src/app/business/viabo-spei/dashboard/services/viabo-spei-dashboard-repository.js","../../../../../frontend/src/app/business/viabo-spei/dashboard/hooks/useFindViaboSpeiAccountsInfo.js","../../../../../frontend/src/app/business/viabo-spei/shared/permissions/viabo-spei-permissions.js","../../../../../frontend/src/app/business/viabo-spei/dashboard/store/admin-dashboard-viabo-spei-store.js","../../../../../frontend/src/app/business/viabo-spei/dashboard/pages/AdminDashboardSpeiResume.jsx","../../../../../frontend/src/app/business/viabo-spei/shared/components/ViaboSpeiComponents.jsx","../../../../../frontend/src/app/business/viabo-spei/dashboard/components/movements/AdminSpeiMovementItem.jsx","../../../../../frontend/src/app/business/viabo-spei/dashboard/components/movements/AdminSpeiMovementSkeleton.jsx","../../../../../frontend/src/app/business/viabo-spei/shared/adapters/viabo-spei-movements-adapter.js","../../../../../frontend/src/app/business/viabo-spei/shared/adapters/viabo-spei-resume-balance.js","../../../../../frontend/src/app/business/viabo-spei/shared/adapters/viabo-spei-shared-keys.js","../../../../../frontend/src/app/business/viabo-spei/shared/services/ViaboSpeiSharedRepository.js","../../../../../frontend/src/app/business/viabo-spei/shared/hooks/useFindViaboSpeiMovements.js","../../../../../frontend/src/app/business/viabo-spei/dashboard/components/movements/AdminSpeiAllTransactions.jsx","../../../../../frontend/src/app/business/viabo-spei/dashboard/pages/AdminDashboardSpeiTransactionsPage.jsx","../../../../../frontend/src/app/business/viabo-spei/dashboard/pages/AdminDashboardViaboSpei.jsx"],"sourcesContent":["import { createStore } from '@/app/shared/store'\r\n\r\nconst initialState = {\r\n  dashboardTitle: 'Dashboard'\r\n}\r\nconst sharedViaboSpeiStore = (set, get) => ({\r\n  ...initialState,\r\n  setDashboardTitle: title => {\r\n    set(\r\n      state => ({\r\n        dashboardTitle: title\r\n      }),\r\n      false,\r\n      'SET_SHARED_VIABO_SPEI_DASHBOARD_TITLE'\r\n    )\r\n  }\r\n})\r\n\r\nexport const useSharedViaboSpeiStore = createStore(sharedViaboSpeiStore)\r\n","export const STP_ACCOUNT_TYPES = {\n  CONCENTRATOR: 'Concentradora',\n  COMPANY: 'Empresa',\n  COST_CENTER: 'Centro de Costos'\n}\n\nexport const getTitleAccountsByStpAccountType = type => {\n  if (type === STP_ACCOUNT_TYPES.CONCENTRATOR) {\n    return 'Concentradoras'\n  }\n\n  if (type === STP_ACCOUNT_TYPES.COST_CENTER) {\n    return 'Centros de Costos'\n  }\n\n  if (type === STP_ACCOUNT_TYPES.COMPANY) {\n    return 'Empresas'\n  }\n\n  return ''\n}\n\nexport const getStpAccountType = type => {\n  if (type === 'stpAccounts') {\n    return STP_ACCOUNT_TYPES.CONCENTRATOR\n  }\n\n  if (type === 'costCenters') {\n    return STP_ACCOUNT_TYPES.COST_CENTER\n  }\n\n  if (type === 'companies') {\n    return STP_ACCOUNT_TYPES.COMPANY\n  }\n\n  return ''\n}\n","import { STP_ACCOUNT_TYPES, getStpAccountType } from '../constants'\r\n\r\nimport { convertCatalogToReactSelect, fCurrency, getDecryptInfo } from '@/shared/utils'\r\n\r\nexport const ViaboSpeiAccountsAdapter = accounts => {\r\n  const accountsDecrypted = getDecryptInfo(accounts?.ciphertext, accounts?.iv)\r\n  if (accountsDecrypted) {\r\n    return {\r\n      type: getStpAccountType(accountsDecrypted?.sectionData),\r\n      concentrators: ConcentratorsAdapter(accountsDecrypted?.stpAccounts),\r\n      costCenters: CostCentersAdapter(accountsDecrypted?.costCenters),\r\n      companies: CompaniesAdapter(accountsDecrypted?.companies)\r\n    }\r\n  }\r\n\r\n  throw new Error('Error al obtener cuentas stp')\r\n}\r\n\r\nfunction ConcentratorsAdapter(concentrators) {\r\n  const concentratorsAdapted =\r\n    concentrators?.map(concentrator => ({\r\n      id: concentrator?.id,\r\n      name: concentrator?.name,\r\n      type: STP_ACCOUNT_TYPES.CONCENTRATOR,\r\n      account: {\r\n        number: concentrator?.account,\r\n        hidden: concentrator?.account?.replace(/.(?=.{4})/g, '*')\r\n      },\r\n      totalBalance: {\r\n        number: concentrator?.balance,\r\n        format: fCurrency(concentrator?.balance || 0)\r\n      },\r\n      companiesBalance: {\r\n        number: concentrator?.companiesBalance,\r\n        format: fCurrency(concentrator?.companiesBalance || 0)\r\n      },\r\n      balance: {\r\n        number: concentrator?.availableBalance,\r\n        format: fCurrency(concentrator?.availableBalance || 0)\r\n      },\r\n      companies: CompaniesAdapter(concentrator?.companies)\r\n    })) || []\r\n\r\n  return convertCatalogToReactSelect(concentratorsAdapted, 'id', 'name')\r\n}\r\n\r\nfunction CostCentersAdapter(costCenters) {\r\n  const costCentersAdapted =\r\n    costCenters?.map(costCenter => ({\r\n      id: costCenter?.id,\r\n      name: costCenter?.name,\r\n      type: STP_ACCOUNT_TYPES.COST_CENTER,\r\n      companies: CompaniesAdapter(costCenters?.companies || [])\r\n    })) || []\r\n\r\n  return convertCatalogToReactSelect(costCentersAdapted, 'id', 'name')\r\n}\r\n\r\nfunction CompaniesAdapter(companies) {\r\n  const companiesAdapted =\r\n    companies?.map(company => ({\r\n      id: company?.id,\r\n      name: company?.name,\r\n      type: STP_ACCOUNT_TYPES.COMPANY,\r\n      account: {\r\n        number: company?.account,\r\n        hidden: company?.account?.replace(/.(?=.{4})/g, '*')\r\n      },\r\n      clabe: company?.account,\r\n      balance: {\r\n        number: company?.balance,\r\n        format: fCurrency(company?.balance || 0)\r\n      },\r\n      totalBalance: {\r\n        number: company?.balance,\r\n        format: fCurrency(company?.balance || 0)\r\n      },\r\n      concentrator: {\r\n        number: company?.stpAccount,\r\n        hidden: company?.stpAccount?.replace(/.(?=.{4})/g, '*')\r\n      },\r\n      commissions: {\r\n        speiOut: company?.commissions?.speiOut || 0,\r\n        internalTransferCompany: company?.commissions?.internal || 0,\r\n        fee: company?.commissions?.feeStp || 0,\r\n        speiIn: company?.commissions?.speiIn || 0\r\n      }\r\n    })) || []\r\n\r\n  return convertCatalogToReactSelect(companiesAdapted, 'id', 'name')?.filter(company => company.account?.number)\r\n}\r\n","export const VIABO_SPEI_DASHBOARD_KEYS = {\n  ACCOUNTS_INFO: 'viabo-spei-accounts'\n}\n","import { ViaboSpeiAccountsAdapter } from '../adapters'\n\nimport { axios } from '@/shared/interceptors'\n\nexport const getAccountInfoViaboSpei = async () => {\n  const { data } = await axios.get('/api/spei/accounts')\n\n  return ViaboSpeiAccountsAdapter(data)\n}\n","import { useEffect, useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { VIABO_SPEI_DASHBOARD_KEYS } from '../adapters'\r\nimport { getAccountInfoViaboSpei } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindViaboSpeiAccountsInfo = (options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const query = useQuery({\r\n    queryKey: [VIABO_SPEI_DASHBOARD_KEYS.ACCOUNTS_INFO],\r\n    queryFn: ({ signal }) => getAccountInfoViaboSpei(),\r\n    refetchOnWindowFocus: false,\r\n    retry: false,\r\n    staleTime: 300000,\r\n    ...options\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (query?.isError) {\r\n      const errorMessage = getErrorAPI(\r\n        query.error,\r\n        'No se puede obtener información de las cuentas stp. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(query.error)\r\n      })\r\n    }\r\n  }, [query.isError, query.error])\r\n\r\n  return {\r\n    ...query,\r\n    error: customError || null\r\n  }\r\n}\r\n","const VIABO_SPEI_PERMISSIONS = {\r\n  DASHBOARD: 'MP-VIABO-SPEI',\r\n  DASHBOARD_ADMIN: 'MP-VIABO-SPEI-ADMIN',\r\n  DASHBOARD_COST_CENTERS: 'MP-VIABO-COST-CENTERS'\r\n}\r\n\r\nconst SPEI_OUT_DESTINATION = {\r\n  THIRD_ACCOUNTS: {\r\n    id: 'third-accounts',\r\n    name: 'Cuenta de Terceros',\r\n    permission: null,\r\n    default: true\r\n  },\r\n  COMPANIES: {\r\n    id: 'companies',\r\n    name: 'Empresas',\r\n    permission: [VIABO_SPEI_PERMISSIONS.DASHBOARD_ADMIN, VIABO_SPEI_PERMISSIONS.DASHBOARD],\r\n    default: false\r\n  },\r\n  CONCENTRATOR: {\r\n    id: 'concentrator',\r\n    name: 'Concentradora',\r\n    permission: [VIABO_SPEI_PERMISSIONS.DASHBOARD],\r\n    default: false\r\n  }\r\n}\r\n\r\nconst getSpeiOutOptionByPermissions = (permissions = []) =>\r\n  Object.values(SPEI_OUT_DESTINATION).reduce((acc, option) => {\r\n    if (option.permission === null || option.permission.some(permission => permissions.includes(permission))) {\r\n      acc.push(option)\r\n    }\r\n    return acc\r\n  }, [])\r\n\r\nexport { SPEI_OUT_DESTINATION, VIABO_SPEI_PERMISSIONS, getSpeiOutOptionByPermissions }\r\n","import { VIABO_SPEI_PERMISSIONS } from '../../shared/permissions'\r\n\r\nimport { createStore } from '@/app/shared/store'\r\n\r\nconst initialState = {\r\n  stpAccounts: null,\r\n  selectedAccount: null,\r\n  balanceResume: null,\r\n  balanceFilter: null,\r\n  openSpeiOut: false,\r\n  isOpenTransactions: false,\r\n  filterMovements: null,\r\n  transaction: null,\r\n  isOpenDetailsTransaction: false,\r\n  companies: []\r\n}\r\nconst adminDashboardSpeiStore = (set, get) => ({\r\n  ...initialState,\r\n  setStpAccountsByPermissions: (accounts, permissions) => {\r\n    let stpAccounts = null\r\n    if (permissions?.includes(VIABO_SPEI_PERMISSIONS.DASHBOARD_ADMIN)) {\r\n      stpAccounts = {\r\n        type: accounts?.type,\r\n        accounts: accounts?.concentrators || []\r\n      }\r\n    }\r\n\r\n    if (permissions?.includes(VIABO_SPEI_PERMISSIONS.DASHBOARD_COST_CENTERS)) {\r\n      stpAccounts = {\r\n        type: accounts?.type,\r\n        accounts: accounts?.costCenters || []\r\n      }\r\n    }\r\n\r\n    if (permissions?.includes(VIABO_SPEI_PERMISSIONS.DASHBOARD)) {\r\n      stpAccounts = {\r\n        type: accounts?.type,\r\n        accounts: accounts?.companies || []\r\n      }\r\n    }\r\n\r\n    set(\r\n      state => ({\r\n        selectedAccount: stpAccounts?.accounts?.[0] || null,\r\n        stpAccounts\r\n      }),\r\n      false,\r\n      'SET_ADMIN_DASHBOARD_SPEI_STP_ACCOUNTS'\r\n    )\r\n  },\r\n  setOpenSpeiOut: open => {\r\n    set(\r\n      state => ({\r\n        openSpeiOut: open\r\n      }),\r\n      false,\r\n      'SET_ADMIN_DASHBOARD_OPEN_SPEI_OUT'\r\n    )\r\n  },\r\n  setOpenTransactions: open => {\r\n    set(\r\n      state => ({\r\n        isOpenTransactions: open\r\n      }),\r\n      false,\r\n      'SET_ADMIN_DASHBOARD_OPEN_TRANSACTIONS_DETAILS'\r\n    )\r\n  },\r\n  setFilterMovements: filters => {\r\n    set(\r\n      state => ({\r\n        filterMovements: filters\r\n      }),\r\n      false,\r\n      'SET_ADMIN_DASHBOARD_FILTERS_MOVEMENTS'\r\n    )\r\n  },\r\n  setTransaction: transaction => {\r\n    set(\r\n      state => ({\r\n        transaction\r\n      }),\r\n      false,\r\n      'SET_ADMIN_DASHBOARD_TRANSACTION_INFO'\r\n    )\r\n  },\r\n  setOpenDetailsTransaction: open => {\r\n    set(\r\n      state => ({\r\n        isOpenDetailsTransaction: open\r\n      }),\r\n      false,\r\n      'SET_ADMIN_DASHBOARD_OPEN_TRANSACTION_DETAILS'\r\n    )\r\n  },\r\n  setBalanceResume: balance => {\r\n    set(\r\n      state => ({\r\n        balanceResume: balance\r\n      }),\r\n      false,\r\n      'SET_ADMIN_DASHBOARD_BALANCE_RESUME'\r\n    )\r\n  },\r\n  setBalanceFilter: filter => {\r\n    set(\r\n      state => ({\r\n        balanceFilter: filter\r\n      }),\r\n      false,\r\n      'SET_ADMIN_DASHBOARD_BALANCE_FILTER'\r\n    )\r\n  },\r\n  setSelectedAccount: account => {\r\n    set(\r\n      state => ({\r\n        selectedAccount: account\r\n      }),\r\n      false,\r\n      'SET_ADMIN_DASHBOARD_SELECTED_ACCOUNT'\r\n    )\r\n  },\r\n  setCompanies: companies => {\r\n    set(\r\n      state => ({\r\n        companies\r\n      }),\r\n      false,\r\n      'SET_ADMIN_DASHBOARD_COMPANIES'\r\n    )\r\n  }\r\n})\r\n\r\nexport const useAdminDashboardSpeiStore = createStore(adminDashboardSpeiStore)\r\n","import { lazy, useEffect } from 'react'\n\nimport { Box, Grid, Stack, Typography } from '@mui/material'\n\nimport { STP_ACCOUNT_TYPES } from '../constants'\nimport { useFindViaboSpeiAccountsInfo } from '../hooks'\nimport { useAdminDashboardSpeiStore } from '../store'\n\nimport { Lodable } from '@/shared/components/lodables'\nimport { useUser } from '@/shared/hooks'\n\nconst SpeiOutDrawer = Lodable(lazy(() => import('../components/spei-out/SpeiOutDrawer')))\nconst AdminSpeiBalance = Lodable(lazy(() => import('../components/balance/AdminSpeiBalance')))\nconst AdminSpeiMovements = Lodable(lazy(() => import('../components/movements/AdminSpeiMovements')))\n\nexport const AdminDashboardSpeiResume = () => {\n  const { data, isLoading } = useFindViaboSpeiAccountsInfo()\n  const { permissions } = useUser()\n  const setStpAccountsByPermissions = useAdminDashboardSpeiStore(state => state.setStpAccountsByPermissions)\n  const selectedAccount = useAdminDashboardSpeiStore(state => state.selectedAccount)\n\n  useEffect(() => {\n    if (data) {\n      setStpAccountsByPermissions(data, permissions)\n    }\n  }, [data, permissions])\n\n  const isEmptyAccount = !isLoading && !selectedAccount\n\n  return (\n    <>\n      <Stack gap={3}>\n        <Stack>\n          <Typography sx={{ typography: 'h2' }}>{selectedAccount?.totalBalance?.format || '$0.00'}</Typography>\n          {selectedAccount?.type === STP_ACCOUNT_TYPES.CONCENTRATOR && (\n            <>\n              <Typography sx={{ typography: 'subtitle1' }}>\n                Saldo Empresas:{' '}\n                <Box component={'span'} color={'error.main'}>\n                  {selectedAccount?.companiesBalance?.format || '$0.00'}\n                </Box>\n              </Typography>\n              <Typography sx={{ typography: 'subtitle1' }}>\n                Saldo Disponible:{' '}\n                <Box component={'span'} color={'success.main'}>\n                  {selectedAccount?.balance?.format || '$0.00'}\n                </Box>\n              </Typography>\n            </>\n          )}\n\n          <Typography sx={{ typography: 'subtitle1' }} color={'text.disabled'}>\n            Total balance todas las cuentas{' '}\n            <Box component={'span'} color={'info.main'}>\n              {' '}\n              MXN\n            </Box>\n          </Typography>\n        </Stack>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6} xl={4}>\n            <AdminSpeiBalance isEmptyAccount={isEmptyAccount} isLoading={isLoading} />\n          </Grid>\n          <Grid item xs={12} md={6} xl={8}>\n            <AdminSpeiMovements isEmptyAccount={isEmptyAccount} />\n          </Grid>\n        </Grid>\n      </Stack>\n\n      <SpeiOutDrawer />\n    </>\n  )\n}\n","import { LoadingButton } from '@mui/lab'\r\nimport { Button, Card, alpha, styled } from '@mui/material'\r\n\r\nexport const borderColorViaboSpeiStyle = alpha('#CFDBD5', 0.7)\r\n\r\nexport const CardViaboSpeiStyle = styled(Card)(({ theme }) => ({\r\n  borderColor: alpha('#CFDBD5', 0.7),\r\n  borderRadius: Number(theme.shape.borderRadius),\r\n  boxShadow: 'none',\r\n  backgroundColor: 'inherit'\r\n}))\r\n\r\nexport const ButtonViaboSpei = styled(Button)(({ theme }) => ({\r\n  borderColor: alpha('#CFDBD5', 0.7),\r\n  borderRadius: Number(theme.shape.borderRadius),\r\n  boxShadow: 'none'\r\n}))\r\n\r\nexport const LoadingButtonViaboSpei = styled(LoadingButton)(({ theme }) => ({\r\n  borderColor: alpha('#CFDBD5', 0.7),\r\n  borderRadius: Number(theme.shape.borderRadius),\r\n  boxShadow: 'none'\r\n}))\r\n","import PropTypes from 'prop-types'\r\n\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemButton,\r\n  Stack,\r\n  Typography,\r\n  styled\r\n} from '@mui/material'\r\n\r\nimport { useAdminDashboardSpeiStore } from '../../store'\r\n\r\nimport { Label } from '@/shared/components/form'\r\nimport { stringAvatar } from '@/theme/utils'\r\n\r\nconst RootStyle = styled(ListItemButton)(({ theme }) => ({\r\n  borderRadius: 0,\r\n  width: 1,\r\n  justifyContent: 'start',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  transition: theme.transitions.create('all')\r\n}))\r\nexport const AdminSpeiMovementItem = ({ movement, ...others }) => {\r\n  const setOpenDetailsTransaction = useAdminDashboardSpeiStore(state => state.setOpenDetailsTransaction)\r\n  const setTransaction = useAdminDashboardSpeiStore(state => state.setTransaction)\r\n  const transaction = useAdminDashboardSpeiStore(state => state.transaction)\r\n\r\n  const handleSelectedRow = e => {\r\n    setOpenDetailsTransaction(true)\r\n    setTransaction(movement)\r\n  }\r\n\r\n  const isSelected = transaction?.id === movement?.id\r\n  return (\r\n    <>\r\n      <ListItem\r\n        {...others}\r\n        sx={{\r\n          padding: 0,\r\n          borderRadius: 1\r\n        }}\r\n        disablePadding\r\n      >\r\n        <RootStyle\r\n          component={'div'}\r\n          onClick={handleSelectedRow}\r\n          sx={{\r\n            ...(isSelected && {\r\n              bgcolor: 'secondary.light',\r\n              color: 'text.primary.contrastText'\r\n            }),\r\n            width: 1\r\n          }}\r\n        >\r\n          <ListItemAvatar>\r\n            <Avatar title={movement?.beneficiary?.name} {...stringAvatar(movement?.beneficiary?.name)}></Avatar>\r\n          </ListItemAvatar>\r\n          <Stack flex={1}>\r\n            <Stack flexDirection={'row'} justifyContent={'space-between'} alignItems={'center'}>\r\n              <Typography variant=\"subtitle1\" fontWeight={600}>\r\n                {movement?.movement}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color={movement?.amount?.color || 'text.primary'} fontWeight={'bold'}>\r\n                {movement?.commissions?.total}\r\n              </Typography>\r\n            </Stack>\r\n            <Stack flexDirection={'row'} gap={1} alignItems={'center'}>\r\n              <Typography sx={{ display: 'inline' }} component=\"span\" variant=\"body2\" color=\"text.secondary\">\r\n                {movement?.date?.time}\r\n              </Typography>\r\n              <Box>\r\n                <Label variant={'outlined'} color={movement?.status?.color}>\r\n                  {movement?.status?.name}\r\n                </Label>\r\n              </Box>\r\n            </Stack>\r\n          </Stack>\r\n        </RootStyle>\r\n      </ListItem>\r\n      <Divider />\r\n    </>\r\n  )\r\n}\r\n\r\nAdminSpeiMovementItem.propTypes = {\r\n  movement: PropTypes.shape({\r\n    amount: PropTypes.shape({\r\n      color: PropTypes.string,\r\n      format: PropTypes.any\r\n    }),\r\n    beneficiary: PropTypes.shape({\r\n      name: PropTypes.any\r\n    }),\r\n    commissions: PropTypes.shape({\r\n      total: PropTypes.any\r\n    }),\r\n    date: PropTypes.shape({\r\n      dateTime: PropTypes.any,\r\n      time: PropTypes.any\r\n    }),\r\n    id: PropTypes.any,\r\n    movement: PropTypes.any,\r\n    status: PropTypes.shape({\r\n      color: PropTypes.any,\r\n      name: PropTypes.any\r\n    })\r\n  })\r\n}\r\n","import { Skeleton, Stack, useTheme, alpha } from '@mui/material'\r\n\r\nexport const AdminSpeiMovementSkeleton = () => {\r\n  const theme = useTheme()\r\n  const background = theme.palette.mode === 'dark' ? alpha(theme.palette.grey.A200, 0.2) : theme.palette.grey.A200\r\n  return (\r\n    <Stack spacing={1} direction=\"row\" alignItems=\"center\" sx={{ px: 3, py: 1.5 }}>\r\n      <Skeleton sx={{ backgroundColor: background }} variant=\"circular\" width={48} height={48} />\r\n      <Stack spacing={0.5} sx={{ flexGrow: 1 }}>\r\n        <Skeleton variant=\"text\" sx={{ width: 0.5, height: 16, backgroundColor: background }} />\r\n        <Skeleton variant=\"text\" sx={{ width: 0.25, height: 12, backgroundColor: background }} />\r\n      </Stack>\r\n    </Stack>\r\n  )\r\n}\r\n","import { format } from 'date-fns'\r\nimport { es } from 'date-fns/locale'\r\n\r\nimport { fCurrency, fDateTime, fTime } from '@/shared/utils'\r\n\r\nconst status = {\r\n  Liquidado: {\r\n    name: 'Liquidado',\r\n    color: 'success'\r\n  },\r\n  Devuelto: {\r\n    name: 'Devuelto',\r\n    color: 'error'\r\n  },\r\n  'En tránsito': {\r\n    name: 'En tránsito',\r\n    color: 'warning'\r\n  },\r\n  default: {\r\n    name: 'No reconocido',\r\n    color: 'warning'\r\n  }\r\n}\r\n\r\nconst SPEI_OPERATIONS = {\r\n  SPEI_IN: 'Spei In',\r\n  SPEI_OUT: 'Spei Out'\r\n}\r\n\r\nexport const ViaboSpeiMovementsAdapter = movements => {\r\n  const movementsAdapted = movements?.map(movement => {\r\n    const date = movement?.liquidationDate ? movement?.liquidationDate : movement?.createDate\r\n    return {\r\n      id: movement?.id,\r\n      stpId: movement?.stpId,\r\n      type: movement?.typeName?.toUpperCase(),\r\n      beneficiary: {\r\n        name: movement?.destinationName,\r\n        account: movement?.destinationAccount,\r\n        bankCode: movement?.destinationBankCode\r\n      },\r\n      source: {\r\n        name: movement?.sourceName,\r\n        account: movement?.sourceAccount\r\n      },\r\n      movement: movement?.concept,\r\n      date: {\r\n        original: date,\r\n        dateTime: fDateTime(date),\r\n        time: fTime(date),\r\n        groupBy: format(new Date(date), 'dd MMMM', { locale: es })\r\n      },\r\n      amount: {\r\n        number: movement?.amount,\r\n        format:\r\n          movement?.typeName === SPEI_OPERATIONS.SPEI_IN\r\n            ? fCurrency(movement?.amount || 0)\r\n            : `- ${fCurrency(movement?.amount || 0)}`,\r\n        color: movement?.typeName === SPEI_OPERATIONS.SPEI_IN ? 'success.main' : 'error'\r\n      },\r\n      reference: movement?.reference,\r\n      banxicoKey: movement?.trackingKey,\r\n      status: {\r\n        ...(movement?.statusName ? status[movement.statusName] || status.default : status.default)\r\n      },\r\n      commissions: {\r\n        fee: fCurrency(-movement?.commissions?.feeStp || 0),\r\n        internalCompany: fCurrency(-movement?.commissions?.internal || 0),\r\n        speiIn: fCurrency(-movement?.commissions?.speiIn || 0),\r\n        speiOut: fCurrency(-movement?.commissions?.speiOut || 0),\r\n        stpAccount: fCurrency(-movement?.commissions?.stpAccount || 0),\r\n        total:\r\n          movement?.typeName === SPEI_OPERATIONS.SPEI_IN\r\n            ? fCurrency(movement?.commissions?.total || 0)\r\n            : `- ${fCurrency(movement?.commissions?.total || 0)}`\r\n      },\r\n      fileCEP: movement?.urlCEP\r\n    }\r\n  })\r\n\r\n  movementsAdapted.sort((a, b) => new Date(b.date.original) - new Date(a.date.original))\r\n\r\n  const movementsByDay = {}\r\n  movementsAdapted.forEach(movement => {\r\n    const dateKey = movement.date.groupBy\r\n    if (!movementsByDay[dateKey]) {\r\n      movementsByDay[dateKey] = []\r\n    }\r\n    movementsByDay[dateKey].push(movement)\r\n  })\r\n\r\n  return { groupByDay: movementsByDay, original: movementsAdapted }\r\n}\r\n","import { fCurrency } from '@/shared/utils'\r\n\r\nexport const ViaboSpeiResumeBalance = balance => ({\r\n  balance: {\r\n    amount: Number(balance?.balance),\r\n    currency: fCurrency(balance?.balance || 0)\r\n  },\r\n  deposits: {\r\n    balance: Number(balance?.speiInTotal),\r\n    currency: fCurrency(balance?.speiInTotal || 0),\r\n    count: balance?.speiInCount || 0\r\n  },\r\n  transfers: {\r\n    balance: Number(balance?.speiOutTotal),\r\n    currency: fCurrency(balance?.speiOutTotal || 0),\r\n    count: balance?.speiOutCount || 0\r\n  }\r\n})\r\n","export const VIABO_SPEI_SHARED_KEYS = {\r\n  ACCOUNT_INFO: 'viabo-spei-balance',\r\n  BALANCE_RESUME: 'viabo-spei-balance-resume',\r\n  MOVEMENTS: 'viabo-spei-movements'\r\n}\r\n","import { ViaboSpeiMovementsAdapter, ViaboSpeiResumeBalance } from '../adapters'\r\n\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const getBalanceResumeViaboSpei = async filters => {\r\n  const { data } = await axios.get('/api/spei/transaccions/balance', {\r\n    params: filters\r\n  })\r\n\r\n  return ViaboSpeiResumeBalance(data)\r\n}\r\n\r\nexport const createSpeiOut = async transactions => {\r\n  const { data } = await axios.post('/api/spei/transaction/process-payments', transactions)\r\n  if (data && Array.isArray(data)) {\r\n    return data?.map(operation => ({\r\n      account: operation?.destinationsAccount,\r\n      url: operation?.url\r\n    }))\r\n  }\r\n\r\n  throw new Error('Se realizo las transacciones pero no se obtuvo los comprobantes de las operaciones')\r\n}\r\n\r\nexport const getMovementsViaboSpei = async filters => {\r\n  const { data } = await axios.get('/api/spei/transaccions', {\r\n    params: filters\r\n  })\r\n\r\n  return ViaboSpeiMovementsAdapter(data)\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { VIABO_SPEI_SHARED_KEYS } from '../adapters'\r\nimport { getMovementsViaboSpei } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindViaboSpeiMovements = (filters, options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const query = useQuery({\r\n    queryKey: [VIABO_SPEI_SHARED_KEYS.MOVEMENTS, filters],\r\n    queryFn: ({ signal }) => getMovementsViaboSpei(filters),\r\n    refetchOnWindowFocus: false,\r\n    retry: false,\r\n    staleTime: 300000,\r\n    ...options\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (query?.isError) {\r\n      const errorMessage = getErrorAPI(\r\n        query.error,\r\n        'No se puede obtener los movimientos de la cuenta. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(query.error)\r\n      })\r\n    }\r\n  }, [query.isError, query.error])\r\n\r\n  return {\r\n    ...query,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { useEffect, useMemo, useState } from 'react'\n\nimport { Search } from '@mui/icons-material'\nimport {\n  Box,\n  ClickAwayListener,\n  Divider,\n  InputAdornment,\n  List,\n  ListSubheader,\n  Pagination,\n  Stack,\n  Typography\n} from '@mui/material'\nimport { sub } from 'date-fns'\nimport { AnimatePresence, m } from 'framer-motion'\n\nimport { AdminSpeiMovementItem } from './AdminSpeiMovementItem'\n\nimport { AdminSpeiMovementSkeleton } from '@/app/business/viabo-spei/dashboard/components/movements/AdminSpeiMovementSkeleton'\nimport { useAdminDashboardSpeiStore } from '@/app/business/viabo-spei/dashboard/store'\nimport { useFindViaboSpeiMovements } from '@/app/business/viabo-spei/shared/hooks'\nimport { searchByTerm } from '@/app/shared/utils'\nimport { varFade } from '@/shared/components/animate'\nimport { InputDateRange, InputStyle } from '@/shared/components/form'\nimport { SearchNotFound } from '@/shared/components/notifications'\nimport { usePagination } from '@/shared/hooks'\n\nexport const AdminSpeiAllTransactions = () => {\n  const setFilter = useAdminDashboardSpeiStore(state => state.setFilterMovements)\n  const filterDate = useAdminDashboardSpeiStore(state => state.filterMovements)\n  const selectedAccount = useAdminDashboardSpeiStore(state => state.selectedAccount)\n\n  const currentDate = new Date()\n\n  const initialStartDate = useMemo(\n    () => (filterDate?.startDate ? new Date(filterDate?.startDate) : sub(currentDate, { days: 30 })),\n    [filterDate?.startDate]\n  )\n  const initialEndDate = useMemo(\n    () => (filterDate?.endDate ? new Date(filterDate?.endDate) : currentDate),\n    [filterDate?.endDate]\n  )\n\n  const [startDate, setStartDate] = useState(initialStartDate)\n  const [endDate, setEndDate] = useState(initialEndDate)\n\n  const queryMovements = useFindViaboSpeiMovements(\n    { initialDate: startDate, endDate, account: selectedAccount?.account?.number },\n    { enabled: !!selectedAccount?.account?.number }\n  )\n\n  const movements = queryMovements?.data?.original || []\n\n  const { isLoading, refetch } = queryMovements\n\n  const [page, setPage] = useState(1)\n  const [searchTerm, setSearchTerm] = useState('')\n  const [isSearchFocused, setSearchFocused] = useState(false)\n  const [searchResult, setSearchResult] = useState([])\n\n  const PER_PAGE = 10\n  const source = useMemo(\n    () => (searchTerm !== '' ? searchResult : movements) || [],\n    [searchTerm, movements, searchResult]\n  )\n  const _DATA = usePagination(source || [], PER_PAGE)\n  const length = source?.length || 0\n  const count = Math.ceil(length / PER_PAGE)\n  const paginatedMovements = _DATA.currentData()\n\n  const handleChange = (e, p) => {\n    setPage(p)\n    _DATA.jump(p)\n  }\n\n  const handleClickAwaySearch = () => {\n    setSearchFocused(false)\n  }\n\n  const handleChangeSearch = async event => {\n    const { value } = event.target\n    setSearchTerm(value)\n    if (value) {\n      const filterCards = searchByTerm(movements, searchTerm)\n      setSearchResult(filterCards)\n    } else {\n      setSearchResult(movements)\n    }\n  }\n\n  const handleSearchFocus = () => {\n    setSearchFocused(true)\n  }\n\n  const handleDateRange = range => {\n    const { startDate, endDate } = range\n    if (endDate !== null && startDate !== null) {\n      setEndDate(endDate)\n      setStartDate(startDate)\n    }\n  }\n  const displayResults = searchTerm && isSearchFocused\n  const loading = isLoading\n\n  useEffect(() => {\n    if (startDate && endDate) {\n      refetch()\n      setFilter({ startDate, endDate })\n    }\n  }, [startDate, endDate])\n\n  return (\n    <Stack gap={3}>\n      <Box display=\"flex\" flexDirection={{ xs: 'column', sm: 'row' }}>\n        <Box>\n          <ClickAwayListener onClickAway={handleClickAwaySearch}>\n            <InputStyle\n              fullWidth\n              size=\"small\"\n              value={searchTerm}\n              onFocus={handleSearchFocus}\n              onChange={handleChangeSearch}\n              placeholder=\"Buscar ...\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <Search sx={{ color: 'text.disabled', width: 20, height: 20 }} />\n                  </InputAdornment>\n                )\n              }}\n            />\n          </ClickAwayListener>\n        </Box>\n        <Box sx={{ flex: '1 1 auto', mb: { xs: 3 } }} />\n        <InputDateRange startDate={startDate} endDate={endDate} onSubmit={handleDateRange} />\n      </Box>\n      <Stack>\n        <Divider sx={{ borderStyle: 'dashed' }} />\n        <List>\n          <AnimatePresence>\n            {paginatedMovements.map((movement, index) => (\n              <div key={index}>\n                {(index === 0 || paginatedMovements[index - 1]?.date?.groupBy !== movement.date?.groupBy) && (\n                  <ul>\n                    <ListSubheader\n                      component={m.div}\n                      {...varFade().inRight}\n                      sx={{ backgroundColor: 'transparent', pt: 2 }}\n                    >\n                      <Typography variant=\"subtitle1\" color=\"text.secondary\">\n                        {movement?.date?.groupBy}\n                      </Typography>\n                    </ListSubheader>\n                  </ul>\n                )}\n                <AdminSpeiMovementItem\n                  component={m.div}\n                  {...varFade().inRight}\n                  key={movement?.id}\n                  movement={movement}\n                />\n              </div>\n            ))}\n          </AnimatePresence>\n        </List>\n        {displayResults && paginatedMovements?.length === 0 && movements?.length > 0 && (\n          <SearchNotFound\n            widthImage=\"15%\"\n            sx={{ p: 1, display: 'flex', flexDirection: 'column', alignItems: 'center' }}\n            searchQuery={searchTerm}\n          />\n        )}\n      </Stack>\n\n      {loading && [...Array(10)]?.map((number, index) => <AdminSpeiMovementSkeleton key={index} />)}\n\n      {movements?.length > 0 && !isLoading && (\n        <Stack alignItems={'center'} justifyContent={'center'}>\n          <Pagination count={count} page={page} onChange={handleChange} variant=\"outlined\" shape=\"rounded\" />\n        </Stack>\n      )}\n    </Stack>\n  )\n}\n","import { useEffect, useRef } from 'react'\n\nimport { ArrowBack } from '@mui/icons-material'\nimport { Avatar, Box, Stack, Typography } from '@mui/material'\nimport { stringAvatar } from '@theme/utils'\n\nimport { ButtonViaboSpei } from '../../shared/components'\nimport { AdminSpeiAllTransactions } from '../components/movements/AdminSpeiAllTransactions'\nimport { useAdminDashboardSpeiStore } from '../store'\n\nexport const AdminDashboardSpeiTransactionsPage = () => {\n  const setOpenTransactions = useAdminDashboardSpeiStore(state => state.setOpenTransactions)\n  const selectedAccount = useAdminDashboardSpeiStore(state => state.selectedAccount)\n  const ref = useRef(null)\n\n  useEffect(() => {\n    if (ref?.current) {\n      ref.current.scrollIntoView({ behavior: 'instant' })\n    }\n  }, [])\n\n  return (\n    <Stack gap={3} ref={ref}>\n      <Box>\n        <ButtonViaboSpei\n          variant=\"outlined\"\n          sx={{ color: 'text.primary' }}\n          onClick={() => setOpenTransactions(false)}\n          startIcon={<ArrowBack />}\n        >\n          Regresar\n        </ButtonViaboSpei>\n      </Box>\n\n      <Stack flexDirection={'row'} gap={3} alignItems={'center'}>\n        <Avatar {...stringAvatar(selectedAccount?.name || '')}></Avatar>\n        <Stack>\n          <Typography variant=\"subtitle1\" color={'text.disabled'}>\n            Cuenta {selectedAccount?.account?.hidden?.slice(-8)}\n          </Typography>\n          <Typography fontWeight={'bold'} sx={{ typography: 'h3' }}>\n            {selectedAccount?.balance?.format}\n          </Typography>\n        </Stack>\n      </Stack>\n      <AdminSpeiAllTransactions />\n    </Stack>\n  )\n}\n","import { lazy, useEffect } from 'react'\n\nimport { Box } from '@mui/material'\nimport { m } from 'framer-motion'\n\nimport { useSharedViaboSpeiStore } from '../../shared/store'\n\nimport { AdminDashboardSpeiResume } from '@/app/business/viabo-spei/dashboard/pages/AdminDashboardSpeiResume'\nimport { AdminDashboardSpeiTransactionsPage } from '@/app/business/viabo-spei/dashboard/pages/AdminDashboardSpeiTransactionsPage'\nimport { useAdminDashboardSpeiStore } from '@/app/business/viabo-spei/dashboard/store'\nimport { MotionContainer, varFade } from '@/shared/components/animate'\nimport { Page } from '@/shared/components/containers'\nimport { ContainerPage } from '@/shared/components/containers/ContainerPage'\nimport { HeaderPage } from '@/shared/components/layout'\nimport { Lodable } from '@/shared/components/lodables'\n\nconst AdminSpeiMovementDrawer = Lodable(lazy(() => import('../components/movements/AdminSpeiMovementDrawer')))\n\nexport const AdminDashboardViaboSpei = () => {\n  const title = useSharedViaboSpeiStore(state => state.dashboardTitle)\n  const isOpenTransactions = useAdminDashboardSpeiStore(state => state.isOpenTransactions)\n  const setDashboardTitle = useSharedViaboSpeiStore(state => state.setDashboardTitle)\n\n  useEffect(() => {\n    if (isOpenTransactions) {\n      return setDashboardTitle('Transacciones')\n    }\n    return setDashboardTitle('Dashboard')\n  }, [isOpenTransactions])\n\n  return (\n    <Page title={title}>\n      <ContainerPage sx={{ pb: 3 }}>\n        <HeaderPage name={title} links={[]} />\n        <Box component={MotionContainer}>\n          {!isOpenTransactions && (\n            <m.div variants={varFade().in}>\n              <AdminDashboardSpeiResume />\n            </m.div>\n          )}\n          {isOpenTransactions && (\n            <m.div variants={varFade().in}>\n              <AdminDashboardSpeiTransactionsPage />\n            </m.div>\n          )}\n        </Box>\n        <AdminSpeiMovementDrawer />\n      </ContainerPage>\n    </Page>\n  )\n}\n"],"file":"assets/js/AdminDashboardViaboSpei-2dYH6jVv.js"}