{"version":3,"mappings":"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","names":["CATALOGS_SHARED_KEYS","ProfilesAdapter","profiles","profilesAdapted","profile","convertCatalogToReactSelect","getProfilesCatalog","data","axios","useFindProfiles","options","customError","setCustomError","useState","query","useQuery","useEffect","errorMessage","getErrorAPI","toast","getNotificationTypeByErrorCode","initialState","causesStore","set","get","open","state","cause","useCausesStore","createStore","CAUSES_KEYS","CausesListAdapter","causes","_a","NewCauseAdapter","_b","newCause","getCausesList","changeStatusCause","updateCause","useChangeStatusCause","client","useQueryClient","changeStatus","useMutation","formData","onSuccess","onError","mutationOptions","isFunction","error","errorFormatted","useCreateNewCause","useFindCausesList","useUpdateCause"],"sources":["../../../../../frontend/src/app/catalogs/shared/adapters/catalogs-shared-keys.js","../../../../../frontend/src/app/catalogs/shared/adapters/profiles-adapter.js","../../../../../frontend/src/app/catalogs/shared/services/SharedCatalogsRepository.js","../../../../../frontend/src/app/catalogs/shared/hooks/useFindProfiles.js","../../../../../frontend/src/app/catalogs/causes/store/causes-store.js","../../../../../frontend/src/app/catalogs/causes/adapters/causes-keys.js","../../../../../frontend/src/app/catalogs/causes/adapters/causes-list-adapter.js","../../../../../frontend/src/app/catalogs/causes/adapters/new-cause-adapter.js","../../../../../frontend/src/app/catalogs/causes/services/CausesRepository.js","../../../../../frontend/src/app/catalogs/causes/hooks/useChangeStatusCause.js","../../../../../frontend/src/app/catalogs/causes/hooks/useCreateNewCause.js","../../../../../frontend/src/app/catalogs/causes/hooks/useFindCausesList.js","../../../../../frontend/src/app/catalogs/causes/hooks/useUpdateCause.js"],"sourcesContent":["export const CATALOGS_SHARED_KEYS = {\r\n  PROFILES: 'profiles-catalog'\r\n}\r\n","import { convertCatalogToReactSelect } from '@/shared/utils'\r\n\r\nexport const ProfilesAdapter = profiles => {\r\n  const profilesAdapted = profiles?.map(profile => ({\r\n    id: profile?.id,\r\n    status: profile?.active,\r\n    name: profile?.name,\r\n    initUrl: profile?.urlInit,\r\n    level: Number(profile?.level)\r\n  }))\r\n\r\n  return convertCatalogToReactSelect(profilesAdapted, 'id', 'name', 'status')\r\n}\r\n","import { ProfilesAdapter } from '../adapters'\r\n\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const getProfilesCatalog = async () => {\r\n  const { data } = await axios.get('/api/profiles')\r\n\r\n  return ProfilesAdapter(data)\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { CATALOGS_SHARED_KEYS } from '../adapters'\r\nimport { getProfilesCatalog } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindProfiles = (options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const query = useQuery({\r\n    queryKey: [CATALOGS_SHARED_KEYS.PROFILES],\r\n    queryFn: getProfilesCatalog,\r\n    staleTime: 60000,\r\n    ...options\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (query?.isError) {\r\n      const errorMessage = getErrorAPI(\r\n        query.error,\r\n        'No se puede obtener los perfiles del sistema. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(errorMessage)\r\n      })\r\n    }\r\n  }, [query.isError, query.error])\r\n\r\n  return {\r\n    ...query,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { createStore } from '@/app/shared/store'\r\n\r\nconst initialState = {\r\n  openNewCause: false,\r\n  cause: null\r\n}\r\n\r\nconst causesStore = (set, get) => ({\r\n  ...initialState,\r\n  setOpenNewCause: open => {\r\n    set(\r\n      state => ({\r\n        openNewCause: open\r\n      }),\r\n      false,\r\n      'SET_OPEN_NEW_CAUSE'\r\n    )\r\n  },\r\n  setCause: cause => {\r\n    set(\r\n      state => ({\r\n        cause\r\n      }),\r\n      false,\r\n      'SET_CAUSE_DETAILS'\r\n    )\r\n  }\r\n})\r\n\r\nexport const useCausesStore = createStore(causesStore)\r\n","export const CAUSES_KEYS = {\r\n  LIST: 'catalog-causes-list'\r\n}\r\n","export const CausesListAdapter = causes =>\r\n  causes?.map(cause => ({\r\n    id: cause?.id,\r\n    cause: cause?.name,\r\n    description: cause?.description,\r\n    color: cause?.color?.trim(),\r\n    status: cause?.active === '1',\r\n    requesterProfile: { id: cause?.applicantProfileId, name: cause?.applicantProfileName },\r\n    receptorProfile: { id: cause?.assignedProfileId, name: cause?.assignedProfileName }\r\n  })) || []\r\n","export const NewCauseAdapter = cause => ({\r\n  reason: cause?.cause,\r\n  description: cause?.description,\r\n  applicantProfileId: cause?.requesterProfile?.value || '',\r\n  assignedProfileId: cause?.receptorProfile?.value || '',\r\n  color: cause?.color\r\n})\r\n","import { CausesListAdapter } from '../adapters'\r\n\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const newCause = async cause => {\r\n  const { data } = await axios.post('/api/support-reason/new', cause)\r\n\r\n  return data\r\n}\r\n\r\nexport const getCausesList = async () => {\r\n  const { data } = await axios.get('/api/tickets/support-reasons')\r\n\r\n  return CausesListAdapter(data)\r\n}\r\n\r\nexport const changeStatusCause = async cause => {\r\n  const { data } = await axios.put(\r\n    `/api/tickets/support-reasons/${cause?.id}/${cause?.changeStatus ? 'disable' : 'enable'}`\r\n  )\r\n  return cause\r\n}\r\n\r\nexport const updateCause = async cause => {\r\n  const { data } = await axios.put('/api/support-reason/update', cause)\r\n\r\n  return data\r\n}\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { CAUSES_KEYS } from '../adapters'\r\nimport { changeStatusCause } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\nimport { isFunction } from '@/shared/utils'\r\n\r\nexport const useChangeStatusCause = (options = {}) => {\r\n  const client = useQueryClient()\r\n  const changeStatus = useMutation({\r\n    mutationFn: changeStatusCause,\r\n    ...options\r\n  })\r\n  const mutate = async (formData, options) => {\r\n    const { onSuccess, onError, ...mutationOptions } = options\r\n\r\n    try {\r\n      await toast.promise(changeStatus.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Actualizando estado de la causa...',\r\n        success: {\r\n          render({ data }) {\r\n            client.invalidateQueries([CAUSES_KEYS.LIST])\r\n            isFunction(onSuccess) && onSuccess(data)\r\n            return 'Se actualizó el estado de la causa con éxito'\r\n          }\r\n        }\r\n      })\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operación en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      isFunction(onError) && onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...changeStatus,\r\n    mutate\r\n  }\r\n}\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { CAUSES_KEYS } from '../adapters'\r\nimport { newCause } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\nimport { isFunction } from '@/shared/utils'\r\n\r\nexport const useCreateNewCause = (options = {}) => {\r\n  const client = useQueryClient()\r\n  const cause = useMutation(newCause, options)\r\n  const mutate = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      const data = await toast.promise(cause.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Guardando nueva causa ...',\r\n        success: 'Se creó la causa con éxito'\r\n      })\r\n      client.invalidateQueries([CAUSES_KEYS.LIST])\r\n      isFunction(onSuccess) && onSuccess(data)\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operación en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      isFunction(onError) && onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...cause,\r\n    mutate\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { CAUSES_KEYS } from '../adapters'\r\nimport { getCausesList } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindCausesList = (options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const query = useQuery({\r\n    queryKey: [CAUSES_KEYS.LIST],\r\n    queryFn: getCausesList,\r\n    refetchOnWindowFocus: false,\r\n    retry: false,\r\n    staleTime: 300000,\r\n    ...options\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (query?.isError) {\r\n      const errorMessage = getErrorAPI(\r\n        query.error,\r\n        'No se puede obtener la lista de las causas. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(query.error)\r\n      })\r\n    }\r\n  }, [query.isError, query.error])\r\n\r\n  return {\r\n    ...query,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { CAUSES_KEYS } from '../adapters'\r\nimport { updateCause } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\nimport { isFunction } from '@/shared/utils'\r\n\r\nexport const useUpdateCause = (options = {}) => {\r\n  const client = useQueryClient()\r\n  const cause = useMutation(updateCause, options)\r\n  const mutate = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      const data = await toast.promise(cause.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Actualizando causa ...',\r\n        success: 'Se actualizó la causa con éxito'\r\n      })\r\n      client.invalidateQueries([CAUSES_KEYS.LIST])\r\n      isFunction(onSuccess) && onSuccess(data)\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operación en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      isFunction(onError) && onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...cause,\r\n    mutate\r\n  }\r\n}\r\n"],"file":"assets/js/CatalogCauses-6vzuqH0g.js"}