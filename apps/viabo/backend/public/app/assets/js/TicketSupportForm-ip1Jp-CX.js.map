{"version":3,"file":"TicketSupportForm-ip1Jp-CX.js","sources":["../../../../../frontend/src/app/support/new-ticket-support/adapters/new-ticket-support-adapter.js","../../../../../frontend/src/app/support/new-ticket-support/hooks/useCreateNewTicketSupport.js"],"sourcesContent":["export const NewTicketSupportAdapter = ticket => {\r\n  const formData = new FormData()\r\n\r\n  const ticketAdapted = {\r\n    supportReasonId: ticket?.cause?.id,\r\n    description: ticket?.description\r\n  }\r\n\r\n  Object.entries(ticketAdapted)?.forEach(([key, value]) => {\r\n    formData.append(key, value)\r\n  })\r\n\r\n  if (ticket?.file) {\r\n    formData.append('files', ticket?.file)\r\n  }\r\n\r\n  return formData\r\n}\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { TICKETS_SUPPORT_LIST_KEYS } from '../../ticket-support-list/adapters'\r\nimport { newTicketSupport } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\nimport { isFunction } from '@/shared/utils'\r\n\r\nexport const useCreateNewTicketSupport = (options = {}) => {\r\n  const client = useQueryClient()\r\n  const ticket = useMutation(newTicketSupport, options)\r\n  const mutate = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      const data = await toast.promise(ticket.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Generando ticket de soporte ...',\r\n        success: {\r\n          render({ data }) {\r\n            isFunction(onSuccess) && onSuccess(data)\r\n            return 'Se genero el ticket con éxito'\r\n          }\r\n        }\r\n      })\r\n      client.invalidateQueries([TICKETS_SUPPORT_LIST_KEYS.ASSIGNED_LIST])\r\n      client.invalidateQueries([TICKETS_SUPPORT_LIST_KEYS.GENERATED_LIST])\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operación en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      isFunction(onError) && onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...ticket,\r\n    mutate\r\n  }\r\n}\r\n"],"names":["NewTicketSupportAdapter","ticket","formData","ticketAdapted","_a","_b","key","value","useCreateNewTicketSupport","options","client","useQueryClient","useMutation","newTicketSupport","onSuccess","onError","mutationOptions","data","toast","isFunction","TICKETS_SUPPORT_LIST_KEYS","error","errorFormatted","getErrorAPI","getNotificationTypeByErrorCode"],"mappings":"wmBAAO,MAAMA,EAA0BC,GAAU,SAC/C,MAAMC,EAAW,IAAI,SAEfC,EAAgB,CACpB,iBAAiBC,EAAAH,GAAA,YAAAA,EAAQ,QAAR,YAAAG,EAAe,GAChC,YAAaH,GAAA,YAAAA,EAAQ,WACtB,EAED,OAAAI,EAAA,OAAO,QAAQF,CAAa,IAA5B,MAAAE,EAA+B,QAAQ,CAAC,CAACC,EAAKC,CAAK,IAAM,CACvDL,EAAS,OAAOI,EAAKC,CAAK,CAC9B,GAEMN,GAAA,MAAAA,EAAQ,MACVC,EAAS,OAAO,QAASD,GAAA,YAAAA,EAAQ,IAAI,EAGhCC,CACT,ECRaM,EAA4B,CAACC,EAAU,KAAO,CACzD,MAAMC,EAASC,EAAgB,EACzBV,EAASW,EAAYC,EAAkBJ,CAAO,EA4BpD,MAAO,CACL,GAAGR,EACH,OA7Ba,MAAOC,EAAUO,IAAY,CAC1C,KAAM,CAAE,UAAAK,EAAW,QAAAC,EAAS,gBAAAC,CAAiB,EAAGP,EAEhD,GAAI,CACF,MAAMQ,EAAO,MAAMC,EAAM,QAAQjB,EAAO,YAAYC,EAAUc,CAAe,EAAG,CAC9E,QAAS,kCACT,QAAS,CACP,OAAO,CAAE,KAAAC,GAAQ,CACf,OAAAE,EAAWL,CAAS,GAAKA,EAAUG,CAAI,EAChC,+BACR,CACF,CACT,CAAO,EACDP,EAAO,kBAAkB,CAACU,EAA0B,aAAa,CAAC,EAClEV,EAAO,kBAAkB,CAACU,EAA0B,cAAc,CAAC,CACpE,OAAQC,EAAO,CACd,MAAMC,EAAiBC,EACrBF,EACA,8FACD,EACDF,EAAWJ,CAAO,GAAKA,EAAQO,CAAc,EAC7CJ,EAAM,MAAMI,EAAgB,CAC1B,KAAME,EAA+BH,CAAK,CAClD,CAAO,CACF,CACF,CAKA,CACH"}