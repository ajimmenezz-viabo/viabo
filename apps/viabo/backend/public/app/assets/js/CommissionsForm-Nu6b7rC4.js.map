{"version":3,"file":"CommissionsForm-Nu6b7rC4.js","sources":["../../../../../frontend/src/app/management/commerces/adapters/commerceCommissionsAdapter.js","../../../../../frontend/src/app/management/commerces/hooks/useUpdateCommerceCommissions.js"],"sourcesContent":["export const CommerceCommissionsAdapter = (commissions, commerceId) => ({\r\n  commerceId,\r\n  speiInCarnet: commissions?.speiInCarnet,\r\n  speiOutCarnet: commissions?.speiOutCarnet,\r\n  speiInMasterCard: commissions?.speiInMasterCard,\r\n  speiOutMasterCard: commissions?.speiOutMasterCard,\r\n  pay: commissions?.viaboPay,\r\n  sharedTerminal: commissions?.cloud\r\n})\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { MANAGEMENT_COMMERCES_KEYS } from '../adapters'\r\nimport { updateCommerceCommissions } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useUpdateCommerceCommissions = (options = {}) => {\r\n  const client = useQueryClient()\r\n  const updateCommissions = useMutation(updateCommerceCommissions, options)\r\n  const commissions = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      await toast.promise(updateCommissions.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Actualizando Comisiones ...',\r\n        success: {\r\n          render({ data }) {\r\n            client.invalidateQueries([MANAGEMENT_COMMERCES_KEYS.COMMERCE_LIST])\r\n            onSuccess(data)\r\n\r\n            return 'Se actualizaron las comisiones con Ã©xito'\r\n          }\r\n        }\r\n      })\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operacion en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...updateCommissions,\r\n    mutate: commissions\r\n  }\r\n}\r\n"],"names":["CommerceCommissionsAdapter","commissions","commerceId","useUpdateCommerceCommissions","options","client","useQueryClient","updateCommissions","useMutation","updateCommerceCommissions","formData","onSuccess","onError","mutationOptions","toast","data","MANAGEMENT_COMMERCES_KEYS","error","errorFormatted","getErrorAPI","getNotificationTypeByErrorCode"],"mappings":"08BAAO,MAAMA,EAA6B,CAACC,EAAaC,KAAgB,CACtE,WAAAA,EACA,aAAcD,GAAA,YAAAA,EAAa,aAC3B,cAAeA,GAAA,YAAAA,EAAa,cAC5B,iBAAkBA,GAAA,YAAAA,EAAa,iBAC/B,kBAAmBA,GAAA,YAAAA,EAAa,kBAChC,IAAKA,GAAA,YAAAA,EAAa,SAClB,eAAgBA,GAAA,YAAAA,EAAa,KAC/B,GCAaE,EAA+B,CAACC,EAAU,KAAO,CAC5D,MAAMC,EAASC,EAAgB,EACzBC,EAAoBC,EAAYC,EAA2BL,CAAO,EA4BxE,MAAO,CACL,GAAGG,EACH,OA7BkB,MAAOG,EAAUN,IAAY,CAC/C,KAAM,CAAE,UAAAO,EAAW,QAAAC,EAAS,gBAAAC,CAAiB,EAAGT,EAEhD,GAAI,CACF,MAAMU,EAAM,QAAQP,EAAkB,YAAYG,EAAUG,CAAe,EAAG,CAC5E,QAAS,8BACT,QAAS,CACP,OAAO,CAAE,KAAAE,GAAQ,CACf,OAAAV,EAAO,kBAAkB,CAACW,EAA0B,aAAa,CAAC,EAClEL,EAAUI,CAAI,EAEP,0CACR,CACF,CACT,CAAO,CACF,OAAQE,EAAO,CACd,MAAMC,EAAiBC,EACrBF,EACA,8FACD,EACDL,EAAQM,CAAc,EACtBJ,EAAM,MAAMI,EAAgB,CAC1B,KAAME,EAA+BH,CAAK,CAClD,CAAO,CACF,CACF,CAKA,CACH"}