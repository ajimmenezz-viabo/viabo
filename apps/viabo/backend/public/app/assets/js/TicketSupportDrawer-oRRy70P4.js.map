{"version":3,"mappings":"sLAAO,MAAMA,EAA0B,CACrC,kBAAmB,mCACrB,ECFaC,EAA+BC,IAC1CA,GAAA,YAAAA,EAAQ,IAAIC,GAAU,gBACpB,GAAIA,GAAA,YAAAA,EAAO,GACX,MAAOA,GAAA,YAAAA,EAAO,KACd,QAAOC,EAAAD,GAAA,YAAAA,EAAO,QAAP,YAAAC,EAAc,UAAW,GAAK,MAAOC,EAAAF,GAAA,YAAAA,EAAO,QAAP,YAAAE,EAAc,MAC3D,MAAM,GCDIC,EAAmB,MAAMC,GAAU,CAC9C,KAAM,CAAE,KAAAC,CAAI,EAAK,MAAMC,EAAM,KAAK,0BAA2BF,CAAM,EACnE,OAAOC,CACT,EAEaE,EAA2B,SAAY,CAClD,KAAM,CAAE,KAAAF,CAAM,EAAG,MAAMC,EAAM,IAAI,gDAAgD,EACjF,OAAOR,EAA6BO,CAAI,CAC1C,ECFaG,EAA+B,CAACC,EAAU,KAAO,CAC5D,KAAM,CAACC,EAAaC,CAAc,EAAIC,WAAS,IAAI,EAE7CC,EAAQC,EAAS,CACrB,SAAU,CAACjB,EAAwB,iBAAiB,EACpD,QAASU,EACT,qBAAsB,GACtB,MAAO,GACP,UAAW,IACX,GAAGE,CACP,CAAG,EAEDM,mBAAU,IAAM,CACd,GAAIF,GAAA,MAAAA,EAAO,QAAS,CAClB,MAAMG,EAAeC,EACnBJ,EAAM,MACN,qFACD,EACDF,EAAeK,CAAY,EAC3BE,EAAM,MAAMF,EAAc,CACxB,KAAMG,EAA+BN,EAAM,KAAK,CACxD,CAAO,CACF,CACF,EAAE,CAACA,EAAM,QAASA,EAAM,KAAK,CAAC,EAExB,CACL,GAAGA,EACH,MAAOH,GAAe,IACvB,CACH","names":["NEW_TICKET_SUPPORT_KEYS","TicketCausesByProfileAdapter","causes","cause","_a","_b","newTicketSupport","ticket","data","axios","getTicketCausesByProfile","useFindTicketCausesByProfile","options","customError","setCustomError","useState","query","useQuery","useEffect","errorMessage","getErrorAPI","toast","getNotificationTypeByErrorCode"],"sources":["../../../../../frontend/src/app/support/new-ticket-support/adapters/new-ticket-support-keys.js","../../../../../frontend/src/app/support/new-ticket-support/adapters/ticket-causes-by-profile-adapter.js","../../../../../frontend/src/app/support/new-ticket-support/services/NewTicketSupportRepository.js","../../../../../frontend/src/app/support/new-ticket-support/hooks/useFindTicketCausesByProfile.js"],"sourcesContent":["export const NEW_TICKET_SUPPORT_KEYS = {\r\n  CAUSES_BY_PROFILE: 'new-ticket-causes-list-by-profile'\r\n}\r\n","export const TicketCausesByProfileAdapter = causes =>\r\n  causes?.map(cause => ({\r\n    id: cause?.id,\r\n    cause: cause?.name,\r\n    color: cause?.color?.trim() === '' ? null : cause?.color?.trim()\r\n  })) || []\r\n","import { TicketCausesByProfileAdapter } from '../adapters'\r\n\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const newTicketSupport = async ticket => {\r\n  const { data } = await axios.post('/api/tickets/ticket/new', ticket)\r\n  return data\r\n}\r\n\r\nexport const getTicketCausesByProfile = async () => {\r\n  const { data } = await axios.get('/api/tickets/applicant-profile/support-reasons')\r\n  return TicketCausesByProfileAdapter(data)\r\n}\r\n","import { useEffect, useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { NEW_TICKET_SUPPORT_KEYS } from '../adapters'\r\nimport { getTicketCausesByProfile } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindTicketCausesByProfile = (options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const query = useQuery({\r\n    queryKey: [NEW_TICKET_SUPPORT_KEYS.CAUSES_BY_PROFILE],\r\n    queryFn: getTicketCausesByProfile,\r\n    refetchOnWindowFocus: false,\r\n    retry: false,\r\n    staleTime: 300000,\r\n    ...options\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (query?.isError) {\r\n      const errorMessage = getErrorAPI(\r\n        query.error,\r\n        'No se puede obtener la lista de las causas. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(query.error)\r\n      })\r\n    }\r\n  }, [query.isError, query.error])\r\n\r\n  return {\r\n    ...query,\r\n    error: customError || null\r\n  }\r\n}\r\n"],"file":"assets/js/TicketSupportDrawer-oRRy70P4.js"}