{"version":3,"mappings":"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","names":["CardsPaginatedAdapter","cards","decryptedCards","getDecryptInfo","cardsAdapter","card","CardDetailsAdapter","data","convertCatalogToReactSelect","_interopRequireDefault","require$$0","Refresh","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","getCommerceCards","filters","signal","columnFilters","globalFilter","pageIndex","pageSize","sorting","fetchURL","axios","assignCards","updateUserInfo","userInfo","recoveryPasswordAssignedUser","user","useFindAllCommerceCards","options","customError","setCustomError","useState","useQuery","ALL_COMMERCE_CARDS_KEYS","error","errorMessage","getErrorAPI","initialState","assignUserInfo","set","get","open","state","info","element","useAssignUserCard","createStore","commerceCards","cardSelected","selectedIndex","newSelected","rows","value","useCommerceCards"],"sources":["../../../../../frontend/src/app/shared/adapters/cardsPaginatedAdapter.js","../../../../../frontend/node_modules/.pnpm/@mui+icons-material@5.15.3_@mui+material@5.15.3_@types+react@18.2.47_react@18.2.0/node_modules/@mui/icons-material/Refresh.js","../../../../../frontend/src/app/business/viabo-card/all-commerce-cards/services/AllCommerceCardsRepository.js","../../../../../frontend/src/app/business/viabo-card/all-commerce-cards/hooks/useFindAllCommerceCards.js","../../../../../frontend/src/app/business/viabo-card/all-commerce-cards/store/assignUserCardStore.js","../../../../../frontend/src/app/business/viabo-card/all-commerce-cards/store/unassignedCardsStore.js"],"sourcesContent":["\r\nimport { CardDetailsAdapter } from './cardAdapter'\r\n\r\nimport { convertCatalogToReactSelect, getDecryptInfo } from '@/shared/utils'\r\n\r\nexport const CardsPaginatedAdapter = cards => {\r\n  const decryptedCards = getDecryptInfo(cards?.ciphertext, cards?.iv)\r\n  if (decryptedCards && Array.isArray(decryptedCards)) {\r\n    const cardsAdapter = decryptedCards?.map(card => CardDetailsAdapter(card))\r\n    const data = convertCatalogToReactSelect(cardsAdapter, 'id', 'cardUserNumber') || []\r\n    return {\r\n      data,\r\n      meta: {\r\n        total: data?.length ?? 0\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new Error('No se pueden obtener las tarjetas')\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n}), 'Refresh');\nexports.default = _default;","import { CardsPaginatedAdapter } from '@/app/shared/adapters'\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const getCommerceCards = async (filters, signal) => {\r\n  const { columnFilters, globalFilter, pageIndex, pageSize, sorting } = filters\r\n\r\n  const fetchURL = new URL('/api/cards/commerce', window.location.origin)\r\n  fetchURL.searchParams.set('start', `${pageIndex * pageSize}`)\r\n  fetchURL.searchParams.set('size', `${pageSize}`)\r\n  fetchURL.searchParams.set('filters', JSON.stringify(columnFilters ?? []))\r\n  fetchURL.searchParams.set('globalFilter', globalFilter ?? '')\r\n  fetchURL.searchParams.set('sorting', JSON.stringify(sorting ?? []))\r\n\r\n  const { data } = await axios.get(fetchURL.href, {\r\n    signal\r\n  })\r\n  return CardsPaginatedAdapter(data)\r\n}\r\n\r\nexport const assignCards = async cards => {\r\n  const { data } = await axios.put('/api/assign/commerce-card/to/user', cards)\r\n  return cards\r\n}\r\n\r\nexport const updateUserInfo = async userInfo => {\r\n  const { data } = await axios.put('/api/card-owner/data/update', userInfo)\r\n  return data\r\n}\r\n\r\nexport const recoveryPasswordAssignedUser = async user => {\r\n  const { data } = await axios.put(`/api/card-owner/password/reset/${user.id}`)\r\n  return data\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\n\r\nimport { ALL_COMMERCE_CARDS_KEYS } from '@/app/business/viabo-card/all-commerce-cards/adapters'\r\nimport { getCommerceCards } from '@/app/business/viabo-card/all-commerce-cards/services'\r\nimport { getErrorAPI } from '@/shared/interceptors'\r\n\r\nexport const useFindAllCommerceCards = (filters = {}, options = {}) => {\r\n  const { columnFilters, globalFilter, pageIndex, pageSize, sorting } = filters\r\n\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const query = useQuery({\r\n    queryKey: [ALL_COMMERCE_CARDS_KEYS.LIST, columnFilters, globalFilter, pageIndex, pageSize, sorting],\r\n    queryFn: async ({ signal }) => getCommerceCards(filters, signal),\r\n    keepPreviousData: true,\r\n    onError: error => {\r\n      const errorMessage = getErrorAPI(\r\n        error,\r\n        'No se puede obtener la lista de tarjetas. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n    },\r\n    staleTime: 60000,\r\n    refetchOnWindowFocus: false,\r\n    ...options\r\n  })\r\n\r\n  return {\r\n    ...query,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { createStore } from '@/app/shared/store'\r\n\r\nconst initialState = {\r\n  cardInfo: null,\r\n  openUserInfo: false,\r\n  hoverInfo: null,\r\n  hoverElement: null\r\n}\r\nconst assignUserInfo = (set, get) => ({\r\n  ...initialState,\r\n  setOpenUserInfo: open => {\r\n    set(\r\n      state => ({\r\n        openUserInfo: open\r\n      }),\r\n      false,\r\n      'SET_OPEN_USER_INFO_MODAL'\r\n    )\r\n  },\r\n  setCardInfo: card => {\r\n    set(\r\n      state => ({\r\n        cardInfo: card\r\n      }),\r\n      false,\r\n      'SET_CARD_INFO'\r\n    )\r\n  },\r\n  setHoverInfo: info => {\r\n    set(\r\n      state => ({\r\n        hoverInfo: info\r\n      }),\r\n      false,\r\n      'SET_HOVER_INFO'\r\n    )\r\n  },\r\n  setHoverElement: element => {\r\n    set(\r\n      state => ({\r\n        hoverElement: element\r\n      }),\r\n      false,\r\n      'SET_HOVER_ElEMENT'\r\n    )\r\n  }\r\n})\r\n\r\nexport const useAssignUserCard = createStore(assignUserInfo)\r\n","import { createStore } from '@/app/shared/store'\r\n\r\nconst initialState = {\r\n  cards: [],\r\n  rows: [],\r\n  openAssign: false\r\n}\r\nconst commerceCards = (set, get) => ({\r\n  ...initialState,\r\n  setSelectedCard: cardSelected => {\r\n    const { cards } = get()\r\n    const selectedIndex = cards.indexOf(cardSelected)\r\n\r\n    let newSelected = []\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(cards, cardSelected)\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(cards.slice(1))\r\n    } else if (selectedIndex === cards.length - 1) {\r\n      newSelected = newSelected.concat(cards.slice(0, -1))\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(cards.slice(0, selectedIndex), cards.slice(selectedIndex + 1))\r\n    }\r\n\r\n    set(\r\n      state => ({\r\n        cards: newSelected\r\n      }),\r\n      false,\r\n      'SET_SELECTED_INACTIVE_CARDS'\r\n    )\r\n  },\r\n  setAllCards: cards => {\r\n    set(\r\n      state => ({\r\n        cards\r\n      }),\r\n      false,\r\n      'SET_SELECTED_ALL_INACTIVE_CARDS'\r\n    )\r\n  },\r\n  setIndexCards: rows => {\r\n    set(\r\n      state => ({\r\n        rows\r\n      }),\r\n      false,\r\n      'SET_SELECTED_ALL_INACTIVE_ROWS'\r\n    )\r\n  },\r\n  setOpenAssign: value => {\r\n    set(\r\n      state => ({\r\n        openAssign: value\r\n      }),\r\n      false,\r\n      'SET_OPEN_ASSIGN_SIDEBAR'\r\n    )\r\n  },\r\n  resetCards: () => {\r\n    set(\r\n      state => ({\r\n        cards: [],\r\n        rows: []\r\n      }),\r\n      false,\r\n      'RESET_SELECTED_INACTIVE_CARDS'\r\n    )\r\n  }\r\n})\r\n\r\nexport const useCommerceCards = createStore(commerceCards)\r\n"],"file":"assets/js/AllCommerceCards-AR7rjJg4.js"}