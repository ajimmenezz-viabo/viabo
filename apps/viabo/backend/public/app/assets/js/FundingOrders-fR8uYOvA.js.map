{"version":3,"mappings":"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","names":["FUNDING_ORDER_STATUS","getColorFundingOrderStatusByName","name","_a","status","ConciliateMovementsByOrderAdapter","movements","CardMovementsAdapter","getLastStatusDateByFundingOrder","fundingOrder","getFundingOrderAdapter","order","paymentMethods","date","format","es","time","lastStatusDate","fCurrency","fDateTime","_b","_c","_d","_e","FundingOrderAdapter","decryptedOrder","getDecryptInfo","FundingOrdersAdapter","orders","decryptedOrders","FUNDING_ORDERS_KEYS","getFundingOrders","data","axios","getFundingOrderDetails","getMovementsByFundingOrder","conciliateFundingOrder","conciliateOrder","cancelFundingOrder","useFindFundingOrders","options","customError","setCustomError","useState","useQuery","error","errorMessage","getErrorAPI","toast","getNotificationTypeByErrorCode","initialState","fundingOrderStore","set","get","open","state","useFundingOrderStore","createStore"],"sources":["../../../../../frontend/src/app/shared/services/colorStatus.js","../../../../../frontend/src/app/business/funding-orders/adapters/conciliate-movements-by-order-adapter.js","../../../../../frontend/src/app/business/funding-orders/adapters/funding-order-details-adapter.js","../../../../../frontend/src/app/business/funding-orders/adapters/funding-orders-adapter.js","../../../../../frontend/src/app/business/funding-orders/adapters/funding-orders-keys.js","../../../../../frontend/src/app/business/funding-orders/services/FundingOrdersRepository.js","../../../../../frontend/src/app/business/funding-orders/hooks/useFindFundingOrders.js","../../../../../frontend/src/app/business/funding-orders/store/funding-order-store.js"],"sourcesContent":["const CATALOG_CARD_STATUS = [\r\n  {\r\n    id: 4,\r\n    name: 'Sin Asignar',\r\n    color: 'info'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Asignado',\r\n    color: 'primary'\r\n  }\r\n]\r\n\r\nconst FUNDING_ORDER_STATUS = [\r\n  {\r\n    id: 6,\r\n    name: 'PENDIENTE',\r\n    color: 'warning'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'PAGADA',\r\n    color: 'primary'\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'CANCELADA',\r\n    color: 'error'\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'LIQUIDADA',\r\n    color: 'success'\r\n  }\r\n]\r\n\r\nconst getColorCardStatusById = id =>\r\n  CATALOG_CARD_STATUS.find(status => status.id.toString() === id.toString())?.color || 'info'\r\n\r\nconst getColorFundingOrderStatusByName = name =>\r\n  FUNDING_ORDER_STATUS.find(status => status.name === name?.toLowerCase()?.toUpperCase())?.color || 'info'\r\n\r\nexport { getColorCardStatusById, getColorFundingOrderStatusByName }\r\n","import { CardMovementsAdapter } from '@/app/shared/adapters'\r\n\r\nexport const ConciliateMovementsByOrderAdapter = movements => CardMovementsAdapter(movements)\r\n","import { format } from 'date-fns'\r\nimport { es } from 'date-fns/locale'\r\n\r\nimport { fCurrency, fDateTime, getDecryptInfo } from '@/shared/utils'\r\n\r\nconst getLastStatusDateByFundingOrder = fundingOrder => {\r\n  if (fundingOrder?.statusName === 'Pagada') {\r\n    return fundingOrder?.payCashData?.date\r\n  }\r\n\r\n  if (fundingOrder?.statusName === 'Liquidada') {\r\n    return fundingOrder?.conciliationDate\r\n  }\r\n\r\n  if (fundingOrder?.statusName === 'Cancelada') {\r\n    return fundingOrder?.cancellationDate\r\n  }\r\n\r\n  return fundingOrder?.registerDate\r\n}\r\n\r\nexport const getFundingOrderAdapter = order => {\r\n  let paymentMethods = ''\r\n  if (order?.spei && order?.referencePayCash && order.spei !== '' && order.referencePayCash !== '') {\r\n    paymentMethods = 'SPEI,PAYCASH'\r\n  } else if (order?.spei && order.spei !== '') {\r\n    paymentMethods = 'SPEI'\r\n  } else if (order?.referencePayCash && order.referencePayCash !== '') {\r\n    paymentMethods = 'PAYCASH'\r\n  }\r\n\r\n  const date = order?.registerDate ? format(new Date(order?.registerDate), 'dd MMM yyyy', { locale: es }) : ''\r\n  const time = order?.registerDate ? format(new Date(order?.registerDate), 'p') : ''\r\n\r\n  const lastStatusDate = getLastStatusDateByFundingOrder(order)\r\n  return {\r\n    id: order?.id,\r\n    cardId: order?.cardId,\r\n    cardNumber: order?.cardNumber,\r\n    paymentProcessorName: order?.paymentProcessorName,\r\n    paymentMethods,\r\n    referenceNumber: order?.referenceNumber,\r\n    amount: fCurrency(order?.amount),\r\n    status: order?.statusName,\r\n    date: order?.registerDate,\r\n    registerDate: {\r\n      fullDate: fDateTime(order?.registerDate),\r\n      time,\r\n      date\r\n    },\r\n    spei: order?.spei,\r\n    emails: order?.emails?.split(','),\r\n    conciliatedName: order?.conciliated !== 'No' ? 'Conciliada' : 'Sin Conciliar',\r\n    conciliated: order?.conciliated !== 'No',\r\n    conciliationInfo: {\r\n      number: order?.conciliationNumber,\r\n      userId: order?.conciliationUserId,\r\n      userName: order?.conciliationUserName,\r\n      date: order?.conciliationDate ? fDateTime(order?.conciliationDate) : ''\r\n    },\r\n    cancelationInfo: {\r\n      userId: order?.canceledByUserId,\r\n      userName: order?.canceledByUserName,\r\n      date: order?.cancellationDate\r\n    },\r\n    payCash: order?.referencePayCash,\r\n    payCashURLS: order?.instructionsUrls,\r\n    paymentInfo: {\r\n      folio: order?.payCashData?.folio,\r\n      authorizationCode: order?.payCashData?.authorizationCode,\r\n      date: order?.payCashData?.date ? fDateTime(order?.payCashData?.date) : ''\r\n    },\r\n    lastStatusDate: lastStatusDate ? fDateTime(lastStatusDate) : ''\r\n  }\r\n}\r\n\r\nexport const FundingOrderAdapter = order => {\r\n  const decryptedOrder = getDecryptInfo(order?.ciphertext, order?.iv)\r\n  return getFundingOrderAdapter(decryptedOrder)\r\n}\r\n","import { getFundingOrderAdapter } from './funding-order-details-adapter'\r\n\r\nimport { getDecryptInfo } from '@/shared/utils'\r\n\r\nexport const FundingOrdersAdapter = orders => {\r\n  const decryptedOrders = getDecryptInfo(orders?.ciphertext, orders?.iv)\r\n  return decryptedOrders?.map(order => getFundingOrderAdapter(order))\r\n}\r\n","export const FUNDING_ORDERS_KEYS = {\r\n  LIST: 'funding-orders-list',\r\n  MOVEMENTS: 'conciliate-movements',\r\n  DETAILS: 'funding-order-details'\r\n}\r\n","import { ConciliateMovementsByOrderAdapter, FundingOrderAdapter, FundingOrdersAdapter } from '../adapters'\r\n\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const getFundingOrders = async () => {\r\n  const { data } = await axios.get('/api/funding-orders')\r\n  return FundingOrdersAdapter(data)\r\n}\r\n\r\nexport const getFundingOrderDetails = async fundingOrder => {\r\n  const { data } = await axios.get(`/api/funding-order/${fundingOrder?.id}`)\r\n  return FundingOrderAdapter(data)\r\n}\r\n\r\nexport const getMovementsByFundingOrder = async order => {\r\n  const { data } = await axios.get(`/api/master-card/movements/unreconciled?fundingOrderId=${order?.id}`)\r\n  return ConciliateMovementsByOrderAdapter(data)\r\n}\r\n\r\nexport const conciliateFundingOrder = async conciliateOrder => {\r\n  const { data } = await axios.put(`/api/funding-order/conciliation`, conciliateOrder)\r\n  return data\r\n}\r\n\r\nexport const cancelFundingOrder = async fundingOrder => {\r\n  const { data } = await axios.put(`/api/funding-order/cancel/${fundingOrder?.id}`)\r\n  return data\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { FUNDING_ORDERS_KEYS } from '../adapters'\r\nimport { getFundingOrders } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindFundingOrders = (options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const fundingOrders = useQuery([FUNDING_ORDERS_KEYS.LIST], getFundingOrders, {\r\n    staleTime: 60000,\r\n    refetchOnWindowFocus: false,\r\n    onError: error => {\r\n      const errorMessage = getErrorAPI(error, 'No se puede obtener las ordenes de fondeo')\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    },\r\n    ...options\r\n  })\r\n  return {\r\n    ...fundingOrders,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { createStore } from '@/app/shared/store'\r\n\r\nconst initialState = {\r\n  openConciliateModal: false,\r\n  openCancelFundingOrder: false,\r\n  openDetailsFundingOrder: false,\r\n  fundingOrder: null\r\n}\r\n\r\nconst fundingOrderStore = (set, get) => ({\r\n  ...initialState,\r\n  setOpenConciliateModal: open => {\r\n    set(\r\n      state => ({\r\n        openConciliateModal: open\r\n      }),\r\n      false,\r\n      'SET_OPEN_CONCILIATE_MODAL'\r\n    )\r\n  },\r\n  setFundingOrder: order => {\r\n    set(\r\n      state => ({\r\n        fundingOrder: order\r\n      }),\r\n      false,\r\n      'SET_FUNDING_ORDER'\r\n    )\r\n  },\r\n  setOpenCancelFundingOrder: open => {\r\n    set(\r\n      state => ({\r\n        openCancelFundingOrder: open\r\n      }),\r\n      false,\r\n      'SET_OPEN_CANCEL_FUNDING_ORDER'\r\n    )\r\n  },\r\n  setOpenDetailsFundingOrder: open => {\r\n    set(\r\n      state => ({\r\n        openDetailsFundingOrder: open\r\n      }),\r\n      false,\r\n      'SET_OPEN_DETAILS_FUNDING_ORDER'\r\n    )\r\n  }\r\n})\r\n\r\nexport const useFundingOrderStore = createStore(fundingOrderStore)\r\n"],"file":"assets/js/FundingOrders-fR8uYOvA.js"}