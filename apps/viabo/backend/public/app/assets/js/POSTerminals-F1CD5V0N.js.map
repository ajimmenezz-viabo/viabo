{"version":3,"mappings":"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","names":["useTabs","defaultValues","currentTab","setCurrentTab","useState","event","newValue","varSlide","props","distance","durationIn","durationOut","easeIn","easeOut","varTranEnter","varTranExit","TERMINALS_KEYS","CommerceTerminalsAdapter","terminals","terminal","_a","_b","_c","_d","MovementsToConciliateTerminalAdapter","movements","CardMovementsAdapter","TerminalMovementsAdapter","data","movement","amount","date","format","normalizeDateString","es","time","fCurrency","balance","filters","_e","_f","getCommerceTerminals","axios","createPaymentLink","paymentLink","generatePaymentByVirtualTerminal","payment","getTerminalMovements","terminalId","initialDate","finalDate","getMovementsToConciliateTerminal","fetchURL","conciliateTerminalMovements","useFindCommerceTerminals","options","customError","setCustomError","useQuery","error","errorMessage","getErrorAPI","initialState","TerminalDetailsStore","set","get","terminalSelected","state","info","open","conciliateInfo","a","b","oldMovement","total","acumulador","useTerminalDetails","createStore","TerminalsStore","collapse","globalBalance","useTerminals","useFindTerminalMovements","resetBalance","resetGlobalBalance","primerDiaMes","startOfMonth","ultimoDiaMes","endOfMonth","key","signal","toast","getNotificationTypeByErrorCode"],"sources":["../../../../../frontend/src/shared/hooks/useTabs.js","../../../../../frontend/src/shared/components/animate/variants/slide.js","../../../../../frontend/src/app/business/viabo-pay/terminals/adapters/TerminalsKeys.js","../../../../../frontend/src/app/business/viabo-pay/terminals/adapters/commerceTerminalsAdapter.js","../../../../../frontend/src/app/business/viabo-pay/terminals/adapters/movements-to-conciliate-terminal-adapter.js","../../../../../frontend/src/app/business/viabo-pay/terminals/adapters/terminalMovementsAdapter.js","../../../../../frontend/src/app/business/viabo-pay/terminals/services/TerminalsRepository.js","../../../../../frontend/src/app/business/viabo-pay/terminals/hooks/useFindCommerceTerminals.js","../../../../../frontend/src/app/business/viabo-pay/terminals/store/TerminalDetailsStore.js","../../../../../frontend/src/app/business/viabo-pay/terminals/store/TerminalsStore.js","../../../../../frontend/src/app/business/viabo-pay/terminals/hooks/useFindTerminalMovements.js"],"sourcesContent":["import { useState } from 'react'\r\n\r\nexport function useTabs(defaultValues) {\r\n  const [currentTab, setCurrentTab] = useState(defaultValues || '')\r\n\r\n  return {\r\n    currentTab,\r\n    onChangeTab: (event, newValue) => {\r\n      setCurrentTab(newValue)\r\n    },\r\n    setCurrentTab\r\n  }\r\n}\r\n","//\r\nimport { varTranEnter, varTranExit } from './transition'\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const varSlide = props => {\r\n  const distance = props?.distance || 160\r\n  const durationIn = props?.durationIn\r\n  const durationOut = props?.durationOut\r\n  const easeIn = props?.easeIn\r\n  const easeOut = props?.easeOut\r\n\r\n  return {\r\n    // IN\r\n    inUp: {\r\n      initial: { y: distance },\r\n      animate: { y: 0, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { y: distance, transition: varTranExit({ durationOut, easeOut }) }\r\n    },\r\n    inDown: {\r\n      initial: { y: -distance },\r\n      animate: { y: 0, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { y: -distance, transition: varTranExit({ durationOut, easeOut }) }\r\n    },\r\n    inLeft: {\r\n      initial: { x: -distance },\r\n      animate: { x: 0, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { x: -distance, transition: varTranExit({ durationOut, easeOut }) }\r\n    },\r\n    inRight: {\r\n      initial: { x: distance },\r\n      animate: { x: 0, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { x: distance, transition: varTranExit({ durationOut, easeOut }) }\r\n    },\r\n\r\n    // OUT\r\n    outUp: {\r\n      initial: { y: 0 },\r\n      animate: { y: -distance, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { y: 0, transition: varTranExit({ durationOut, easeOut }) }\r\n    },\r\n    outDown: {\r\n      initial: { y: 0 },\r\n      animate: { y: distance, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { y: 0, transition: varTranExit({ durationOut, easeOut }) }\r\n    },\r\n    outLeft: {\r\n      initial: { x: 0 },\r\n      animate: { x: -distance, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { x: 0, transition: varTranExit({ durationOut, easeOut }) }\r\n    },\r\n    outRight: {\r\n      initial: { x: 0 },\r\n      animate: { x: distance, transition: varTranEnter({ durationIn, easeIn }) },\r\n      exit: { x: 0, transition: varTranExit({ durationOut, easeOut }) }\r\n    }\r\n  }\r\n}\r\n","export const TERMINALS_KEYS = {\r\n  LIST: 'commerce-terminals',\r\n  MOVEMENTS: 'terminal-movements',\r\n  CONCILIATE_MOVEMENTS: 'conciliate-movements'\r\n}\r\n","export const CommerceTerminalsAdapter = terminals =>\r\n  terminals?.map(terminal => ({\r\n    id: terminal?.id,\r\n    commerceId: terminal?.commerceId,\r\n    terminalId: terminal?.terminalId,\r\n    terminalON: terminal?.apiData?.status === 1,\r\n    country: terminal?.apiData?.country,\r\n    date: {\r\n      created: terminal?.apiData?.created_at,\r\n      updated: terminal?.apiData?.updated_at,\r\n      register: terminal?.registerDate\r\n    },\r\n    isVirtual: terminal?.typeId === '1',\r\n    name: terminal?.name !== '' ? terminal?.name.toString().toUpperCase() : `TERMINAL-${terminal?.terminalId}`,\r\n    active: terminal?.active === '1',\r\n    isExternalConciliation: !!terminal?.isConciliationExternal\r\n  })) || []\r\n","import { CardMovementsAdapter } from '@/app/shared/adapters'\r\n\r\nexport const MovementsToConciliateTerminalAdapter = movements => CardMovementsAdapter(movements)\r\n","import { format } from 'date-fns'\r\nimport { es } from 'date-fns/locale'\r\n\r\nimport { fCurrency, normalizeDateString } from '@/shared/utils'\r\n\r\nexport const TerminalMovementsAdapter = data => {\r\n  const movements =\r\n    data?.movements?.map(movement => {\r\n      const amount = parseFloat(movement?.amount || '0')\r\n      const date = movement?.transaction_date\r\n        ? format(normalizeDateString(movement?.transaction_date), 'dd MMM yyyy', { locale: es })\r\n        : ''\r\n      const time = movement?.transaction_date ? format(normalizeDateString(movement?.transaction_date), 'p') : ''\r\n\r\n      return {\r\n        id: movement?.id,\r\n        terminalName: movement?.terminal_name,\r\n        amount,\r\n        amountFormat: fCurrency(amount),\r\n        approved: movement?.approved,\r\n        cardType: movement?.card_brand,\r\n        cardNumber: movement?.card_number,\r\n        cardBank: movement?.issuer,\r\n        transactionDate: {\r\n          fullDate: format(normalizeDateString(movement?.transaction_date), 'dd MMM yyyy HH:mm', { locale: es }),\r\n          date,\r\n          time\r\n        },\r\n        date: normalizeDateString(movement?.transaction_date),\r\n        description: `${movement?.issuer === '' ? movement?.card_brand : movement?.issuer}-${\r\n          movement?.card_number\r\n        }`.toUpperCase(),\r\n        transactionMessage: movement?.result_message,\r\n        conciliated: !!movement?.conciliated,\r\n        conciliatedName: movement?.conciliated ? 'Conciliada' : 'Sin Conciliar'\r\n      }\r\n    }) ?? []\r\n\r\n  const balance = {\r\n    amount: fCurrency(data?.balance?.amount),\r\n    month: data?.balance?.month?.toLowerCase()\r\n  }\r\n  const filters = {\r\n    status: {\r\n      all: movements?.length || 0,\r\n      approved: movements?.filter(movement => movement?.approved)?.length || 0,\r\n      rejected: movements?.filter(movement => !movement?.approved)?.length || 0\r\n    }\r\n  }\r\n\r\n  return {\r\n    movements,\r\n    balance,\r\n    filters\r\n  }\r\n}\r\n","import { CommerceTerminalsAdapter, MovementsToConciliateTerminalAdapter, TerminalMovementsAdapter } from '../adapters'\r\n\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const getCommerceTerminals = async () => {\r\n  const { data } = await axios.get('/api/commerces/terminals')\r\n  return CommerceTerminalsAdapter(data)\r\n}\r\n\r\nexport const createPaymentLink = async paymentLink => {\r\n  const { data } = await axios.post(`/api/commerce/pay/new`, paymentLink)\r\n  return data\r\n}\r\n\r\nexport const generatePaymentByVirtualTerminal = async payment => {\r\n  const { data } = await axios.post(`/api/commerce/virtual/pay`, payment)\r\n  return data\r\n}\r\n\r\nexport const getTerminalMovements = async (terminalId, initialDate, finalDate) => {\r\n  const terminal = terminalId\r\n    ? `?fromDate=${initialDate}&toDate=${finalDate}&terminalId=${terminalId}`\r\n    : `?fromDate=${initialDate}&toDate=${finalDate}`\r\n  const { data } = await axios.get(`/api/commerces-pay/transactions/all${terminal}`)\r\n  return TerminalMovementsAdapter(data)\r\n}\r\n\r\nexport const getMovementsToConciliateTerminal = async (terminalId, date) => {\r\n  const fetchURL = new URL('/api/card/movements/terminal/conciliated', window.location.origin)\r\n  fetchURL.searchParams.set('startDate', date)\r\n  fetchURL.searchParams.set('terminalId', terminalId)\r\n  const { data } = await axios.get(fetchURL.href)\r\n  return MovementsToConciliateTerminalAdapter(data)\r\n}\r\n\r\nexport const conciliateTerminalMovements = async movements => {\r\n  const { data } = await axios.post(`/api/commerce/terminal/consolidation/create`, movements)\r\n  return data\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\n\r\nimport { TERMINALS_KEYS } from '../adapters'\r\nimport { getCommerceTerminals } from '../services'\r\n\r\nimport { getErrorAPI } from '@/shared/interceptors'\r\n\r\nexport const useFindCommerceTerminals = (options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n  const commerces = useQuery([TERMINALS_KEYS.LIST], getCommerceTerminals, {\r\n    staleTime: 60000,\r\n    refetchOnMount: 'always',\r\n    onError: error => {\r\n      const errorMessage = getErrorAPI(\r\n        error,\r\n        'No se puede obtener la lista de terminales del comercio. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n    },\r\n    ...options\r\n  })\r\n  return {\r\n    ...commerces,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { createStore } from '@/app/shared/store'\r\n\r\nconst initialState = {\r\n  terminal: null,\r\n  conciliateInfo: { movements: null, total: 0, date: null },\r\n  openConciliate: false\r\n}\r\n\r\nconst TerminalDetailsStore = (set, get) => ({\r\n  ...initialState,\r\n  setTerminal: terminalSelected => {\r\n    const { terminal } = get()\r\n\r\n    set(\r\n      state => ({\r\n        terminal: { ...terminal, ...terminalSelected }\r\n      }),\r\n      false,\r\n      'SET_TERMINAL_SELECTED'\r\n    )\r\n  },\r\n  resetTerminal: () => {\r\n    set(\r\n      state => ({\r\n        terminal: null\r\n      }),\r\n      false,\r\n      'RESET_TERMINAL_SELECTED'\r\n    )\r\n  },\r\n\r\n  addTerminalInfo: info => {\r\n    const { terminal } = get()\r\n    set(\r\n      state => ({\r\n        terminal: { ...terminal, ...info }\r\n      }),\r\n      false,\r\n      'SET_TERMINAL_INFO'\r\n    )\r\n  },\r\n  setOpenConciliate: open => {\r\n    set(\r\n      state => ({\r\n        openConciliate: open\r\n      }),\r\n      false,\r\n      'SET_OPEN_CONCILIATE'\r\n    )\r\n  },\r\n  setConciliateMovements: movements => {\r\n    let conciliateInfo = initialState?.conciliateInfo\r\n    if (movements) {\r\n      movements?.sort((a, b) => a.date - b.date)\r\n      const oldMovement = movements?.length > 0 && movements[0]\r\n      const total = movements.reduce((acumulador, movement) => acumulador + movement?.amount, 0)\r\n      conciliateInfo = {\r\n        movements,\r\n        total,\r\n        date: oldMovement?.date\r\n      }\r\n    }\r\n\r\n    set(\r\n      state => ({\r\n        conciliateInfo\r\n      }),\r\n      false,\r\n      'SET_CONCILIATE_MOVEMENTS'\r\n    )\r\n  }\r\n})\r\n\r\nexport const useTerminalDetails = createStore(TerminalDetailsStore)\r\n","import { createStore } from '@/app/shared/store'\r\n\r\nconst initialState = {\r\n  terminals: [],\r\n  isOpenList: true,\r\n  isCollapse: false,\r\n  balance: { amount: '$0.00', month: null },\r\n  globalBalance: { amount: '$0.00', month: null }\r\n}\r\n\r\nconst TerminalsStore = (set, get) => ({\r\n  ...initialState,\r\n  setTerminals: terminals => {\r\n    set(\r\n      state => ({\r\n        terminals\r\n      }),\r\n      false,\r\n      'SET_TERMINALS'\r\n    )\r\n  },\r\n  setOpenList: open => {\r\n    set(\r\n      state => ({\r\n        isOpenList: open\r\n      }),\r\n      false,\r\n      'SET_OPEN_LIST'\r\n    )\r\n  },\r\n  setCollapse: collapse => {\r\n    set(\r\n      state => ({\r\n        isCollapse: collapse\r\n      }),\r\n      false,\r\n      'SET_COLLAPSE'\r\n    )\r\n  },\r\n  setBalance: balance => {\r\n    set(\r\n      state => ({\r\n        balance\r\n      }),\r\n      false,\r\n      'SET_BALANCE'\r\n    )\r\n  },\r\n  setGlobalBalance: globalBalance => {\r\n    set(\r\n      state => ({\r\n        globalBalance\r\n      }),\r\n      false,\r\n      'SET_GLOBAL_BALANCE'\r\n    )\r\n  },\r\n\r\n  resetBalance: () => {\r\n    set(\r\n      state => ({\r\n        balance: initialState.balance\r\n      }),\r\n      false,\r\n      'RESET_BALANCE'\r\n    )\r\n  },\r\n  resetGlobalBalance: () => {\r\n    set(\r\n      state => ({\r\n        globalBalance: initialState.globalBalance\r\n      }),\r\n      false,\r\n      'RESET_BALANCE'\r\n    )\r\n  }\r\n})\r\n\r\nexport const useTerminals = createStore(TerminalsStore)\r\n","import { useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { endOfMonth, format, startOfMonth } from 'date-fns'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { TERMINALS_KEYS } from '../adapters'\r\nimport { getTerminalMovements } from '../services'\r\nimport { useTerminals } from '../store'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindTerminalMovements = (terminalId, date, options = {}) => {\r\n  const resetBalance = useTerminals(state => state.resetBalance)\r\n  const resetGlobalBalance = useTerminals(state => state.resetGlobalBalance)\r\n  const primerDiaMes = startOfMonth(date)\r\n  const ultimoDiaMes = endOfMonth(date)\r\n  const initialDate = format(primerDiaMes, 'yyyy-MM-dd')\r\n  const finalDate = format(ultimoDiaMes, 'yyyy-MM-dd')\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const key = terminalId ? [TERMINALS_KEYS.MOVEMENTS, terminalId] : [TERMINALS_KEYS.MOVEMENTS, 'global']\r\n  const commerces = useQuery(key, ({ signal }) => getTerminalMovements(terminalId, initialDate, finalDate, signal), {\r\n    staleTime: 60000,\r\n    retry: false,\r\n    refetchOnWindowFocus: false,\r\n    onError: error => {\r\n      const errorMessage = getErrorAPI(\r\n        error,\r\n        'No se puede obtener la lista de movimientos de la terminal. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n      terminalId ? resetBalance() : resetGlobalBalance()\r\n    },\r\n    ...options\r\n  })\r\n  return {\r\n    ...commerces,\r\n    error: customError || null\r\n  }\r\n}\r\n"],"file":"assets/js/POSTerminals-F1CD5V0N.js"}