{"version":3,"file":"matchTypes-VzXr5CmM.js","sources":["../../../../../frontend/src/shared/utils/matchTypes.js"],"sourcesContent":["import { isFunction as isLodashFunction } from 'lodash'\r\n\r\nexport function matchIsNumeric(text) {\r\n  const isNumber = typeof text === 'number'\r\n  const isString = matchIsString(text)\r\n  return (isNumber || (isString && text !== '')) && !isNaN(Number(text))\r\n}\r\n\r\nexport function matchIsString(text) {\r\n  return typeof text === 'string' || text instanceof String\r\n}\r\n\r\nexport const convertCatalogToReactSelect = (data, valueObject, label, disabledProperty) =>\r\n  data.map((item, index) => ({\r\n    value: item[`${valueObject}`],\r\n    label: item[`${label}`],\r\n    isDisabled: item[`${disabledProperty}`] === '0' || false,\r\n    index,\r\n    ...item\r\n  }))\r\n\r\nexport const isFunction = posibleFunction => isLodashFunction(posibleFunction)\r\n"],"names":["matchIsNumeric","text","isNumber","isString","matchIsString","convertCatalogToReactSelect","data","valueObject","label","disabledProperty","item","index","isFunction","posibleFunction","isLodashFunction"],"mappings":"0CAEO,SAASA,EAAeC,EAAM,CACnC,MAAMC,EAAW,OAAOD,GAAS,SAC3BE,EAAWC,EAAcH,CAAI,EACnC,OAAQC,GAAaC,GAAYF,IAAS,KAAQ,CAAC,MAAM,OAAOA,CAAI,CAAC,CACvE,CAEO,SAASG,EAAcH,EAAM,CAClC,OAAO,OAAOA,GAAS,UAAYA,aAAgB,MACrD,CAEY,MAACI,EAA8B,CAACC,EAAMC,EAAaC,EAAOC,IACpEH,EAAK,IAAI,CAACI,EAAMC,KAAW,CACzB,MAAOD,EAAK,GAAGH,CAAW,EAAE,EAC5B,MAAOG,EAAK,GAAGF,CAAK,EAAE,EACtB,WAAYE,EAAK,GAAGD,CAAgB,EAAE,IAAM,KAAO,GACnD,MAAAE,EACA,GAAGD,CACP,EAAI,EAESE,EAAaC,GAAmBC,EAAAA,WAAiBD,CAAe"}