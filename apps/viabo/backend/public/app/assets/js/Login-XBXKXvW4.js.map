{"version":3,"file":"Login-XBXKXvW4.js","sources":["../../../../../frontend/src/app/authentication/hooks/useSignIn.js","../../../../../frontend/src/shared/assets/img/login-image-2x.webp"],"sourcesContent":["import { useState } from 'react'\r\n\r\nimport { useIsFetching, useMutation, useQuery } from '@tanstack/react-query'\r\n\r\nimport { AUTHENTICATION_KEYS } from '@/app/authentication/adapters'\r\nimport { getUserModules, signIn } from '@/app/authentication/services'\r\nimport { useAuth } from '@/shared/hooks'\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\nimport { setSession } from '@/shared/utils'\r\n\r\nexport const useSignIn = (options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n  const [tokenExists, setTokenExists] = useState(false)\r\n  const { login } = useAuth()\r\n\r\n  const isFetching = useIsFetching([AUTHENTICATION_KEYS.USER_MODULES])\r\n\r\n  const signInMutation = useMutation(signIn, {\r\n    onSuccess: response => {\r\n      setCustomError(null)\r\n      setSession(response?.token)\r\n      setTokenExists(true)\r\n    },\r\n    onError: error => {\r\n      setTokenExists(false)\r\n      setSession(null)\r\n      setCustomError({\r\n        message: getErrorAPI(error, 'Ocurrio un error inesperado. Intente nuevamente o reportelo al área de sistemas'),\r\n        code: getNotificationTypeByErrorCode(error)\r\n      })\r\n    },\r\n    ...options\r\n  })\r\n\r\n  const userModules = useQuery([AUTHENTICATION_KEYS.USER_MODULES], getUserModules, {\r\n    onSuccess: data => {\r\n      login()\r\n      setCustomError(null)\r\n      setTokenExists(false)\r\n    },\r\n    onError: error => {\r\n      setTokenExists(false)\r\n      setSession(null)\r\n      setCustomError({\r\n        message: getErrorAPI(error, 'Ocurrio un error inesperado. Intente nuevamente o reportelo al área de sistemas'),\r\n        code: getNotificationTypeByErrorCode(error)\r\n      })\r\n    },\r\n    enabled: !!tokenExists,\r\n    retry: false\r\n  })\r\n\r\n  return {\r\n    ...signInMutation,\r\n    setCustomError,\r\n    isError: signInMutation.isError || userModules.isError,\r\n    isSuccess: signInMutation.isSuccess && userModules.isSuccess,\r\n    isLoading: signInMutation.isLoading || isFetching === 1,\r\n    error: customError ?? null\r\n  }\r\n}\r\n","export default \"__VITE_ASSET__FiN4Wwdi__\""],"names":["useSignIn","options","customError","setCustomError","useState","tokenExists","setTokenExists","login","useAuth","isFetching","useIsFetching","AUTHENTICATION_KEYS","signInMutation","useMutation","signIn","response","setSession","error","getErrorAPI","getNotificationTypeByErrorCode","userModules","useQuery","getUserModules","data","LoginImage"],"mappings":"stBAUO,MAAMA,EAAY,CAACC,EAAU,KAAO,CACzC,KAAM,CAACC,EAAaC,CAAc,EAAIC,EAAAA,SAAS,IAAI,EAC7C,CAACC,EAAaC,CAAc,EAAIF,EAAAA,SAAS,EAAK,EAC9C,CAAE,MAAAG,CAAO,EAAGC,EAAS,EAErBC,EAAaC,EAAc,CAACC,EAAoB,YAAY,CAAC,EAE7DC,EAAiBC,EAAYC,EAAQ,CACzC,UAAWC,GAAY,CACrBZ,EAAe,IAAI,EACnBa,EAAWD,GAAA,YAAAA,EAAU,KAAK,EAC1BT,EAAe,EAAI,CACpB,EACD,QAASW,GAAS,CAChBX,EAAe,EAAK,EACpBU,EAAW,IAAI,EACfb,EAAe,CACb,QAASe,EAAYD,EAAO,iFAAiF,EAC7G,KAAME,EAA+BF,CAAK,CAClD,CAAO,CACF,EACD,GAAGhB,CACP,CAAG,EAEKmB,EAAcC,EAAS,CAACV,EAAoB,YAAY,EAAGW,EAAgB,CAC/E,UAAWC,GAAQ,CACjBhB,EAAO,EACPJ,EAAe,IAAI,EACnBG,EAAe,EAAK,CACrB,EACD,QAASW,GAAS,CAChBX,EAAe,EAAK,EACpBU,EAAW,IAAI,EACfb,EAAe,CACb,QAASe,EAAYD,EAAO,iFAAiF,EAC7G,KAAME,EAA+BF,CAAK,CAClD,CAAO,CACF,EACD,QAAS,CAAC,CAACZ,EACX,MAAO,EACX,CAAG,EAED,MAAO,CACL,GAAGO,EACH,eAAAT,EACA,QAASS,EAAe,SAAWQ,EAAY,QAC/C,UAAWR,EAAe,WAAaQ,EAAY,UACnD,UAAWR,EAAe,WAAaH,IAAe,EACtD,MAAOP,GAAe,IACvB,CACH,g+EC5DA,MAAesB,EAAA"}