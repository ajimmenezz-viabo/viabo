{"version":3,"mappings":"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","names":["StockCardMenu","card","isReadyToAssign","useAssignCardStore","state","setOpenAssignCards","setOpen","setCard","anchorEl","setAnchorEl","useState","open","Boolean","enqueueSnackbar","useSnackbar","handleClick","event","currentTarget","handleClose","handleAssignCard","variant","autoHideDuration","jsxs","Fragment","jsx","Tooltip","IconButton","ml","undefined","MoreVertTwoTone","MenuPopover","vertical","horizontal","mt","mr","p","width","px","typography","borderRadius","height","MenuItem","color","AddBusiness","CardCvv","disableShow","showCVV","setShowCVV","onToggleShowCVV","e","stopPropagation","prev","Stack","Typography","mb","opacity","cvv","Box","left","top","Visibility","VisibilityOff","StockCard","CardStyled","CardHeader","register","CardNumber","expiration","CardCVV","StockCardSkeleton","Card","theme","palette","common","white","display","flexDirection","justifyContent","Skeleton","py","CardsList","cards","emptyMessage","cardComponent","others","isDesktop","useResponsive","isCollapse","useCollapseDrawer","page","setPage","searchTerm","setSearchTerm","searchResult","setSearchResult","data","isLoading","isError","error","isSuccess","isSuccessCards","refetch","cardList","loadingCards","PER_PAGE","source","useMemo","length","count","Math","ceil","_DATA","usePagination","handleChange","jump","useEffect","filterCards","searchByTerm","xs","sm","TextField","target","value","startAdornment","InputAdornment","Search","marginTop","flex","Pagination","EmptyList","ErrorRequestPage","gap","gridTemplateColumns","md","lg","xl","Array","currentData","map","index","createElement","key","AssignCardTableToolbar","handleAssign","marginRight","AssignmentIndRounded","info","main","CardTypesAdapter","cardTypes","dataAdapted","cardType","_a","convertCatalogToReactSelect","SHARED_CARD_KEYS","getCardTypes","axios","MANAGEMENT_STOCK_CARDS_KEYS","CreateCardAdapter","cardNumber","assigned","expirationYear","expirationFormatted","cardAdapter","getCryptInfo","AffiliatedCommercesAdapter","commerces","commerce","createNewStockCard","getAffiliatedCommerces","getStockCards","CardsAdapter","assignCards","url","useCreateNewStockCard","options","client","useQueryClient","registerMutation","useMutation","formData","onSuccess","onError","mutationOptions","toast","errorFormatted","getErrorAPI","getNotificationTypeByErrorCode","useFindAffiliatedCommerces","customError","setCustomError","useQuery","errorMessage","useFindStockCards","StockCardForm","registerCard","createCard","isCreatingCard","useGetQueryData","AFFILIATED_COMMERCES_LIST","CARD_TYPES_LIST","openAlertConfirm","setOpenAlertConfirm","CardSchema","Yup","shape","string","transform","originalValue","replace","min","required","nullable","test","date","parse","Date","currentDate","isDateValid","isValid","isAfter","formik","useFormik","initialValues","validationSchema","onSubmit","values","setSubmitting","handleCreateCard","isSubmitting","setFieldValue","errors","handleSubmit","touched","resetForm","loading","isAssigned","Scrollbar","sx","flexGrow","FormProvider","RFSelect","placeholder","RFTextField","CreditCard","inputComponent","MaskedInput","inputProps","mask","onAccept","VpnKey","DatePicker","newValue","format","textField","fullWidth","helperText","pt","LoadingButton","AddCard","ModalAlert","WarningAmberOutlined","StockCardSidebar","themeDirection","useSettings","varSidebar","varFade","distance","NAVBAR","BASE_WIDTH","durationIn","durationOut","inRight","inLeft","body","style","overflow","Backdrop","background","zIndex","drawer","AnimatePresence","RightPanelStyle","pr","pl","Close","Divider","borderStyle","StockCardTable","selectedCard","setSelectedCard","columns","name","label","customBodyRenderLite","dataIndex","rowIndex","rowData","cardNumberHidden","row","Avatar","primary","contrastText","backgroundColor","light","CarnetLogo","MasterCardLogo","filterType","registerDate","registerTime","DataTable","responsive","rowHover","selectableRows","selectableRowsOnClick","selectToolbarPlacement","sortOrder","direction","downloadOptions","filename","filterOptions","useDisplayedColumnsOnly","onRowSelectionChange","currentRowsSelected","allRowsSelected","rowsSelected","find","valor","includes","customToolbarSelect","selectedRows","useFindCardTypes","AssignCardModal","Lodable","lazy","StockCards","affiliatedCommerces","isSuccessCardTypes","isLoadingCardTypes","stockCards","isLoadingStockCards","setReadyToAssign","openAssignCard","view","setView","handleNewCard","handleAssignCards","Page","ContainerPage","HeaderPage","href","PATH_DASHBOARD","root","MANAGEMENT_PATHS","stock_cards","MANAGEMENT_ROUTES_NAMES","Button","AddBusinessTwoTone","Add","ToggleButtonGroup","ToggleButton","FormatListBulleted","Apps"],"sources":["../../../../../frontend/src/app/management/stock-cards/components/stock-card/StockCardMenu.jsx","../../../../../frontend/src/app/shared/components/card/CardCVV.jsx","../../../../../frontend/src/app/management/stock-cards/components/stock-card/StockCard.jsx","../../../../../frontend/src/app/management/stock-cards/components/stock-card/StockCardSkeleton.jsx","../../../../../frontend/src/app/shared/components/CardsList.jsx","../../../../../frontend/src/app/shared/components/AssignCardTableToolbar.jsx","../../../../../frontend/src/app/shared/adapters/cardTypesAdapter.js","../../../../../frontend/src/app/shared/adapters/sharedCardKeys.js","../../../../../frontend/src/app/shared/services/CardsSharedRepository.js","../../../../../frontend/src/app/management/stock-cards/adapters/managementStockCardsKeys.js","../../../../../frontend/src/app/management/stock-cards/adapters/createCardAdapter.js","../../../../../frontend/src/app/management/stock-cards/adapters/affiliatedCommercesAdapter.js","../../../../../frontend/src/app/management/stock-cards/services/StockCardRepository.js","../../../../../frontend/src/app/management/stock-cards/hooks/useCreateNewStockCard.js","../../../../../frontend/src/app/management/stock-cards/hooks/useFindAffiliatedCommerces.js","../../../../../frontend/src/app/management/stock-cards/hooks/useFindStockCards.js","../../../../../frontend/src/app/management/stock-cards/components/StockCardForm.jsx","../../../../../frontend/src/app/management/stock-cards/components/StockCardSidebar.jsx","../../../../../frontend/src/app/management/stock-cards/components/StockCardTable.jsx","../../../../../frontend/src/app/shared/hooks/useFindCardTypes.js","../../../../../frontend/src/app/management/stock-cards/pages/StockCards.jsx"],"sourcesContent":["import { useState } from 'react'\r\n\r\nimport { AddBusiness, MoreVertTwoTone } from '@mui/icons-material'\r\nimport { IconButton, MenuItem, Tooltip } from '@mui/material'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport { useAssignCardStore } from '@/app/management/stock-cards/store'\r\nimport { MenuPopover } from '@/shared/components/containers'\r\n\r\nexport function StockCardMenu({ card }) {\r\n  const isReadyToAssign = useAssignCardStore(state => state.isReadyToAssign)\r\n  const setOpenAssignCards = useAssignCardStore(state => state.setOpen)\r\n  const setCard = useAssignCardStore(state => state.setCard)\r\n  const [anchorEl, setAnchorEl] = useState(null)\r\n  const open = Boolean(anchorEl)\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  const handleAssignCard = () => {\r\n    if (isReadyToAssign) {\r\n      setOpenAssignCards(true)\r\n      setCard(card)\r\n    } else {\r\n      setOpenAssignCards(false)\r\n      enqueueSnackbar(`Por el momento no se puede asignar la tarjeta. No hay comercios disponibles`, {\r\n        variant: 'warning',\r\n        autoHideDuration: 5000\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Acciones\">\r\n        <IconButton\r\n          onClick={handleClick}\r\n          sx={{ ml: 2 }}\r\n          aria-controls={open ? 'card-menu' : undefined}\r\n          aria-haspopup=\"true\"\r\n          aria-expanded={open ? 'true' : undefined}\r\n        >\r\n          <MoreVertTwoTone width={20} height={20} />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <MenuPopover\r\n        open={Boolean(open)}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        arrow=\"right-start\"\r\n        sx={{\r\n          mt: -1,\r\n          mr: 0,\r\n          p: 2,\r\n          width: 250,\r\n          '& .MuiMenuItem-root': {\r\n            px: 1,\r\n            typography: 'body2',\r\n            borderRadius: 0.75,\r\n            '& svg': { mr: 2, width: 20, height: 20 }\r\n          }\r\n        }}\r\n      >\r\n        <MenuItem\r\n          onClick={() => {\r\n            handleAssignCard()\r\n            handleClose()\r\n          }}\r\n          sx={{ color: 'text.secondary' }}\r\n        >\r\n          <AddBusiness width={24} height={24} />\r\n          Asignar a Comercio\r\n        </MenuItem>\r\n      </MenuPopover>\r\n    </>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material'\r\nimport { Box, IconButton, Stack, Typography } from '@mui/material'\r\n\r\nexport default function CardCvv({ card, disableShow }) {\r\n  const [showCVV, setShowCVV] = useState(true)\r\n\r\n  const onToggleShowCVV = e => {\r\n    e.stopPropagation()\r\n    setShowCVV(prev => !prev)\r\n  }\r\n\r\n  return (\r\n    <Stack position={'relative'}>\r\n      <Typography sx={{ mb: 1, typography: 'caption', opacity: 0.48 }}>CVV</Typography>\r\n      <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n        <Typography sx={{ typography: showCVV ? 'subtitle2' : 'subtitle2' }}>{showCVV ? '***' : card?.cvv}</Typography>\r\n      </Stack>\r\n      {!disableShow && (\r\n        <Box position={'absolute'} sx={{ left: '32px', top: '20px' }}>\r\n          <IconButton size={'small'} color=\"inherit\" onClick={onToggleShowCVV} sx={{ opacity: 0.2 }}>\r\n            {showCVV ? <Visibility /> : <VisibilityOff />}\r\n          </IconButton>\r\n        </Box>\r\n      )}\r\n    </Stack>\r\n  )\r\n}\r\n","import { CardHeader, Stack, Typography } from '@mui/material'\r\n\r\nimport { StockCardMenu } from '@/app/management/stock-cards/components/stock-card/StockCardMenu'\r\nimport { CardCVV, CardNumber, CardStyled } from '@/app/shared/components/card'\r\n\r\nexport function StockCard({ card }) {\r\n  return (\r\n    <CardStyled>\r\n      <CardHeader\r\n        action={<StockCardMenu card={card} />}\r\n        title={<Typography sx={{ typography: 'subtitle2', opacity: 0.72 }}>Viabo Card</Typography>}\r\n        subheader={card?.register}\r\n        sx={{ p: 0 }}\r\n      />\r\n\r\n      <div>\r\n        <CardNumber card={card} />\r\n      </div>\r\n\r\n      <Stack direction=\"row\" spacing={5}>\r\n        <Stack>\r\n          <Typography sx={{ mb: 1, typography: 'caption', opacity: 0.48 }}>Vencimiento</Typography>\r\n          <Typography sx={{ typography: 'subtitle1' }}>{card?.expiration}</Typography>\r\n        </Stack>\r\n        <CardCVV card={card} />\r\n      </Stack>\r\n    </CardStyled>\r\n  )\r\n}\r\n","import { Card, Skeleton, Stack } from '@mui/material'\r\n\r\nexport function StockCardSkeleton() {\r\n  return (\r\n    <Card\r\n      sx={theme => ({\r\n        color: theme.palette.common.white,\r\n        display: 'flex',\r\n        p: 3,\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between'\r\n      })}\r\n    >\r\n      <Stack>\r\n        <Skeleton variant=\"text\" sx={{ width: 0.3 }} />\r\n        <Skeleton variant=\"text\" sx={{ width: 0.5 }} />\r\n      </Stack>\r\n\r\n      <Stack sx={{ py: 1.5 }}>\r\n        <Skeleton variant=\"text\" sx={{ width: 0.9, height: 40 }} />\r\n      </Stack>\r\n\r\n      <Stack direction={'row'} spacing={2}>\r\n        <Stack spacing={0.5}>\r\n          <Skeleton variant=\"text\" sx={{ width: 100 }} />\r\n          <Skeleton variant=\"text\" sx={{ width: 40 }} />\r\n        </Stack>\r\n\r\n        <Stack spacing={0.5}>\r\n          <Skeleton variant=\"text\" sx={{ width: 100 }} />\r\n          <Stack direction={'row'} spacing={1} alignItems={'center'}>\r\n            <Skeleton variant=\"text\" sx={{ width: 40 }} />\r\n            <Skeleton variant=\"circular\" sx={{ width: 16, height: 16 }} />\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n    </Card>\r\n  )\r\n}\r\n","import { createElement, useEffect, useMemo, useState } from 'react'\r\n\r\nimport { Search } from '@mui/icons-material'\r\nimport { Box, InputAdornment, Pagination, TextField } from '@mui/material'\r\nimport { useCollapseDrawer, useResponsive } from '@theme/hooks'\r\n\r\nimport { StockCard, StockCardSkeleton } from '@/app/management/stock-cards/components/stock-card'\r\nimport { searchByTerm } from '@/app/shared/utils'\r\nimport { ErrorRequestPage } from '@/shared/components/notifications'\r\nimport EmptyList from '@/shared/components/notifications/EmptyList'\r\nimport { usePagination } from '@/shared/hooks'\r\n\r\nexport function CardsList({\r\n  cards,\r\n  emptyMessage = 'No hay tarjetas disponibles en stock',\r\n  cardComponent = StockCard,\r\n  ...others\r\n}) {\r\n  const isDesktop = useResponsive('up', 'xl')\r\n  const { isCollapse } = useCollapseDrawer()\r\n  const [page, setPage] = useState(1)\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [searchResult, setSearchResult] = useState([])\r\n  const { data, isLoading, isError, error, isSuccess: isSuccessCards, refetch } = cards\r\n\r\n  const cardList = data || []\r\n  const loadingCards = isLoading\r\n\r\n  const PER_PAGE = isDesktop ? 12 : 9\r\n  const source = useMemo(\r\n    () => (searchTerm !== '' ? searchResult : cardList) || [],\r\n    [searchTerm, cardList, searchResult]\r\n  )\r\n  const length = source.length || 0\r\n  const count = Math.ceil(length / PER_PAGE)\r\n  const _DATA = usePagination(source || [], PER_PAGE)\r\n\r\n  const handleChange = (e, p) => {\r\n    setPage(p)\r\n    _DATA.jump(p)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (searchTerm) {\r\n      const filterCards = searchByTerm(cardList, searchTerm)\r\n      setSearchResult(filterCards)\r\n    } else {\r\n      setSearchResult([])\r\n    }\r\n  }, [searchTerm, cardList])\r\n\r\n  return (\r\n    <>\r\n      {isSuccessCards && cardList?.length > 0 && (\r\n        <Box\r\n          display=\"flex\"\r\n          mb={3}\r\n          flexDirection={{ xs: 'column', sm: 'row' }}\r\n          alignItems={{ xs: 'center' }}\r\n          {...others}\r\n        >\r\n          <Box>\r\n            <TextField\r\n              fullWidth\r\n              size=\"small\"\r\n              placeholder=\"Buscar ...\"\r\n              value={searchTerm}\r\n              onChange={e => setSearchTerm(e.target.value)}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Box sx={{ color: 'text.disabled' }}>\r\n                      <Search sx={{ marginTop: 1 }} />\r\n                    </Box>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Box>\r\n          <Box sx={{ flex: '1 1 auto', mb: { xs: 3 } }} />\r\n          <Pagination count={count} page={page} onChange={handleChange} />\r\n        </Box>\r\n      )}\r\n\r\n      {!loadingCards && isSuccessCards && cardList.length === 0 && (\r\n        <EmptyList widthImage={'30%'} message={emptyMessage} />\r\n      )}\r\n\r\n      {!loadingCards && isError && <ErrorRequestPage widthImage={'30%'} errorMessage={error} handleButton={refetch} />}\r\n\r\n      {!isError && (\r\n        <Box\r\n          mb={3}\r\n          sx={{\r\n            display: 'grid',\r\n            gap: 3,\r\n            gridTemplateColumns: {\r\n              xs: 'repeat(1, 1fr)',\r\n              sm: 'repeat(2, 1fr)',\r\n              md: 'repeat(2, 1fr)',\r\n              lg: isCollapse ? 'repeat(3, 1fr)' : 'repeat(2, 1fr)',\r\n              xl: 'repeat(4, 1fr)'\r\n            }\r\n          }}\r\n        >\r\n          {(loadingCards ? [...Array(PER_PAGE)] : _DATA.currentData() || []).map((card, index) =>\r\n            card ? createElement(cardComponent, { card, key: index }) : <StockCardSkeleton key={index} />\r\n          )}\r\n        </Box>\r\n      )}\r\n\r\n      {cardList.length > 0 && length === 0 && (\r\n        <EmptyList widthImage={'30%'} message=\"No hay tarjetas que coincidan con la búsqueda\" />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import { AssignmentIndRounded } from '@mui/icons-material'\r\nimport { Box, IconButton, Tooltip } from '@mui/material'\r\n\r\nexport function AssignCardTableToolbar({ handleAssign }) {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        marginRight: 3\r\n      }}\r\n    >\r\n      <Tooltip title=\"Asignar\">\r\n        <IconButton onClick={handleAssign}>\r\n          <AssignmentIndRounded sx={{ color: theme => theme.palette.info.main }} width={24} height={24} />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </Box>\r\n  )\r\n}\r\n","import { convertCatalogToReactSelect } from '@/shared/utils'\r\n\r\nexport const CardTypesAdapter = cardTypes => {\r\n  const dataAdapted =\r\n    cardTypes.map(cardType => ({\r\n      id: cardType?.id,\r\n      name: cardType?.name?.toUpperCase(),\r\n      statusId: cardType?.active\r\n    })) || []\r\n\r\n  return convertCatalogToReactSelect(dataAdapted, 'id', 'name')\r\n}\r\n","export const SHARED_CARD_KEYS = {\r\n  CARD_TYPES_LIST: 'cardTypes'\r\n}\r\n","import { CardTypesAdapter } from '@/app/shared/adapters'\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const getCardTypes = async () => {\r\n  const { data } = await axios.get('/api/payment-processors')\r\n  return CardTypesAdapter(data)\r\n}\r\n","export const MANAGEMENT_STOCK_CARDS_KEYS = {\r\n  STOCK_CARDS_LIST: 'stockCards',\r\n  AFFILIATED_COMMERCES_LIST: 'affiliatedCommerces'\r\n}\r\n","import { getCryptInfo } from '@/shared/utils'\r\n\r\nexport const CreateCardAdapter = card => {\r\n  const { cardNumber, cardType, expiration, cvv, assigned } = card\r\n\r\n  const expirationYear = expiration?.slice(-2)\r\n\r\n  const expirationFormatted = expiration?.slice(0, 3) + expirationYear\r\n\r\n  const cardAdapter = {\r\n    cardNumber: cardNumber.replace(/\\s+/g, ''),\r\n    paymentProcessorId: cardType?.value,\r\n    expirationDate: expirationFormatted,\r\n    cvv,\r\n    commerceId: assigned?.value || ''\r\n  }\r\n  return getCryptInfo(cardAdapter)\r\n}\r\n","import { convertCatalogToReactSelect } from '@/shared/utils'\r\n\r\nexport const AffiliatedCommercesAdapter = commerces => {\r\n  const dataAdapted =\r\n    commerces?.map(commerce => ({\r\n      id: commerce?.id,\r\n      name: commerce?.name\r\n    })) || []\r\n  return convertCatalogToReactSelect(dataAdapted, 'id', 'name')\r\n}\r\n","import { AffiliatedCommercesAdapter } from '@/app/management/stock-cards/adapters'\r\nimport { CardsAdapter } from '@/app/shared/adapters'\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const createNewStockCard = async card => {\r\n  const { data } = await axios.post('/api/card/new', card)\r\n  return card\r\n}\r\n\r\nexport const getAffiliatedCommerces = async () => {\r\n  const { data } = await axios.get(`/api/commerces/affiliates`)\r\n  return AffiliatedCommercesAdapter(data)\r\n}\r\n\r\nexport const getStockCards = async () => {\r\n  const { data } = await axios.get('/api/cards/stock')\r\n  return CardsAdapter(data)\r\n}\r\n\r\nexport const assignCards = async cards => {\r\n  const url = cards?.cardId ? '/api/card/assign/commerce' : '/api/cards/assign/commerce'\r\n  const { data } = await axios.post(url, cards)\r\n  return data\r\n}\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { MANAGEMENT_STOCK_CARDS_KEYS } from '@/app/management/stock-cards/adapters'\r\nimport { createNewStockCard } from '@/app/management/stock-cards/services'\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useCreateNewStockCard = (options = {}) => {\r\n  const client = useQueryClient()\r\n\r\n  const registerMutation = useMutation(createNewStockCard, options)\r\n\r\n  const registerCard = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      await toast.promise(registerMutation.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Registrando tarjeta ...',\r\n        success: {\r\n          render({ data }) {\r\n            client.invalidateQueries([MANAGEMENT_STOCK_CARDS_KEYS.STOCK_CARDS_LIST])\r\n            onSuccess(data)\r\n            return data?.isAssigned ? 'Se agrego una nueva tarjeta al comercio' : 'Se agrego una nueva tarjeta al stock'\r\n          }\r\n        }\r\n      })\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(error, 'No se puede agregar la tarjeta al stock')\r\n      onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...registerMutation,\r\n    registerCard\r\n  }\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport { MANAGEMENT_STOCK_CARDS_KEYS } from '@/app/management/stock-cards/adapters'\r\nimport { getAffiliatedCommerces } from '@/app/management/stock-cards/services'\r\nimport { getErrorAPI } from '@/shared/interceptors'\r\n\r\nexport const useFindAffiliatedCommerces = (options = {}) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [customError, setCustomError] = useState(null)\r\n  const commerces = useQuery([MANAGEMENT_STOCK_CARDS_KEYS.AFFILIATED_COMMERCES_LIST], getAffiliatedCommerces, {\r\n    staleTime: 60 * 5000,\r\n    onError: error => {\r\n      const errorMessage = getErrorAPI(error, 'No se puede obtener la lista de comercios afiliados')\r\n      setCustomError(errorMessage)\r\n      enqueueSnackbar(errorMessage, {\r\n        variant: 'error',\r\n        autoHideDuration: 5000\r\n      })\r\n    },\r\n    ...options\r\n  })\r\n  return {\r\n    ...commerces,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\n\r\nimport { MANAGEMENT_STOCK_CARDS_KEYS } from '@/app/management/stock-cards/adapters'\r\nimport { getStockCards } from '@/app/management/stock-cards/services'\r\nimport { getErrorAPI } from '@/shared/interceptors'\r\n\r\nexport const useFindStockCards = (options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n  const commerces = useQuery([MANAGEMENT_STOCK_CARDS_KEYS.STOCK_CARDS_LIST], getStockCards, {\r\n    staleTime: 60000,\r\n    onError: error => {\r\n      const errorMessage = getErrorAPI(\r\n        error,\r\n        'No se puede obtener la lista de tarjetas. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n    },\r\n    ...options\r\n  })\r\n  return {\r\n    ...commerces,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport { AddCard, CreditCard, VpnKey, WarningAmberOutlined } from '@mui/icons-material'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { InputAdornment, Stack, Typography } from '@mui/material'\r\nimport { DatePicker } from '@mui/x-date-pickers'\r\nimport { format, isAfter, isValid, parse } from 'date-fns'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nimport { CreateCardAdapter, MANAGEMENT_STOCK_CARDS_KEYS } from '@/app/management/stock-cards/adapters'\r\nimport { useCreateNewStockCard } from '@/app/management/stock-cards/hooks'\r\nimport { SHARED_CARD_KEYS } from '@/app/shared/adapters'\r\nimport { FormProvider, MaskedInput, RFSelect, RFTextField } from '@/shared/components/form'\r\nimport { ModalAlert } from '@/shared/components/modals'\r\nimport { Scrollbar } from '@/shared/components/scroll'\r\nimport { useGetQueryData } from '@/shared/hooks'\r\n\r\nexport function StockCardForm({ setOpen }) {\r\n  const { registerCard: createCard, isLoading: isCreatingCard } = useCreateNewStockCard()\r\n  const commerces = useGetQueryData([MANAGEMENT_STOCK_CARDS_KEYS.AFFILIATED_COMMERCES_LIST]) || []\r\n  const cardTypes = useGetQueryData([SHARED_CARD_KEYS.CARD_TYPES_LIST]) || []\r\n  const [openAlertConfirm, setOpenAlertConfirm] = useState(false)\r\n\r\n  const CardSchema = Yup.object().shape({\r\n    cardNumber: Yup.string()\r\n      .transform((value, originalValue) => originalValue.replace(/\\s/g, '')) // Elimina los espacios en blanco\r\n      .min(16, 'Debe contener 16 digitos')\r\n      .required('El número de la tarjeta es requerido'),\r\n    cvv: Yup.string().min(3, 'Debe contener 3 digitos').required('El CVV es requerido'),\r\n    cardType: Yup.object().nullable().required('El tipo de tarjeta es requerido'),\r\n    expiration: Yup.string()\r\n      .required('La fecha de vencimiento es requerida')\r\n      .test('is-future-date', 'La fecha  debe ser mayor que la fecha actual', function (value) {\r\n        const date = parse(`01/${value}`, 'dd/MM/yyyy', new Date())\r\n        const currentDate = new Date()\r\n        const isDateValid = isValid(date)\r\n        return isDateValid && isAfter(date, currentDate)\r\n      })\r\n  })\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      cardNumber: '',\r\n      cardType: (cardTypes && cardTypes.length > 0 && cardTypes[0]) || null,\r\n      expiration: '',\r\n      cvv: '',\r\n      assigned: null\r\n    },\r\n    validationSchema: CardSchema,\r\n    onSubmit: (values, { setSubmitting }) => {\r\n      setSubmitting(false)\r\n      if (values.assigned) {\r\n        setOpenAlertConfirm(true)\r\n      } else {\r\n        handleCreateCard(values)\r\n      }\r\n    }\r\n  })\r\n\r\n  const { isSubmitting, values, setFieldValue, errors, handleSubmit, touched, resetForm, setSubmitting } = formik\r\n\r\n  const loading = isSubmitting || isCreatingCard\r\n\r\n  const handleCreateCard = (card, isAssigned = false) => {\r\n    const cardAdapter = CreateCardAdapter(card)\r\n    createCard(\r\n      { ...cardAdapter, isAssigned },\r\n      {\r\n        onSuccess: () => {\r\n          setOpen(false)\r\n          resetForm()\r\n          setOpenAlertConfirm(false)\r\n        },\r\n        onError: () => {\r\n          setOpenAlertConfirm(false)\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Scrollbar containerProps={{ sx: { flexGrow: 0, height: 'auto' } }}>\r\n        <FormProvider formik={formik}>\r\n          <Stack spacing={5} sx={{ p: 3 }}>\r\n            <Stack spacing={3}>\r\n              <Stack>\r\n                <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n                  Tipo de Tarjeta\r\n                </Typography>\r\n\r\n                <RFSelect\r\n                  name={'cardType'}\r\n                  disableClearable\r\n                  textFieldParams={{ placeholder: 'Seleccionar ...', required: true }}\r\n                  options={cardTypes}\r\n                  disabled={loading}\r\n                />\r\n              </Stack>\r\n\r\n              <Stack>\r\n                <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n                  Número de Tarjeta\r\n                </Typography>\r\n                <RFTextField\r\n                  autoFocus\r\n                  name={'cardNumber'}\r\n                  required={true}\r\n                  placeholder={'5254 2700 9717 8968'}\r\n                  fullWidth\r\n                  InputProps={{\r\n                    startAdornment: (\r\n                      <InputAdornment position=\"start\">\r\n                        <CreditCard />\r\n                      </InputAdornment>\r\n                    ),\r\n                    inputComponent: MaskedInput,\r\n                    inputProps: {\r\n                      mask: '0000 0000 0000 0000',\r\n                      value: values.cardNumber,\r\n                      onAccept: value => {\r\n                        setFieldValue('cardNumber', value)\r\n                      }\r\n                    }\r\n                  }}\r\n                  disabled={loading}\r\n                />\r\n              </Stack>\r\n\r\n              <Stack direction={{ xs: 'column', lg: 'row' }} spacing={3} display={'flex'}>\r\n                <Stack sx={{ width: { xs: '100%', lg: '40%' } }}>\r\n                  <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n                    CVV\r\n                  </Typography>\r\n                  <RFTextField\r\n                    name={'cvv'}\r\n                    required={true}\r\n                    placeholder={'123'}\r\n                    InputProps={{\r\n                      startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                          <VpnKey />\r\n                        </InputAdornment>\r\n                      ),\r\n                      inputComponent: MaskedInput,\r\n                      inputProps: {\r\n                        mask: '000',\r\n                        onAccept: value => {\r\n                          setFieldValue('cvv', value)\r\n                        },\r\n                        value: values.cvv\r\n                      }\r\n                    }}\r\n                    disabled={loading}\r\n                  />\r\n                </Stack>\r\n                <Stack>\r\n                  <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n                    Vence\r\n                  </Typography>\r\n                  <DatePicker\r\n                    disabled={loading}\r\n                    views={['year', 'month']}\r\n                    name={'expiration'}\r\n                    value={new Date(values.expiration) ?? null}\r\n                    onChange={newValue => {\r\n                      const isDateValid = isValid(newValue)\r\n                      if (isDateValid) {\r\n                        return formik.setFieldValue('expiration', format(newValue, 'MM/yyyy'))\r\n                      } else {\r\n                        return formik.setFieldValue('expiration', '')\r\n                      }\r\n                    }}\r\n                    slotProps={{\r\n                      textField: {\r\n                        fullWidth: true,\r\n                        error: Boolean(touched.expiration && errors.expiration),\r\n                        required: true,\r\n                        helperText: touched.expiration && errors.expiration ? errors.expiration : ''\r\n                      }\r\n                    }}\r\n                    disablePast={true}\r\n                    format=\"MM/yy\"\r\n                  />\r\n                </Stack>\r\n              </Stack>\r\n              <Stack>\r\n                <Typography paragraph variant=\"overline\" sx={{ color: 'text.disabled' }}>\r\n                  Asignar:\r\n                </Typography>\r\n                <RFSelect\r\n                  name={'assigned'}\r\n                  textFieldParams={{ placeholder: 'Seleccionar ...', required: true }}\r\n                  options={commerces}\r\n                  disabled={loading}\r\n                />\r\n              </Stack>\r\n            </Stack>\r\n          </Stack>\r\n        </FormProvider>\r\n      </Scrollbar>\r\n      <Stack sx={{ px: 3, pt: 3 }}>\r\n        <LoadingButton\r\n          loading={loading}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          type=\"submit\"\r\n          onClick={handleSubmit}\r\n          disabled={loading}\r\n          startIcon={<AddCard />}\r\n        >\r\n          Crear\r\n        </LoadingButton>\r\n      </Stack>\r\n      {openAlertConfirm && (\r\n        <ModalAlert\r\n          title=\"Asignar Tarjeta\"\r\n          typeAlert=\"warning\"\r\n          textButtonSuccess=\"Asignar\"\r\n          onClose={() => {\r\n            setOpenAlertConfirm(false)\r\n            setSubmitting(false)\r\n          }}\r\n          open={openAlertConfirm}\r\n          isSubmitting={isCreatingCard}\r\n          description={\r\n            <Stack spacing={2}>\r\n              <Typography>¿Está seguro de asignar esta tarjeta a este comercio?</Typography>\r\n              <Stack direction={'row'} alignItems={'center'} spacing={1}>\r\n                <WarningAmberOutlined />\r\n                <Typography variant={'caption'}>Verifique que todos los datos esten correctos</Typography>\r\n              </Stack>\r\n            </Stack>\r\n          }\r\n          onSuccess={() => {\r\n            handleCreateCard(values, true)\r\n          }}\r\n          fullWidth\r\n          maxWidth=\"xs\"\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import { useEffect } from 'react'\r\n\r\nimport { Close } from '@mui/icons-material'\r\nimport { Backdrop, Divider, IconButton, Stack, Typography } from '@mui/material'\r\nimport { useSettings } from '@theme/hooks'\r\nimport { NAVBAR } from '@theme/overrides/options'\r\nimport { AnimatePresence } from 'framer-motion'\r\n\r\nimport { StockCardForm } from '@/app/management/stock-cards/components/StockCardForm'\r\nimport { RightPanelStyle } from '@/app/shared/components'\r\nimport { varFade } from '@/shared/components/animate'\r\n\r\nexport function StockCardSidebar({ open, setOpen }) {\r\n  const { themeDirection } = useSettings()\r\n\r\n  const varSidebar =\r\n    themeDirection !== 'rtl'\r\n      ? varFade({\r\n          distance: NAVBAR.BASE_WIDTH,\r\n          durationIn: 0.32,\r\n          durationOut: 0.32\r\n        }).inRight\r\n      : varFade({\r\n          distance: NAVBAR.BASE_WIDTH,\r\n          durationIn: 0.32,\r\n          durationOut: 0.32\r\n        }).inLeft\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      document.body.style.overflow = 'hidden'\r\n    } else {\r\n      document.body.style.overflow = 'unset'\r\n    }\r\n  }, [open])\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Backdrop\r\n        open={open}\r\n        onClick={handleClose}\r\n        sx={{ background: 'transparent', zIndex: theme => theme.zIndex.drawer + 1 }}\r\n      />\r\n\r\n      <AnimatePresence>\r\n        {open && (\r\n          <>\r\n            <RightPanelStyle {...varSidebar}>\r\n              <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ py: 2, pr: 1, pl: 2.5 }}>\r\n                <Typography variant=\"subtitle1\">Nueva Tarjeta</Typography>\r\n                <div>\r\n                  <IconButton aria-label=\"close\" size=\"medium\" onClick={handleClose}>\r\n                    <Close width={20} height={20} fontSize=\"inherit\" color=\"primary\" />\r\n                  </IconButton>\r\n                </div>\r\n              </Stack>\r\n\r\n              <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n              <StockCardForm setOpen={setOpen} />\r\n            </RightPanelStyle>\r\n          </>\r\n        )}\r\n      </AnimatePresence>\r\n    </>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport { Avatar, Card, Stack, Typography } from '@mui/material'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport { useAssignCardStore } from '@/app/management/stock-cards/store'\r\nimport { AssignCardTableToolbar } from '@/app/shared/components'\r\nimport { DataTable } from '@/shared/components/dataTables'\r\nimport { CarnetLogo, MasterCardLogo } from '@/shared/components/images'\r\n\r\nexport function StockCardTable({ isLoading, cards = [] }) {\r\n  const isReadyToAssign = useAssignCardStore(state => state.isReadyToAssign)\r\n  const setOpenAssignCards = useAssignCardStore(state => state.setOpen)\r\n  const setCard = useAssignCardStore(state => state.setCard)\r\n  const [selectedCard, setSelectedCard] = useState(null)\r\n  const { enqueueSnackbar } = useSnackbar()\r\n\r\n  const columns = [\r\n    {\r\n      name: 'cardNumberHidden',\r\n      label: 'Tarjeta',\r\n      options: {\r\n        customBodyRenderLite: (dataIndex, rowIndex) => {\r\n          const rowData = cards[dataIndex]\r\n          return (\r\n            <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n              {rowData?.cardNumberHidden}\r\n            </Typography>\r\n          )\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: 'cardType',\r\n      label: 'Tipo',\r\n      options: {\r\n        customBodyRenderLite: (dataIndex, rowIndex) => {\r\n          const row = cards[dataIndex]\r\n          return (\r\n            <Stack flexDirection={'row'} alignItems={'center'} gap={1}>\r\n              <Avatar\r\n                sx={theme => ({\r\n                  width: 45,\r\n                  height: 45,\r\n                  color: theme.palette.primary.contrastText,\r\n                  backgroundColor: theme.palette.primary.light\r\n                })}\r\n              >\r\n                {row?.cardType === 'Carnet' ? (\r\n                  <CarnetLogo sx={{ width: 30 }} color={'white'} />\r\n                ) : (\r\n                  <MasterCardLogo sx={{ width: 30 }} />\r\n                )}\r\n              </Avatar>\r\n              <Typography variant=\"subtitle2\">{row?.cardType}</Typography>\r\n            </Stack>\r\n          )\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: 'expiration',\r\n      label: 'Vence',\r\n      options: {\r\n        filterType: 'textField'\r\n      }\r\n    },\r\n    {\r\n      name: 'register',\r\n      label: 'Fecha',\r\n      options: {\r\n        filterType: 'textField',\r\n        customBodyRenderLite: (dataIndex, rowIndex) => {\r\n          const row = cards[dataIndex]\r\n          return (\r\n            <Stack>\r\n              <Typography variant=\"subtitle2\">{row?.registerDate}</Typography>\r\n              <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                {row?.registerTime}\r\n              </Typography>\r\n            </Stack>\r\n          )\r\n        }\r\n      }\r\n    }\r\n  ]\r\n\r\n  const handleAssignCard = () => {\r\n    if (isReadyToAssign) {\r\n      setOpenAssignCards(true)\r\n      setCard(selectedCard)\r\n    } else {\r\n      setOpenAssignCards(false)\r\n      enqueueSnackbar(`Por el momento no se puede asignar la tarjeta. No hay comercios disponibles`, {\r\n        variant: 'warning',\r\n        autoHideDuration: 5000\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <DataTable\r\n        isLoading={isLoading}\r\n        data={cards || []}\r\n        columns={columns}\r\n        options={{\r\n          responsive: 'simple',\r\n          rowHover: true,\r\n          selectableRows: 'single',\r\n          selectableRowsOnClick: true,\r\n          selectToolbarPlacement: 'replace',\r\n          sortOrder: {\r\n            name: 'register',\r\n            direction: 'desc'\r\n          },\r\n          downloadOptions: {\r\n            filename: 'tarjetas_stock.csv',\r\n            filterOptions: {\r\n              useDisplayedColumnsOnly: false // it was true\r\n            }\r\n          },\r\n          onRowSelectionChange: (currentRowsSelected, allRowsSelected, rowsSelected) => {\r\n            const selectedCard = cards?.find((valor, index) => rowsSelected.includes(index))\r\n            setSelectedCard(selectedCard)\r\n          },\r\n          customToolbarSelect: selectedRows => <AssignCardTableToolbar handleAssign={handleAssignCard} />\r\n        }}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport { SHARED_CARD_KEYS } from '@/app/shared/adapters'\r\nimport { getCardTypes } from '@/app/shared/services'\r\nimport { getErrorAPI } from '@/shared/interceptors'\r\n\r\nexport const useFindCardTypes = (options = {}) => {\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [customError, setCustomError] = useState(null)\r\n  const commerces = useQuery([SHARED_CARD_KEYS.CARD_TYPES_LIST], getCardTypes, {\r\n    staleTime: 60 * 5000,\r\n    onError: error => {\r\n      const errorMessage = getErrorAPI(error, 'No se puede obtener la lista de los tipos de tarjeta')\r\n      setCustomError(errorMessage)\r\n      enqueueSnackbar(errorMessage, {\r\n        variant: 'error',\r\n        autoHideDuration: 5000\r\n      })\r\n    },\r\n    ...options\r\n  })\r\n  return {\r\n    ...commerces,\r\n    error: customError || null\r\n  }\r\n}\r\n","import { lazy, useEffect, useState } from 'react'\r\n\r\nimport { Add, AddBusinessTwoTone, Apps, FormatListBulleted } from '@mui/icons-material'\r\nimport { LoadingButton } from '@mui/lab'\r\nimport { Button, Stack, ToggleButton, ToggleButtonGroup } from '@mui/material'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport { MANAGEMENT_PATHS, MANAGEMENT_ROUTES_NAMES } from '@/app/management/shared/routes'\r\nimport { StockCardSidebar, StockCardTable } from '@/app/management/stock-cards/components'\r\nimport { useFindAffiliatedCommerces, useFindStockCards } from '@/app/management/stock-cards/hooks'\r\nimport { useAssignCardStore } from '@/app/management/stock-cards/store'\r\nimport { CardsList } from '@/app/shared/components'\r\nimport { useFindCardTypes } from '@/app/shared/hooks'\r\nimport { PATH_DASHBOARD } from '@/routes'\r\nimport { Page } from '@/shared/components/containers'\r\nimport { ContainerPage } from '@/shared/components/containers/ContainerPage'\r\nimport { HeaderPage } from '@/shared/components/layout'\r\nimport { Lodable } from '@/shared/components/lodables'\r\n\r\nconst AssignCardModal = Lodable(lazy(() => import('@/app/management/stock-cards/components/AssignCardModal')))\r\n\r\nexport default function StockCards() {\r\n  const [open, setOpen] = useState(false)\r\n  const { data: affiliatedCommerces, isSuccess, isLoading } = useFindAffiliatedCommerces()\r\n  const { data: cardTypes, isSuccess: isSuccessCardTypes, isLoading: isLoadingCardTypes } = useFindCardTypes()\r\n  const stockCards = useFindStockCards()\r\n  const { data: cards, isLoading: isLoadingStockCards } = stockCards\r\n  const setOpenAssignCards = useAssignCardStore(state => state.setOpen)\r\n  const setReadyToAssign = useAssignCardStore(state => state.setReadyToAssign)\r\n  const openAssignCard = useAssignCardStore(state => state.open)\r\n  const { enqueueSnackbar } = useSnackbar()\r\n  const [view, setView] = useState('1')\r\n  const handleChange = (event, newValue) => {\r\n    setView(newValue)\r\n  }\r\n\r\n  const handleNewCard = () => {\r\n    if (affiliatedCommerces && cardTypes && isSuccessCardTypes && isSuccess) {\r\n      setOpen(true)\r\n    } else {\r\n      enqueueSnackbar(`Por el momento no se puede crear una tarjeta. Intente nuevamenta o reporte a sistemas`, {\r\n        variant: 'warning',\r\n        autoHideDuration: 5000\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleAssignCards = () => {\r\n    if (affiliatedCommerces && affiliatedCommerces.length > 0 && cardTypes && cardTypes.length > 0) {\r\n      setOpenAssignCards(true)\r\n    } else {\r\n      setOpenAssignCards(false)\r\n      enqueueSnackbar(`Por el momento no se puede asignar tarjetas. No hay comercios disponibles`, {\r\n        variant: 'warning',\r\n        autoHideDuration: 5000\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (affiliatedCommerces && affiliatedCommerces.length > 0) {\r\n      setReadyToAssign(true)\r\n    } else {\r\n      setReadyToAssign(false)\r\n    }\r\n  }, [affiliatedCommerces])\r\n\r\n  return (\r\n    <Page title=\"Stock de Tarjetas\">\r\n      <ContainerPage>\r\n        <HeaderPage\r\n          name={'Stock de Tarjetas'}\r\n          links={[\r\n            { name: 'Inicio', href: PATH_DASHBOARD.root },\r\n            { name: 'Administracion', href: MANAGEMENT_PATHS.stock_cards },\r\n            { name: MANAGEMENT_ROUTES_NAMES.stock_cards.name }\r\n          ]}\r\n          buttons={\r\n            <Stack direction={'column'} spacing={2} mt={{ xs: 2, md: 0 }}>\r\n              <Stack spacing={2} direction={{ xs: 'column', md: 'row' }}>\r\n                {cards && cards?.length > 0 && (\r\n                  <Button\r\n                    sx={{ color: 'text.primary' }}\r\n                    type=\"button\"\r\n                    color=\"secondary\"\r\n                    variant=\"contained\"\r\n                    onClick={handleAssignCards}\r\n                    startIcon={<AddBusinessTwoTone />}\r\n                  >\r\n                    Asignar Tarjetas\r\n                  </Button>\r\n                )}\r\n\r\n                <LoadingButton\r\n                  loading={isLoading || isLoadingCardTypes}\r\n                  variant=\"contained\"\r\n                  onClick={handleNewCard}\r\n                  startIcon={<Add />}\r\n                >\r\n                  Nueva Tarjeta\r\n                </LoadingButton>\r\n              </Stack>\r\n              <Stack alignItems={{ xs: 'center', md: 'flex-end' }}>\r\n                <ToggleButtonGroup\r\n                  size={'small'}\r\n                  color=\"primary\"\r\n                  value={view}\r\n                  exclusive\r\n                  onChange={handleChange}\r\n                  aria-label=\"Platform\"\r\n                >\r\n                  <ToggleButton value=\"1\">\r\n                    <FormatListBulleted />\r\n                  </ToggleButton>\r\n                  <ToggleButton value=\"2\">\r\n                    <Apps />\r\n                  </ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </Stack>\r\n            </Stack>\r\n          }\r\n        />\r\n        {view === '2' && <CardsList cards={stockCards} />}\r\n        {view === '1' && <StockCardTable cards={cards} isLoading={isLoadingStockCards} />}\r\n        <StockCardSidebar open={open} setOpen={setOpen} />\r\n        {openAssignCard && <AssignCardModal />}\r\n      </ContainerPage>\r\n    </Page>\r\n  )\r\n}\r\n"],"file":"assets/js/StockCards-j49jkgAV.js"}