{"version":3,"mappings":"mxBAUO,MAAMA,EAAyB,CAACC,EAAYC,EAAU,KAAO,CAClE,KAAM,CAACC,EAAaC,CAAc,EAAIC,WAAS,IAAI,EAE7CC,EAAQC,EAAS,CACrB,SAAU,CAACC,EAA0B,iBAAkBP,CAAU,EACjE,QAAS,CAAC,CAAE,OAAAQ,KAAaC,EAAmBT,CAAU,EACtD,qBAAsB,GACtB,MAAO,GACP,UAAW,IACX,GAAGC,CACP,CAAG,EAEDS,mBAAU,IAAM,CACd,GAAIL,GAAA,MAAAA,EAAO,QAAS,CAClB,MAAMM,EAAeC,EACnBP,EAAM,MACN,4FACD,EACDF,EAAeQ,CAAY,EAC3BE,EAAM,MAAMF,EAAc,CACxB,KAAMG,EAA+BT,EAAM,KAAK,CACxD,CAAO,CACF,CACF,EAAE,CAACA,EAAM,QAASA,EAAM,KAAK,CAAC,EAExB,CACL,GAAGA,EACH,MAAOH,GAAe,IACvB,CACH","names":["useFindCommerceDetails","commerceId","options","customError","setCustomError","useState","query","useQuery","MANAGEMENT_COMMERCES_KEYS","signal","getCommerceDetails","useEffect","errorMessage","getErrorAPI","toast","getNotificationTypeByErrorCode"],"sources":["../../../../../frontend/src/app/management/commerces/hooks/useFindCommerceDetails.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { MANAGEMENT_COMMERCES_KEYS } from '../adapters'\r\nimport { getCommerceDetails } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindCommerceDetails = (commerceId, options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const query = useQuery({\r\n    queryKey: [MANAGEMENT_COMMERCES_KEYS.COMMERCE_DETAILS, commerceId],\r\n    queryFn: ({ signal }) => getCommerceDetails(commerceId),\r\n    refetchOnWindowFocus: false,\r\n    retry: false,\r\n    staleTime: 300000,\r\n    ...options\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (query?.isError) {\r\n      const errorMessage = getErrorAPI(\r\n        query.error,\r\n        'No se puede obtener los detalles de este comercio. Intente nuevamente o reporte a sistemas'\r\n      )\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(query.error)\r\n      })\r\n    }\r\n  }, [query.isError, query.error])\r\n\r\n  return {\r\n    ...query,\r\n    error: customError || null\r\n  }\r\n}\r\n"],"file":"assets/js/CommerceDetails-IduDJgcE.js"}