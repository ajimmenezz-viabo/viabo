{"version":3,"file":"ChangePasswordForm-b3LONZDT.js","sources":["../../../../../frontend/src/app/authentication/adapters/changePasswordAdapter.js","../../../../../frontend/src/app/authentication/hooks/useChangePassword.js"],"sourcesContent":["import { getCryptInfo } from '@/shared/utils'\r\n\r\nexport const ChangePasswordAdapter = data => {\r\n  const password = {\r\n    code: data?.authCode,\r\n    currentPassword: data?.currentPassword,\r\n    newPassword: data?.newPassword,\r\n    confirmationPassword: data?.verifyNewPassword\r\n  }\r\n  return getCryptInfo(password)\r\n}\r\n","import { useMutation } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { changePassword } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\nimport { isFunction } from '@/shared/utils'\r\n\r\nexport const useChangePassword = (options = {}) => {\r\n  const password = useMutation(changePassword, options)\r\n  const mutate = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      await toast.promise(password.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Actualizando Contraseña ...',\r\n        success: {\r\n          render({ data }) {\r\n            isFunction(onSuccess) && onSuccess(data)\r\n\r\n            return 'Se actualizo la contraseña con éxito'\r\n          }\r\n        }\r\n      })\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operación en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      isFunction(onError) && onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...password,\r\n    mutate\r\n  }\r\n}\r\n"],"names":["ChangePasswordAdapter","data","password","getCryptInfo","useChangePassword","options","useMutation","changePassword","formData","onSuccess","onError","mutationOptions","toast","isFunction","error","errorFormatted","getErrorAPI","getNotificationTypeByErrorCode"],"mappings":"yuBAEO,MAAMA,EAAwBC,GAAQ,CAC3C,MAAMC,EAAW,CACf,KAAMD,GAAA,YAAAA,EAAM,SACZ,gBAAiBA,GAAA,YAAAA,EAAM,gBACvB,YAAaA,GAAA,YAAAA,EAAM,YACnB,qBAAsBA,GAAA,YAAAA,EAAM,iBAC7B,EACD,OAAOE,EAAaD,CAAQ,CAC9B,ECFaE,EAAoB,CAACC,EAAU,KAAO,CACjD,MAAMH,EAAWI,EAAYC,EAAgBF,CAAO,EA2BpD,MAAO,CACL,GAAGH,EACH,OA5Ba,MAAOM,EAAUH,IAAY,CAC1C,KAAM,CAAE,UAAAI,EAAW,QAAAC,EAAS,gBAAAC,CAAiB,EAAGN,EAEhD,GAAI,CACF,MAAMO,EAAM,QAAQV,EAAS,YAAYM,EAAUG,CAAe,EAAG,CACnE,QAAS,8BACT,QAAS,CACP,OAAO,CAAE,KAAAV,GAAQ,CACf,OAAAY,EAAWJ,CAAS,GAAKA,EAAUR,CAAI,EAEhC,sCACR,CACF,CACT,CAAO,CACF,OAAQa,EAAO,CACd,MAAMC,EAAiBC,EACrBF,EACA,8FACD,EACDD,EAAWH,CAAO,GAAKA,EAAQK,CAAc,EAC7CH,EAAM,MAAMG,EAAgB,CAC1B,KAAME,EAA+BH,CAAK,CAClD,CAAO,CACF,CACF,CAKA,CACH"}