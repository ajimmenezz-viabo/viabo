{"version":3,"file":"GeneralInfoForm-85Rh_-l2.js","sources":["../../../../../frontend/src/app/management/commerces/adapters/managementCommerceInformationAdapter.js","../../../../../frontend/src/app/management/commerces/hooks/useUpdateCommerceInfo.js"],"sourcesContent":["export const ManagementCommerceInformationAdapter = (information, commerce) => {\r\n  const formCommerce = new FormData()\r\n\r\n  const dataAdapted = {\r\n    commerceId: commerce?.id,\r\n    fiscalPersonType: information?.fiscalTypePerson,\r\n    fiscalName: information?.fiscalName,\r\n    tradeName: information?.commercialName,\r\n    rfc: information?.rfc,\r\n    employees: information?.employeesNumber,\r\n    branchOffices: information?.branchesNumber,\r\n    postalAddress: information?.postalAddress,\r\n    phoneNumbers: information?.phoneNumbers,\r\n    slug: information?.terminalCommerceSlug?.toLowerCase()?.trim() || '',\r\n    publicTerminal: information?.publicTerminal?.value || '',\r\n    logo: information?.commerceLogo || null\r\n  }\r\n\r\n  Object.entries(dataAdapted).forEach(([key, value]) => {\r\n    formCommerce.append(key, value)\r\n  })\r\n\r\n  return formCommerce\r\n}\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { MANAGEMENT_COMMERCES_KEYS } from '../adapters'\r\nimport { updateCommerceInformation } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\nimport { isFunction } from '@/shared/utils'\r\n\r\nexport const useUpdateCommerceInfo = (options = {}) => {\r\n  const client = useQueryClient()\r\n  const updateCommerce = useMutation(updateCommerceInformation, options)\r\n  const commerce = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      await toast.promise(updateCommerce.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Actualizando Comercio ...',\r\n        success: {\r\n          render({ data }) {\r\n            client.invalidateQueries([MANAGEMENT_COMMERCES_KEYS.COMMERCE_LIST])\r\n            isFunction(onSuccess) && onSuccess(data)\r\n\r\n            return 'Se actualizo la información del comercio con éxito'\r\n          }\r\n        }\r\n      })\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operación en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      isFunction(onError) && onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...updateCommerce,\r\n    mutate: commerce\r\n  }\r\n}\r\n"],"names":["ManagementCommerceInformationAdapter","information","commerce","formCommerce","dataAdapted","_b","_a","_c","key","value","useUpdateCommerceInfo","options","client","useQueryClient","updateCommerce","useMutation","updateCommerceInformation","formData","onSuccess","onError","mutationOptions","toast","data","MANAGEMENT_COMMERCES_KEYS","isFunction","error","errorFormatted","getErrorAPI","getNotificationTypeByErrorCode"],"mappings":"g7BAAO,MAAMA,EAAuC,CAACC,EAAaC,IAAa,WAC7E,MAAMC,EAAe,IAAI,SAEnBC,EAAc,CAClB,WAAYF,GAAA,YAAAA,EAAU,GACtB,iBAAkBD,GAAA,YAAAA,EAAa,iBAC/B,WAAYA,GAAA,YAAAA,EAAa,WACzB,UAAWA,GAAA,YAAAA,EAAa,eACxB,IAAKA,GAAA,YAAAA,EAAa,IAClB,UAAWA,GAAA,YAAAA,EAAa,gBACxB,cAAeA,GAAA,YAAAA,EAAa,eAC5B,cAAeA,GAAA,YAAAA,EAAa,cAC5B,aAAcA,GAAA,YAAAA,EAAa,aAC3B,OAAMI,GAAAC,EAAAL,GAAA,YAAAA,EAAa,uBAAb,YAAAK,EAAmC,gBAAnC,YAAAD,EAAkD,SAAU,GAClE,iBAAgBE,EAAAN,GAAA,YAAAA,EAAa,iBAAb,YAAAM,EAA6B,QAAS,GACtD,MAAMN,GAAA,YAAAA,EAAa,eAAgB,IACpC,EAED,cAAO,QAAQG,CAAW,EAAE,QAAQ,CAAC,CAACI,EAAKC,CAAK,IAAM,CACpDN,EAAa,OAAOK,EAAKC,CAAK,CAClC,CAAG,EAEMN,CACT,ECdaO,EAAwB,CAACC,EAAU,KAAO,CACrD,MAAMC,EAASC,EAAgB,EACzBC,EAAiBC,EAAYC,EAA2BL,CAAO,EA4BrE,MAAO,CACL,GAAGG,EACH,OA7Be,MAAOG,EAAUN,IAAY,CAC5C,KAAM,CAAE,UAAAO,EAAW,QAAAC,EAAS,gBAAAC,CAAiB,EAAGT,EAEhD,GAAI,CACF,MAAMU,EAAM,QAAQP,EAAe,YAAYG,EAAUG,CAAe,EAAG,CACzE,QAAS,4BACT,QAAS,CACP,OAAO,CAAE,KAAAE,GAAQ,CACf,OAAAV,EAAO,kBAAkB,CAACW,EAA0B,aAAa,CAAC,EAClEC,EAAWN,CAAS,GAAKA,EAAUI,CAAI,EAEhC,oDACR,CACF,CACT,CAAO,CACF,OAAQG,EAAO,CACd,MAAMC,EAAiBC,EACrBF,EACA,8FACD,EACDD,EAAWL,CAAO,GAAKA,EAAQO,CAAc,EAC7CL,EAAM,MAAMK,EAAgB,CAC1B,KAAME,EAA+BH,CAAK,CAClD,CAAO,CACF,CACF,CAKA,CACH"}