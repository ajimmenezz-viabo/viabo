{"version":3,"file":"ConciliateModal--bNuVn6d.js","sources":["../../../../../frontend/src/app/business/funding-orders/adapters/conciliate-funding-order-adapter.js","../../../../../frontend/src/app/business/funding-orders/hooks/useConciliateFundingOrder.js","../../../../../frontend/src/app/business/funding-orders/hooks/useFindConciliateMovementsByOrder.js"],"sourcesContent":["export const ConciliateFundingOrderAdapter = (fundingOrder, movement) => ({\r\n  fundingOrderId: fundingOrder?.id,\r\n  conciliationNumber: movement?.id\r\n})\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { FUNDING_ORDERS_KEYS } from '../adapters'\r\nimport { conciliateFundingOrder } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useConciliateFundingOrder = (options = {}) => {\r\n  const client = useQueryClient()\r\n  const conciliateOrder = useMutation(conciliateFundingOrder, options)\r\n  const conciliate = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      await toast.promise(conciliateOrder.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Conciliando orden de fondeo ...',\r\n        success: {\r\n          render({ data }) {\r\n            client.invalidateQueries([FUNDING_ORDERS_KEYS.LIST])\r\n            onSuccess(data)\r\n            return 'Se creó la conciliación con éxito'\r\n          }\r\n        }\r\n      })\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operación en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...conciliateOrder,\r\n    mutate: conciliate\r\n  }\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { FUNDING_ORDERS_KEYS } from '../adapters'\r\nimport { getMovementsByFundingOrder } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useFindConciliateMovementsByOrder = (order, options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n\r\n  const fundingOrders = useQuery([FUNDING_ORDERS_KEYS.MOVEMENTS, order?.id], () => getMovementsByFundingOrder(order), {\r\n    staleTime: 60000,\r\n    refetchOnWindowFocus: false,\r\n    onError: error => {\r\n      const errorMessage = getErrorAPI(error, 'No se puede obtener los movimientos de la cuenta')\r\n      setCustomError(errorMessage)\r\n      toast.error(errorMessage, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    },\r\n    ...options\r\n  })\r\n  return {\r\n    ...fundingOrders,\r\n    error: customError || null\r\n  }\r\n}\r\n"],"names":["ConciliateFundingOrderAdapter","fundingOrder","movement","useConciliateFundingOrder","options","client","useQueryClient","conciliateOrder","useMutation","conciliateFundingOrder","formData","onSuccess","onError","mutationOptions","toast","data","FUNDING_ORDERS_KEYS","error","errorFormatted","getErrorAPI","getNotificationTypeByErrorCode","useFindConciliateMovementsByOrder","order","customError","setCustomError","useState","useQuery","getMovementsByFundingOrder","errorMessage"],"mappings":"09BAAO,MAAMA,EAAgC,CAACC,EAAcC,KAAc,CACxE,eAAgBD,GAAA,YAAAA,EAAc,GAC9B,mBAAoBC,GAAA,YAAAA,EAAU,EAChC,GCKaC,EAA4B,CAACC,EAAU,KAAO,CACzD,MAAMC,EAASC,EAAgB,EACzBC,EAAkBC,EAAYC,EAAwBL,CAAO,EA2BnE,MAAO,CACL,GAAGG,EACH,OA5BiB,MAAOG,EAAUN,IAAY,CAC9C,KAAM,CAAE,UAAAO,EAAW,QAAAC,EAAS,gBAAAC,CAAiB,EAAGT,EAEhD,GAAI,CACF,MAAMU,EAAM,QAAQP,EAAgB,YAAYG,EAAUG,CAAe,EAAG,CAC1E,QAAS,kCACT,QAAS,CACP,OAAO,CAAE,KAAAE,GAAQ,CACf,OAAAV,EAAO,kBAAkB,CAACW,EAAoB,IAAI,CAAC,EACnDL,EAAUI,CAAI,EACP,mCACR,CACF,CACT,CAAO,CACF,OAAQE,EAAO,CACd,MAAMC,EAAiBC,EACrBF,EACA,8FACD,EACDL,EAAQM,CAAc,EACtBJ,EAAM,MAAMI,EAAgB,CAC1B,KAAME,EAA+BH,CAAK,CAClD,CAAO,CACF,CACF,CAKA,CACH,EC/BaI,EAAoC,CAACC,EAAOlB,EAAU,KAAO,CACxE,KAAM,CAACmB,EAAaC,CAAc,EAAIC,EAAAA,SAAS,IAAI,EAcnD,MAAO,CACL,GAboBC,EAAS,CAACV,EAAoB,UAAWM,GAAA,YAAAA,EAAO,EAAE,EAAG,IAAMK,EAA2BL,CAAK,EAAG,CAClH,UAAW,IACX,qBAAsB,GACtB,QAASL,GAAS,CAChB,MAAMW,EAAeT,EAAYF,EAAO,kDAAkD,EAC1FO,EAAeI,CAAY,EAC3Bd,EAAM,MAAMc,EAAc,CACxB,KAAMR,EAA+BH,CAAK,CAClD,CAAO,CACF,EACD,GAAGb,CACP,CAAG,EAGC,MAAOmB,GAAe,IACvB,CACH"}