{"version":3,"file":"ChargePaymentLink-wxkbnGoO.js","sources":["../../../../../frontend/src/app/business/viabo-pay/terminal-charge-payment-link/adapters/chargePaymentAdapter.js","../../../../../frontend/src/app/business/viabo-pay/terminal-charge-payment-link/adapters/chargePaymentLinkKeys.js","../../../../../frontend/src/app/business/viabo-pay/terminal-charge-payment-link/adapters/paymentLinkInfoAdapter.js","../../../../../frontend/src/app/business/viabo-pay/terminal-charge-payment-link/services/ChargePaymentLinkRepository.js","../../../../../frontend/src/app/business/viabo-pay/terminal-charge-payment-link/hooks/useCreatePaymentCharge.js","../../../../../frontend/src/app/business/viabo-pay/terminal-charge-payment-link/hooks/useFindPaymentLinkInfo.js","../../../../../frontend/src/app/business/viabo-pay/terminal-charge-payment-link/services/paymentLinkStatus.js"],"sourcesContent":["import { format } from 'date-fns'\r\n\r\nimport { getCryptInfo } from '@/shared/utils'\r\n\r\nexport const ChargePaymentAdapter = (payment, details) => {\r\n  const date = payment?.expiration ? format(new Date(payment?.expiration), 'MM/yyyy') : null\r\n\r\n  const expirationYear = date ? date?.slice(-2) : ''\r\n  const expirationMonth = date ? date?.slice(0, 2) : ''\r\n\r\n  const expirationFormatted = date ? date?.slice(0, 3) + expirationYear : ''\r\n\r\n  const paymentData = {\r\n    payId: details?.id,\r\n    cardHolder: payment?.name,\r\n    phone: payment?.phone,\r\n    cardNumber: payment?.cardNumber.replace(/\\s+/g, ''),\r\n    expirationDate: expirationFormatted,\r\n    expMonth: expirationMonth,\r\n    expYear: expirationYear,\r\n    security: payment?.cvv,\r\n    email: payment?.email\r\n  }\r\n\r\n  return getCryptInfo(paymentData)\r\n}\r\n","export const CHARGE_PAYMENT_LINK = {\r\n  INFO: 'payment-link-info'\r\n}\r\n","import { fCurrency, getDecryptInfo } from '@/shared/utils'\r\n\r\nexport const PaymentLinkInfoAdapter = paymentLinkInfo => {\r\n  const paymentLinkDecrypted = getDecryptInfo(paymentLinkInfo?.ciphertext, paymentLinkInfo?.iv)\r\n\r\n  if (paymentLinkDecrypted) {\r\n    return {\r\n      id: paymentLinkDecrypted?.id,\r\n      name: paymentLinkDecrypted?.clientName,\r\n      amount: fCurrency(paymentLinkDecrypted?.amount),\r\n      description: paymentLinkDecrypted?.description,\r\n      email: paymentLinkDecrypted?.email,\r\n      phone: paymentLinkDecrypted?.phone,\r\n      status: {\r\n        id: paymentLinkDecrypted?.statusId,\r\n        name: paymentLinkDecrypted?.statusName\r\n      },\r\n      reference: paymentLinkDecrypted?.reference,\r\n      terminalId: paymentLinkDecrypted?.terminalId,\r\n      transaction: {\r\n        reference: paymentLinkDecrypted?.apiReferenceNumber !== '' ? paymentLinkDecrypted?.apiReferenceNumber : '-',\r\n        authCode: paymentLinkDecrypted?.apiAuthCode !== '' ? paymentLinkDecrypted?.apiAuthCode : '-'\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Algo fallo al obtenerla información de la liga de pago')\r\n  }\r\n}\r\n","import { PaymentLinkInfoAdapter } from '../adapters'\r\n\r\nimport { axios } from '@/shared/interceptors'\r\n\r\nexport const getPaymentLinkInfo = async paymentId => {\r\n  const { data } = await axios.get(`/api/commerces/pay/${paymentId}`)\r\n  return PaymentLinkInfoAdapter(data)\r\n}\r\n\r\nexport const generateChargeFromPaymentLink = async charge => {\r\n  const { data } = await axios.post('/api/commerce/pay/generate/transaction', charge)\r\n  return data\r\n}\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { CHARGE_PAYMENT_LINK } from '../adapters'\r\nimport { generateChargeFromPaymentLink } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useCreatePaymentCharge = (paymentId, options = {}) => {\r\n  const paymenLink = useMutation(generateChargeFromPaymentLink, options)\r\n  const client = useQueryClient()\r\n  const payment = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      await toast.promise(paymenLink.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Realizando cargo ...',\r\n        success: {\r\n          render({ data }) {\r\n            client.invalidateQueries([CHARGE_PAYMENT_LINK.INFO])\r\n            onSuccess(data)\r\n            return 'Se realizo el pago con éxito'\r\n          }\r\n        }\r\n      })\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operacion en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...paymenLink,\r\n    mutate: payment\r\n  }\r\n}\r\n","import { useState } from 'react'\r\n\r\nimport { useQuery } from '@tanstack/react-query'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { CHARGE_PAYMENT_LINK } from '../adapters'\r\nimport { getPaymentLinkInfo } from '../services'\r\n\r\nimport { getErrorAPI } from '@/shared/interceptors'\r\n\r\nexport const useFindPaymentLinkInfo = (paymentId, options = {}) => {\r\n  const [customError, setCustomError] = useState(null)\r\n  const navigate = useNavigate()\r\n  const commerces = useQuery([CHARGE_PAYMENT_LINK.INFO, paymentId], () => getPaymentLinkInfo(paymentId), {\r\n    staleTime: 60000,\r\n    onError: error => {\r\n      const errorMessage = getErrorAPI(error, 'No se puede obtener la informacion de la liga de pago')\r\n      setCustomError(errorMessage)\r\n      navigate('/404')\r\n    },\r\n    ...options\r\n  })\r\n  return {\r\n    ...commerces,\r\n    error: customError || null\r\n  }\r\n}\r\n","const PAYMENT_TERMINAL_STATUS = [\r\n  {\r\n    id: '6',\r\n    color: 'warning'\r\n  },\r\n  {\r\n    id: '7',\r\n    color: 'success'\r\n  },\r\n  {\r\n    id: '8',\r\n    color: 'error'\r\n  }\r\n]\r\n\r\nexport const getColorStatusPaymentLinkById = id =>\r\n  PAYMENT_TERMINAL_STATUS.find(status => status?.id === id)?.color ?? 'info'\r\n"],"names":["ChargePaymentAdapter","payment","details","date","format","expirationYear","expirationMonth","expirationFormatted","paymentData","getCryptInfo","CHARGE_PAYMENT_LINK","PaymentLinkInfoAdapter","paymentLinkInfo","paymentLinkDecrypted","getDecryptInfo","fCurrency","getPaymentLinkInfo","paymentId","data","axios","generateChargeFromPaymentLink","charge","useCreatePaymentCharge","options","paymenLink","useMutation","client","useQueryClient","formData","onSuccess","onError","mutationOptions","toast","error","errorFormatted","getErrorAPI","getNotificationTypeByErrorCode","useFindPaymentLinkInfo","customError","setCustomError","useState","navigate","useNavigate","useQuery","errorMessage","PAYMENT_TERMINAL_STATUS","getColorStatusPaymentLinkById","id","_a","status"],"mappings":"k6BAIO,MAAMA,GAAuB,CAACC,EAASC,IAAY,CACxD,MAAMC,EAAOF,GAAA,MAAAA,EAAS,WAAaG,EAAO,IAAI,KAAKH,GAAA,YAAAA,EAAS,UAAU,EAAG,SAAS,EAAI,KAEhFI,EAAiBF,EAAOA,GAAA,YAAAA,EAAM,MAAM,IAAM,GAC1CG,EAAkBH,EAAOA,GAAA,YAAAA,EAAM,MAAM,EAAG,GAAK,GAE7CI,EAAsBJ,GAAOA,GAAA,YAAAA,EAAM,MAAM,EAAG,IAAKE,EAAiB,GAElEG,EAAc,CAClB,MAAON,GAAA,YAAAA,EAAS,GAChB,WAAYD,GAAA,YAAAA,EAAS,KACrB,MAAOA,GAAA,YAAAA,EAAS,MAChB,WAAYA,GAAA,YAAAA,EAAS,WAAW,QAAQ,OAAQ,IAChD,eAAgBM,EAChB,SAAUD,EACV,QAASD,EACT,SAAUJ,GAAA,YAAAA,EAAS,IACnB,MAAOA,GAAA,YAAAA,EAAS,KACjB,EAED,OAAOQ,GAAaD,CAAW,CACjC,ECzBaE,EAAsB,CACjC,KAAM,mBACR,ECAaC,GAAyBC,GAAmB,CACvD,MAAMC,EAAuBC,GAAeF,GAAA,YAAAA,EAAiB,WAAYA,GAAA,YAAAA,EAAiB,EAAE,EAE5F,GAAIC,EACF,MAAO,CACL,GAAIA,GAAA,YAAAA,EAAsB,GAC1B,KAAMA,GAAA,YAAAA,EAAsB,WAC5B,OAAQE,GAAUF,GAAA,YAAAA,EAAsB,MAAM,EAC9C,YAAaA,GAAA,YAAAA,EAAsB,YACnC,MAAOA,GAAA,YAAAA,EAAsB,MAC7B,MAAOA,GAAA,YAAAA,EAAsB,MAC7B,OAAQ,CACN,GAAIA,GAAA,YAAAA,EAAsB,SAC1B,KAAMA,GAAA,YAAAA,EAAsB,UAC7B,EACD,UAAWA,GAAA,YAAAA,EAAsB,UACjC,WAAYA,GAAA,YAAAA,EAAsB,WAClC,YAAa,CACX,WAAWA,GAAA,YAAAA,EAAsB,sBAAuB,GAAKA,GAAA,YAAAA,EAAsB,mBAAqB,IACxG,UAAUA,GAAA,YAAAA,EAAsB,eAAgB,GAAKA,GAAA,YAAAA,EAAsB,YAAc,GAC1F,CACF,EAED,MAAM,IAAI,MAAM,wDAAwD,CAE5E,ECvBaG,GAAqB,MAAMC,GAAa,CACnD,KAAM,CAAE,KAAAC,CAAM,EAAG,MAAMC,EAAM,IAAI,sBAAsBF,CAAS,EAAE,EAClE,OAAON,GAAuBO,CAAI,CACpC,EAEaE,GAAgC,MAAMC,GAAU,CAC3D,KAAM,CAAE,KAAAH,CAAI,EAAK,MAAMC,EAAM,KAAK,yCAA0CE,CAAM,EAClF,OAAOH,CACT,ECJaI,GAAyB,CAACL,EAAWM,EAAU,KAAO,CACjE,MAAMC,EAAaC,EAAYL,GAA+BG,CAAO,EAC/DG,EAASC,EAAgB,EA2B/B,MAAO,CACL,GAAGH,EACH,OA5Bc,MAAOI,EAAUL,IAAY,CAC3C,KAAM,CAAE,UAAAM,EAAW,QAAAC,EAAS,gBAAAC,CAAiB,EAAGR,EAEhD,GAAI,CACF,MAAMS,EAAM,QAAQR,EAAW,YAAYI,EAAUG,CAAe,EAAG,CACrE,QAAS,uBACT,QAAS,CACP,OAAO,CAAE,KAAAb,GAAQ,CACf,OAAAQ,EAAO,kBAAkB,CAAChB,EAAoB,IAAI,CAAC,EACnDmB,EAAUX,CAAI,EACP,8BACR,CACF,CACT,CAAO,CACF,OAAQe,EAAO,CACd,MAAMC,EAAiBC,EACrBF,EACA,8FACD,EACDH,EAAQI,CAAc,EACtBF,EAAM,MAAME,EAAgB,CAC1B,KAAME,GAA+BH,CAAK,CAClD,CAAO,CACF,CACF,CAKA,CACH,EC/BaI,GAAyB,CAACpB,EAAWM,EAAU,KAAO,CACjE,KAAM,CAACe,EAAaC,CAAc,EAAIC,EAAAA,SAAS,IAAI,EAC7CC,EAAWC,EAAa,EAU9B,MAAO,CACL,GAVgBC,EAAS,CAACjC,EAAoB,KAAMO,CAAS,EAAG,IAAMD,GAAmBC,CAAS,EAAG,CACrG,UAAW,IACX,QAASgB,GAAS,CAChB,MAAMW,EAAeT,EAAYF,EAAO,uDAAuD,EAC/FM,EAAeK,CAAY,EAC3BH,EAAS,MAAM,CAChB,EACD,GAAGlB,CACP,CAAG,EAGC,MAAOe,GAAe,IACvB,CACH,o2IC1BA,MAAMO,GAA0B,CAC9B,CACE,GAAI,IACJ,MAAO,SACR,EACD,CACE,GAAI,IACJ,MAAO,SACR,EACD,CACE,GAAI,IACJ,MAAO,OACR,CACH,EAEaC,GAAgCC,GAAE,OAC7C,QAAAC,EAAAH,GAAwB,KAAKI,IAAUA,GAAA,YAAAA,EAAQ,MAAOF,CAAE,IAAxD,YAAAC,EAA2D,QAAS"}