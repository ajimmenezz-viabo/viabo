{"version":3,"file":"VirtualTerminalModal-09JHV4LN.js","sources":["../../../../../frontend/src/app/business/viabo-pay/terminals/adapters/paymentByVirtualTerminalAdapter.js","../../../../../frontend/src/app/business/viabo-pay/terminals/hooks/useGeneratePaymentByVirtualTerminal.js"],"sourcesContent":["import { getCryptInfo } from '@/shared/utils'\r\n\r\nfunction convertToDoubleDigit(number) {\r\n  return /^([1-9])$/.test(number) ? '0' + number : number\r\n}\r\n\r\nexport const PaymentByVirtualTerminalAdapter = (terminal, payment) => {\r\n  const paymentData = {\r\n    commerceId: terminal?.commerceId,\r\n    terminalId: terminal?.terminalId,\r\n    amount: parseFloat(\r\n      payment?.amount?.toString() === '' ? '0' : payment?.amount?.toString().replace(/,/g, '')\r\n    ).toString(),\r\n    description: payment?.concept,\r\n    clientName: payment?.name,\r\n    phone: `+52 ${payment?.phone}`,\r\n    cardNumber: payment?.cardNumber.replace(/\\s+/g, ''),\r\n    expMonth: convertToDoubleDigit(payment?.month + 1)?.toString() || '',\r\n    expYear: payment?.year?.toString()?.slice(-2) || '',\r\n    security: payment?.cvv,\r\n    email: payment?.email\r\n  }\r\n\r\n  return getCryptInfo(paymentData)\r\n}\r\n","import { useMutation, useQueryClient } from '@tanstack/react-query'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { TERMINALS_KEYS } from '../adapters'\r\nimport { generatePaymentByVirtualTerminal } from '../services'\r\n\r\nimport { getErrorAPI, getNotificationTypeByErrorCode } from '@/shared/interceptors'\r\n\r\nexport const useGeneratePaymentByVirtualTerminal = (options = {}) => {\r\n  const client = useQueryClient()\r\n  const payment = useMutation(generatePaymentByVirtualTerminal, options)\r\n  const transaction = async (formData, options) => {\r\n    const { onSuccess, onError, mutationOptions } = options\r\n\r\n    try {\r\n      await toast.promise(payment.mutateAsync(formData, mutationOptions), {\r\n        pending: 'Realizando Pago ...',\r\n        success: {\r\n          render({ data }) {\r\n            onSuccess(data)\r\n            client.invalidateQueries([TERMINALS_KEYS.MOVEMENTS])\r\n            return 'Se completó la transacción y se envió el comprobante con éxito'\r\n          }\r\n        }\r\n      })\r\n    } catch (error) {\r\n      const errorFormatted = getErrorAPI(\r\n        error,\r\n        `No se puede realizar esta operacion en este momento. Intente nuevamente o reporte a sistemas`\r\n      )\r\n      onError(errorFormatted)\r\n      toast.error(errorFormatted, {\r\n        type: getNotificationTypeByErrorCode(error)\r\n      })\r\n      client.invalidateQueries([TERMINALS_KEYS.MOVEMENTS])\r\n    }\r\n  }\r\n\r\n  return {\r\n    ...payment,\r\n    mutate: transaction\r\n  }\r\n}\r\n"],"names":["convertToDoubleDigit","number","PaymentByVirtualTerminalAdapter","terminal","payment","paymentData","_a","_b","_c","_e","_d","getCryptInfo","useGeneratePaymentByVirtualTerminal","options","client","useQueryClient","useMutation","generatePaymentByVirtualTerminal","formData","onSuccess","onError","mutationOptions","toast","data","TERMINALS_KEYS","error","errorFormatted","getErrorAPI","getNotificationTypeByErrorCode"],"mappings":"wjCAEA,SAASA,EAAqBC,EAAQ,CACpC,MAAO,YAAY,KAAKA,CAAM,EAAI,IAAMA,EAASA,CACnD,CAEO,MAAMC,GAAkC,CAACC,EAAUC,IAAY,eACpE,MAAMC,EAAc,CAClB,WAAYF,GAAA,YAAAA,EAAU,WACtB,WAAYA,GAAA,YAAAA,EAAU,WACtB,OAAQ,aACNG,EAAAF,GAAA,YAAAA,EAAS,SAAT,YAAAE,EAAiB,cAAe,GAAK,KAAMC,EAAAH,GAAA,YAAAA,EAAS,SAAT,YAAAG,EAAiB,WAAW,QAAQ,KAAM,GACtF,EAAC,SAAU,EACZ,YAAaH,GAAA,YAAAA,EAAS,QACtB,WAAYA,GAAA,YAAAA,EAAS,KACrB,MAAO,OAAOA,GAAA,YAAAA,EAAS,KAAK,GAC5B,WAAYA,GAAA,YAAAA,EAAS,WAAW,QAAQ,OAAQ,IAChD,WAAUI,EAAAR,GAAqBI,GAAA,YAAAA,EAAS,OAAQ,CAAC,IAAvC,YAAAI,EAA0C,aAAc,GAClE,UAASC,GAAAC,EAAAN,GAAA,YAAAA,EAAS,OAAT,YAAAM,EAAe,aAAf,YAAAD,EAA2B,MAAM,MAAO,GACjD,SAAUL,GAAA,YAAAA,EAAS,IACnB,MAAOA,GAAA,YAAAA,EAAS,KACjB,EAED,OAAOO,EAAaN,CAAW,CACjC,EChBaO,GAAsC,CAACC,EAAU,KAAO,CACnE,MAAMC,EAASC,EAAgB,EACzBX,EAAUY,EAAYC,EAAkCJ,CAAO,EA4BrE,MAAO,CACL,GAAGT,EACH,OA7BkB,MAAOc,EAAUL,IAAY,CAC/C,KAAM,CAAE,UAAAM,EAAW,QAAAC,EAAS,gBAAAC,CAAiB,EAAGR,EAEhD,GAAI,CACF,MAAMS,EAAM,QAAQlB,EAAQ,YAAYc,EAAUG,CAAe,EAAG,CAClE,QAAS,sBACT,QAAS,CACP,OAAO,CAAE,KAAAE,GAAQ,CACf,OAAAJ,EAAUI,CAAI,EACdT,EAAO,kBAAkB,CAACU,EAAe,SAAS,CAAC,EAC5C,gEACR,CACF,CACT,CAAO,CACF,OAAQC,EAAO,CACd,MAAMC,EAAiBC,EACrBF,EACA,8FACD,EACDL,EAAQM,CAAc,EACtBJ,EAAM,MAAMI,EAAgB,CAC1B,KAAME,EAA+BH,CAAK,CAClD,CAAO,EACDX,EAAO,kBAAkB,CAACU,EAAe,SAAS,CAAC,CACpD,CACF,CAKA,CACH"}