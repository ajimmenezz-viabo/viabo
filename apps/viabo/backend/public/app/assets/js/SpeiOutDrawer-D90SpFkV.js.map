{"version":3,"mappings":"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","names":["SpeiOutForm","Lodable","lazy","SpeiOutConcentratorForm","SpeiOutResume","SpeiOutSuccess","SpeiOutDrawer","twoAuth","permissions","useUser","view","setView","useState","speiOutOptions","useMemo","getSpeiOutOptionByPermissions","defaultOption","find","option","default","isCompaniesView","SPEI_OUT_DESTINATION","COMPANIES","id","isThirdAccountsView","THIRD_ACCOUNTS","isConcentratorView","CONCENTRATOR","setOpenSpeiOut","openSpeiOut","selectedAccount","useAdminDashboardSpeiStore","currentBalance","setCurrentBalance","transactionForm","setTransactionForm","balance","number","showResume","setShowResume","transactionData","setTransactionData","successTransaction","setSuccessTransaction","transactionLoading","setTransactionLoading","data","thirdAccountList","isLoading","isLoadingThirdAccountList","isError","isErrorThirdAccounts","error","errorThirdAccounts","refetch","refetchThirdAccounts","useFindSpeiThirdAccountsList","enabled","companies","state","insufficient","parseFloat","toFixed","titleTransaction","jsx","Typography","accounts","handleClose","handleSuccessForm","values","transactions","concept","origin","internal","handleBackResume","handleSuccess","transaction","handleChangeView","event","newValue","useEffect","renderContentTransaction","jsxs","Fragment","Stack","py","px","ToggleButtonGroup","map","ToggleButton","name","RightPanel","RequestLoadingComponent","ErrorRequestPage","m","varFade","in","display","flex","overflow","flexDirection","TwoAuthDisabled"],"sources":["../../../../../frontend/src/app/business/viabo-spei/dashboard/components/spei-out/SpeiOutDrawer.jsx"],"sourcesContent":["import { lazy, useEffect, useMemo, useState } from 'react'\r\n\r\nimport { Stack, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material'\r\nimport { m } from 'framer-motion'\r\n\r\nimport { useAdminDashboardSpeiStore } from '../../store'\r\n\r\nimport { SPEI_OUT_DESTINATION, getSpeiOutOptionByPermissions } from '@/app/business/viabo-spei/shared/permissions'\r\nimport { useFindSpeiThirdAccountsList } from '@/app/business/viabo-spei/third-accounts/hooks'\r\nimport { RightPanel } from '@/app/shared/components'\r\nimport { varFade } from '@/shared/components/animate'\r\nimport { RequestLoadingComponent } from '@/shared/components/loadings'\r\nimport { Lodable } from '@/shared/components/lodables'\r\nimport { ErrorRequestPage, TwoAuthDisabled } from '@/shared/components/notifications'\r\nimport { useUser } from '@/shared/hooks'\r\n\r\nconst SpeiOutForm = Lodable(lazy(() => import('./SpeiOutForm')))\r\nconst SpeiOutConcentratorForm = Lodable(lazy(() => import('./SpeiOutConcentratorForm')))\r\nconst SpeiOutResume = Lodable(lazy(() => import('./SpeiOutResume')))\r\nconst SpeiOutSuccess = Lodable(lazy(() => import('./SpeiOutSuccess')))\r\n\r\nconst SpeiOutDrawer = () => {\r\n  const { twoAuth, permissions } = useUser()\r\n  const [view, setView] = useState(null)\r\n\r\n  const speiOutOptions = useMemo(() => getSpeiOutOptionByPermissions(permissions), [permissions])\r\n  const defaultOption = useMemo(() => speiOutOptions?.find(option => option?.default), [speiOutOptions])\r\n\r\n  const isCompaniesView = view === SPEI_OUT_DESTINATION.COMPANIES.id\r\n  const isThirdAccountsView = view === SPEI_OUT_DESTINATION.THIRD_ACCOUNTS.id\r\n  const isConcentratorView = view === SPEI_OUT_DESTINATION.CONCENTRATOR.id\r\n\r\n  const { setOpenSpeiOut, openSpeiOut, selectedAccount } = useAdminDashboardSpeiStore()\r\n\r\n  const [currentBalance, setCurrentBalance] = useState(0)\r\n  const [transactionForm, setTransactionForm] = useState(null)\r\n  const balance = useMemo(() => selectedAccount?.balance?.number, [selectedAccount?.balance])\r\n  const [showResume, setShowResume] = useState(false)\r\n  const [transactionData, setTransactionData] = useState(null)\r\n  const [successTransaction, setSuccessTransaction] = useState(null)\r\n  const [transactionLoading, setTransactionLoading] = useState(false)\r\n\r\n  const {\r\n    data: thirdAccountList,\r\n    isLoading: isLoadingThirdAccountList,\r\n    isError: isErrorThirdAccounts,\r\n    error: errorThirdAccounts,\r\n    refetch: refetchThirdAccounts\r\n  } = useFindSpeiThirdAccountsList({ enabled: !!(openSpeiOut && twoAuth) })\r\n\r\n  const companies = useAdminDashboardSpeiStore(state => state.companies)\r\n\r\n  const insufficient = useMemo(\r\n    () => Boolean((parseFloat(balance) - currentBalance).toFixed(2) < 0),\r\n    [currentBalance, balance]\r\n  )\r\n  const titleTransaction = <Typography variant=\"h6\">SPEI Out</Typography>\r\n\r\n  const isLoading = isLoadingThirdAccountList\r\n\r\n  const isError = isErrorThirdAccounts\r\n  const error = errorThirdAccounts\r\n\r\n  const accounts = useMemo(() => {\r\n    if (isCompaniesView) {\r\n      return companies\r\n    }\r\n    if (isThirdAccountsView) {\r\n      return thirdAccountList\r\n    }\r\n    return []\r\n  }, [view, thirdAccountList, companies])\r\n\r\n  const handleClose = () => {\r\n    setOpenSpeiOut(false)\r\n    setCurrentBalance(0)\r\n    setShowResume(false)\r\n    setTransactionData(null)\r\n    setTransactionLoading(false)\r\n    setTransactionForm(null)\r\n    setSuccessTransaction(null)\r\n  }\r\n\r\n  const handleSuccessForm = values => {\r\n    setTransactionForm(values)\r\n\r\n    setTransactionData({\r\n      transactions: values?.transactions || [],\r\n      concept: values?.concept,\r\n      balance,\r\n      origin: values?.origin,\r\n      internal: !isThirdAccountsView,\r\n      currentBalance\r\n    })\r\n    setShowResume(true)\r\n  }\r\n\r\n  const handleBackResume = () => {\r\n    setShowResume(false)\r\n  }\r\n\r\n  const handleSuccess = transaction => {\r\n    setShowResume(false)\r\n    setSuccessTransaction(transaction)\r\n  }\r\n\r\n  const handleChangeView = (event, newValue) => {\r\n    if (newValue) {\r\n      setView(newValue)\r\n      setTransactionForm(null)\r\n    }\r\n  }\r\n\r\n  const refetch = () => {\r\n    refetchThirdAccounts()\r\n  }\r\n\r\n  useEffect(() => {\r\n    setView(defaultOption?.id)\r\n  }, [defaultOption])\r\n\r\n  const renderContentTransaction = (\r\n    <>\r\n      <Stack alignItems={'flex-end'} sx={{ py: 1, px: 3 }}>\r\n        <ToggleButtonGroup\r\n          size={'small'}\r\n          color=\"primary\"\r\n          value={view}\r\n          exclusive\r\n          onChange={handleChangeView}\r\n          aria-label=\"Platform\"\r\n          disabled={transactionLoading}\r\n        >\r\n          {speiOutOptions?.map(option => (\r\n            <ToggleButton key={option?.id} value={option?.id}>\r\n              {option?.name}\r\n            </ToggleButton>\r\n          ))}\r\n        </ToggleButtonGroup>\r\n      </Stack>\r\n      {isConcentratorView ? (\r\n        <SpeiOutConcentratorForm\r\n          insufficient={insufficient}\r\n          onSuccess={handleSuccessForm}\r\n          setCurrentBalance={setCurrentBalance}\r\n          initialValues={transactionForm}\r\n          selectedAccount={selectedAccount}\r\n        />\r\n      ) : (\r\n        <SpeiOutForm\r\n          key={view}\r\n          accounts={accounts || []}\r\n          insufficient={insufficient}\r\n          onSuccess={handleSuccessForm}\r\n          setCurrentBalance={setCurrentBalance}\r\n          initialValues={transactionForm}\r\n          selectedAccount={selectedAccount}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n\r\n  if (!twoAuth) {\r\n    return (\r\n      <RightPanel open={openSpeiOut} handleClose={handleClose} titleElement={titleTransaction}>\r\n        <Stack p={3}>\r\n          <TwoAuthDisabled\r\n            titleMessage={'Google Authenticator'}\r\n            errorMessage={\r\n              'Para realizar esta operación debe activar y configurar el Doble Factor de Autentificación (2FA) desde su perfil.'\r\n            }\r\n          />\r\n        </Stack>\r\n      </RightPanel>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <RightPanel open={openSpeiOut} handleClose={handleClose} titleElement={titleTransaction}>\r\n      {isLoading && <RequestLoadingComponent />}\r\n\r\n      {isError && !isLoading && (\r\n        <ErrorRequestPage errorMessage={error} titleMessage={'Lista de Cuentas'} handleButton={() => refetch()} />\r\n      )}\r\n\r\n      {!isError && !isLoading && openSpeiOut && !showResume && !successTransaction && (\r\n        <m.div\r\n          variants={varFade().in}\r\n          style={{\r\n            display: showResume ? 'none' : 'flex',\r\n            flex: 1,\r\n            overflow: 'hidden',\r\n            flexDirection: 'column'\r\n          }}\r\n        >\r\n          {renderContentTransaction}\r\n        </m.div>\r\n      )}\r\n\r\n      {!isError && !isLoading && openSpeiOut && showResume && !successTransaction && (\r\n        <m.div variants={varFade().in}>\r\n          <SpeiOutResume\r\n            data={transactionData}\r\n            onBack={handleBackResume}\r\n            setTransactionLoading={setTransactionLoading}\r\n            transactionLoading={transactionLoading}\r\n            onSuccess={handleSuccess}\r\n          />\r\n        </m.div>\r\n      )}\r\n\r\n      {!isError && !isLoading && openSpeiOut && !showResume && successTransaction && (\r\n        <m.div variants={varFade().in}>\r\n          <SpeiOutSuccess transactions={successTransaction} onFinish={handleClose} />\r\n        </m.div>\r\n      )}\r\n    </RightPanel>\r\n  )\r\n}\r\n\r\nexport default SpeiOutDrawer\r\n"],"file":"assets/js/SpeiOutDrawer-D90SpFkV.js"}